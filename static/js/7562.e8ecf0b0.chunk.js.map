{"version":3,"file":"static/js/7562.e8ecf0b0.chunk.js","mappings":"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","sources":["components/auth/SignIn.tsx","components/general/GameBanner.tsx","components/general/GameTags.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx"],"sourcesContent":["import { useMutation } from '@tanstack/react-query';\nimport type { UserCredential } from 'firebase/auth';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { Button, Form, Input, Alert, Image, App, Switch, Space, type ButtonProps } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Services\nimport { resetPassword, signIn, signInWithGoogle } from 'services/firebase';\n// Icons\nimport { GoogleIcon } from 'icons/GoogleIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Title } from 'components/text';\n// Images\nimport logo from 'assets/images/tarde-divertida-logo.svg';\n\ntype SignInProps = {\n  onSuccess: GenericFunction;\n};\n\nexport function SignIn({ onSuccess }: SignInProps) {\n  const [view, setView] = useState('google');\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__logo\">\n        <Image src={logo} preview={false} />\n      </div>\n\n      <SpaceContainer>\n        <Switch\n          checkedChildren={<Translate pt=\"E-mail e senha\" en=\"Email and Password\" />}\n          unCheckedChildren=\"Google\"\n          onChange={(checked) => setView(checked ? 'email' : 'google')}\n        />\n      </SpaceContainer>\n\n      {view === 'google' ? (\n        <SignInWithGoogle onSuccess={onSuccess} />\n      ) : (\n        <SignInWithEmail onSuccess={onSuccess} />\n      )}\n    </div>\n  );\n}\n\nexport function SignInWithGoogle({ onSuccess, ...buttonProps }: SignInProps & ButtonProps) {\n  const { isPending, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signInWithGoogle(),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Space className=\"div-container\" direction=\"vertical\" align=\"center\" classNames={{ item: 'full-width' }}>\n      <>\n        {isError && (\n          <Alert\n            description={\n              <Translate pt=\"Algo deu errado, tente novamente\" en=\"Something went wrong. Please try again\" />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        )}\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={onFinish}\n          loading={isPending}\n          block\n          icon={<IconAvatar icon={<GoogleIcon />} size=\"small\" />}\n          {...buttonProps}\n        >\n          <Translate pt=\"Entrar com Google\" en=\"Sign in with Google\" />\n        </Button>\n      </>\n    </Space>\n  );\n}\n\nfunction SignInWithEmail({ onSuccess }: SignInProps) {\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const { isPending, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signIn(form.getFieldValue('username'), form.getFieldValue('password')),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <>\n      <Form\n        name=\"login\"\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: translate('e-mail é um campo obrigatório', 'e-mail is required'),\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label={<Translate pt=\"Senha\" en=\"Password\" />}\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: translate('e-mail é um campo obrigatório', 'e-mail is required'),\n            },\n          ]}\n          help={translate('Mínimo 6 caracteres', 'Minimum of 6 characters')}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {isError && (\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Alert\n              description={\n                <Translate\n                  pt=\"Algo deu errado, tente novamente\"\n                  en=\"Something went wrong. Please try again\"\n                />\n              }\n              type=\"error\"\n              showIcon\n              className=\"sign-in__error-alert\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isPending}>\n            <Translate pt=\"Entrar\" en=\"Submit\" />\n          </Button>\n\n          <Button type=\"link\" onClick={() => setShowForgotPassword((v) => !v)}>\n            <Translate pt=\"Esqueci minha senha\" en=\"Forgot my password\" />\n          </Button>\n        </Form.Item>\n      </Form>\n      {showForgotPassword && (\n        <Alert\n          type=\"info\"\n          message={\n            <ResetPasswordForm\n              email={form.getFieldValue('username')}\n              onSuccess={() => setShowForgotPassword(false)}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\ntype ResetPasswordFormProps = {\n  email?: string;\n  onSuccess: GenericFunction;\n};\n\nfunction ResetPasswordForm({ email, onSuccess }: ResetPasswordFormProps) {\n  const { message } = App.useApp();\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n\n  const { isPending, mutate, isError } = useMutation({\n    mutationFn: async () => await resetPassword(form.getFieldValue('username')),\n    onSuccess: () => {\n      onSuccess();\n      message.success(\n        translate(\n          'Verifique seu e-mail enviado para redefinir a sua senha',\n          'Verify your email to reset your password',\n        ),\n      );\n    },\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Form\n      name=\"forgot-password\"\n      form={form}\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ username: email, remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item>\n        <Title level={4} size=\"xx-small\">\n          <Translate pt=\"Redefinir a senha\" en=\"Password Reset\" />\n        </Title>\n      </Form.Item>\n      <Form.Item\n        label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: translate('e-mail é um campo obrigatório', 'e-mail is required'),\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {isError && (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Alert\n            description={\n              <Translate\n                pt=\"Algo deu errado, provavelmente este e-mail não existe no banco de dados da Tarde Divertida\"\n                en=\"Something went wrong. Please try again\"\n              />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isPending}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import { motion } from 'framer-motion';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n\ntype BannerProps = {\n  /**\n   * Display title of the game\n   */\n  title?: DualLanguageValue;\n  /**\n   * Name (collection key) of the game\n   */\n  gameName?: string;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * Determine if image should be able to be previewed\n   */\n  preview?: boolean;\n};\n\nexport function GameBanner({ title, gameName, className, preview }: BannerProps) {\n  const { language } = useLanguage();\n\n  return (\n    <figure>\n      <Image\n        alt={title?.[language]}\n        src={`${PUBLIC_URL.BANNERS}${gameName}-${language}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n        className={className}\n        preview={preview}\n      />\n    </figure>\n  );\n}\n\ntype GameStripProps = {\n  /**\n   * Name (collection key) of the game\n   */\n  gameName: string;\n  /**\n   *\n   */\n  width: number;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  title: DualLanguageValue;\n  /**\n   *\n   */\n  stripWidth?: number | string;\n  /**\n   * any additional content\n   */\n  children?: ReactNode;\n  /**\n   * Show logo\n   */\n  showLogo?: boolean;\n};\n\nexport function GameStrip({\n  gameName,\n  width,\n  title,\n  stripWidth = '100%',\n  className,\n  children,\n  showLogo = true,\n}: GameStripProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const logoHeight = width / 1.5; // Logo width/height ratio is 1.5\n  const backgroundHeight = logoHeight;\n\n  return (\n    <div\n      style={{\n        width: typeof stripWidth === 'number' ? `${stripWidth}px` : stripWidth,\n        minWidth: `${width}px`,\n        height: `${backgroundHeight}px`,\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n      className={className}\n    >\n      <img\n        src={`${PUBLIC_URL.STRIPS}strip-${gameName}.jpg`}\n        alt={`${dualTranslate(title)} background`}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        }}\n      />\n      <motion.img\n        src={`${PUBLIC_URL.LOGOS}logo-${gameName}-${language}.svg`}\n        alt={`${dualTranslate(title)} logo`}\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: `${width}px`,\n          height: `${logoHeight}px`,\n          opacity: showLogo ? 1 : 0,\n          transition: 'opacity 0.5s',\n        }}\n        animate={{\n          transform: ['translate(-50%, -50%)', 'translate(-50%, -45%)', 'translate(-50%, -50%)'],\n          transition: { duration: 7, repeat: Number.POSITIVE_INFINITY },\n        }}\n      />\n      {children}\n    </div>\n  );\n}\n","import { useMemo } from 'react';\n// Ant Design Resources\nimport { Space, type SpaceProps, Tag, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n// Icons\nimport { BrainIcon } from 'icons/BrainIcon';\nimport { CloverIcon } from 'icons/CloverIcon';\nimport { CompetitiveGameIcon } from 'icons/CompetitiveGameIcon';\nimport { CooperativeGameIcon } from 'icons/CooperativeGameIcon';\nimport { DrawingIcon } from 'icons/DrawingIcon';\nimport { EvaluateIcon } from 'icons/EvaluateIcon';\nimport { GamblingChipIcon } from 'icons/GamblingChipIcon';\nimport { ImageCardsIcon } from 'icons/ImageCardsIcon';\nimport { MedalIcon } from 'icons/MedalIcon';\nimport { PuzzleIcon } from 'icons/PuzzleIcon';\nimport { RobotIcon } from 'icons/RobotIcon';\nimport { SmartphoneIcon } from 'icons/SmartphoneIcon';\nimport { TalkIcon } from 'icons/TalkIcon';\nimport { ThinkingIcon } from 'icons/ThinkingIcon';\nimport { TimerIcon } from 'icons/TimerIcon';\nimport { TogetherGameIcon } from 'icons/TogetherGameIcon';\nimport { TraitorIcon } from 'icons/TraitorIcon';\nimport { TurnBasedGameIcon } from 'icons/TurnBasedGameIcon';\nimport { VoteIcon } from 'icons/VoteIcon';\nimport { WritingIcon } from 'icons/WritingIcon';\n// Sass\nimport './GameTags.scss';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\nconst icons: Dictionary<any> = {\n  competitive: CompetitiveGameIcon,\n  cooperative: CooperativeGameIcon,\n  'same-time': TogetherGameIcon,\n  'turn-based': TurnBasedGameIcon,\n  drawing: DrawingIcon,\n  writing: WritingIcon,\n  guessing: ThinkingIcon,\n  voting: VoteIcon,\n  pairing: EvaluateIcon,\n  'push-your-luck': CloverIcon,\n  'brain-burner': BrainIcon,\n  discussion: TalkIcon,\n  timed: TimerIcon,\n  traitor: TraitorIcon,\n  images: ImageCardsIcon,\n  betting: GamblingChipIcon,\n  achievements: MedalIcon,\n  bots: RobotIcon,\n  'mobile-friendly': SmartphoneIcon,\n  puzzle: PuzzleIcon,\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n\n  const { buttonTags, otherTags } = useMemo(() => {\n    const sortedTags = sortTags(tags);\n\n    const buttonTags = sortedTags.filter((tag) => icons[tag]);\n\n    const otherTags = sortedTags.filter((tag) => !icons[tag]);\n\n    return { buttonTags, otherTags };\n  }, [tags]);\n\n  return (\n    <Space wrap {...rest} direction=\"vertical\">\n      <div className=\"game-tags-group\">\n        {buttonTags.map((tag) => {\n          const Icon = icons[tag];\n\n          return (\n            <Tooltip key={`${gameCode}-${tag}`} title={TAG_DICT[tag]?.label[language]}>\n              <Icon style={{ width: 36 }} className=\"game-tags-group__icon\" />\n            </Tooltip>\n          );\n        })}\n      </div>\n\n      {otherTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Collapse, type CollapseProps } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: ReactNode;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps) {\n  const panels: CollapseProps['items'] = [\n    {\n      key: '1',\n      label: <Translate pt=\"Regras\" en=\"Rules\" custom={title} />,\n      children: children,\n    },\n  ];\n\n  return (\n    <Instruction contained>\n      <Collapse ghost items={panels} />\n    </Instruction>\n  );\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps) {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n    />\n  );\n}\n","import type { CarouselRef } from 'antd/es/carousel';\nimport clsx from 'clsx';\nimport { createRef } from 'react';\nimport { useKeyPressEvent } from 'react-use';\n// Ant Design Resources\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Types\nimport type { GameInfo } from 'types/game-info';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional custom class name\n   */\n  ruleClassName?: string;\n  /**\n   * Optional custom class name\n   */\n  actionsClassName?: string;\n};\n\nexport function RulesCarousel({\n  info,\n  className = '',\n  ruleClassName = '',\n  actionsClassName,\n}: RulesCarouselProps) {\n  const { language } = useLanguage();\n  const ref = createRef<CarouselRef>();\n\n  useKeyPressEvent('ArrowLeft', () => {\n    ref.current?.prev();\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    ref.current?.next();\n  });\n\n  return (\n    <div>\n      <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000} ref={ref}>\n        {info.rules[language].map((rule, index) => (\n          <div className={clsx('rules-carousel__rule', className)} key={rule}>\n            <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n            <Image\n              className=\"rules-carousel__image\"\n              src={\n                index === 0\n                  ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                  : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n              }\n              fallback={`${PUBLIC_URL.RULES}no-rules.jpg`}\n              alt={rule}\n            />\n            <Typography.Paragraph className={clsx('rules-carousel__rule-text', ruleClassName)}>\n              {rule}\n            </Typography.Paragraph>\n          </div>\n        ))}\n      </Carousel>\n      <SpaceContainer className={actionsClassName}>\n        <Button type=\"default\" ghost onClick={() => ref.current?.prev()} size=\"small\">\n          <DoubleLeftOutlined /> <Translate pt=\"Regra Anterior\" en=\"Previous Rule\" />\n        </Button>\n        <Button type=\"default\" ghost onClick={() => ref.current?.next()} size=\"small\">\n          <Translate pt=\"Próxima Regra\" en=\"Next Rule\" /> <DoubleRightOutlined />\n        </Button>\n      </SpaceContainer>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps) {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\nimport { Button, type ButtonProps, Modal } from 'antd';\n// Types\nimport type { GameInfo } from 'types/game-info';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps) {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <div className=\"rules-modal-content\">\n            <RulesCarousel info={gameInfo} />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["SignIn","onSuccess","useState","view","setView","className","src","logo","preview","checkedChildren","pt","en","unCheckedChildren","onChange","checked","SignInWithGoogle","SignInWithEmail","buttonProps","useMutation","mutationFn","signInWithGoogle","isPending","mutate","isError","direction","align","classNames","item","A","description","type","showIcon","size","onClick","loading","block","icon","Form","useForm","form","translate","useLanguage","showForgotPassword","setShowForgotPassword","signIn","getFieldValue","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","autoComplete","Item","label","rules","required","message","help","Password","offset","htmlType","v","ResetPasswordForm","email","App","useApp","resetPassword","success","username","level","GameBanner","title","gameName","language","alt","PUBLIC_URL","BANNERS","fallback","GameStrip","width","stripWidth","children","showLogo","dualTranslate","logoHeight","backgroundHeight","minWidth","height","position","overflow","STRIPS","top","left","objectFit","img","LOGOS","transform","opacity","transition","animate","duration","repeat","Number","POSITIVE_INFINITY","icons","competitive","CompetitiveGameIcon","cooperative","CooperativeGameIcon","TogetherGameIcon","TurnBasedGameIcon","drawing","DrawingIcon","writing","WritingIcon","guessing","ThinkingIcon","voting","VoteIcon","pairing","EvaluateIcon","CloverIcon","BrainIcon","discussion","TalkIcon","timed","TimerIcon","traitor","TraitorIcon","images","ImageCardsIcon","betting","GamblingChipIcon","achievements","MedalIcon","bots","RobotIcon","SmartphoneIcon","puzzle","PuzzleIcon","GameTags","tags","gameCode","rest","useMemo","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","Boolean","sortTags","buttonTags","otherTags","wrap","map","Icon","color","CollapsibleRule","panels","key","custom","contained","ghost","items","PopoverRule","content","showLabel","ReadOutlined","RulesCarousel","info","ruleClassName","actionsClassName","ref","createRef","useKeyPressEvent","current","prev","next","clsx","autoplay","autoplaySpeed","rule","RULES","Paragraph","SpaceContainer","DoubleLeftOutlined","DoubleRightOutlined","RulesList","RulesModal","gameInfo","isVisible","setVisibility","onCloseModal","open","onCancel","footer"],"sourceRoot":""}