{"version":3,"file":"static/js/sinais-de-alerta.dfc9ff64.chunk.js","mappings":"yTAsCMA,EAAc,CAAEC,GAAI,eAAgBC,GAAI,WAEvC,SAASC,EAAT,GAA6F,IAArEC,EAAoE,EAApEA,QAASC,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,YAC/D,OACE,UAAC,IAAD,CACEC,OAAO,SAAC,KAAD,CAAWP,GAAG,WAAWC,GAAG,iBACnCO,WAAY,CACVF,YAAAA,EACAG,KAAM,SAERC,WAAWC,EAAAA,EAAAA,GAAK,gBAAgBC,EAAAA,EAAAA,IAAkB,WANpD,UAQ2B,IAAxBR,EAAaS,SACZ,SAAC,KAAD,CAAaC,WAAS,EAAtB,UACE,SAAC,KAAD,CACEd,IACE,+EAEE,kBAFF,gFAMFC,IACE,+EAEE,kBAFF,kEASR,eAAIS,UAAU,oBAAd,SACGN,EAAaW,KAAI,SAACC,EAAaC,GAAW,IAAD,MACxC,YAA6CZ,EAAUW,EAAYE,aAAnE,QAA4E,CAAC,EAA7E,IAAQC,KAAAA,OAAR,MAAe,OAAf,EAA0BC,GAA1B,YACMC,EAASlB,EAAQa,EAAYM,UACnC,OACE,UAAC,IAAOC,IAAR,gBAEEb,UAAW,uBACPc,EAAAA,EAAAA,GAAa,UAAW,CAC1BC,SAAU,EACVC,OAAQT,EAAQb,EAAaS,OAAS,EAAII,EAAQb,EAAaS,OAAS,EAAII,GAAS,OALzF,eAQE,gBAAKP,UAAU,qBAAf,UACE,SAAC,IAAD,CAAOiB,GAAIR,OAEb,eAAIT,UAAU,qBAAd,UACE,SAAC,KAAD,oBAAgBU,EAAeb,aAA/B,QAAwCR,OAE1C,gBAAKW,UAAU,sBAAf,UACE,SAAC,KAAD,CAAQiB,GAAIN,EAAOO,cAErB,gBAAKlB,UAAU,oBAAf,SAAoCW,EAAOQ,OAC1CC,QAAQV,EAAeW,eACtB,gBAAKrB,UAAU,2BAAf,UACE,SAAC,IAAD,CACEsB,SACE,6BACE,SAAC,KAAD,oBAAgBZ,EAAeW,mBAA/B,QAA8ChC,IADhD,KAEGkC,OAAOjB,EAAYkB,OAFtB,OAFJ,UAQE,SAAC,KAAD,CAAQf,MAAM,SAAC,IAAD,IAA4BgB,MAAM,SAASjB,KAAK,OAAOT,KAAK,iBA5BlF,sBACsBO,EAAYE,MAiCrC,QAIR,C,0OC5FM,SAASkB,EAAT,GAQa,IAPlB7B,EAOiB,EAPjBA,MACA8B,EAMiB,EANjBA,SACA3B,EAKiB,EALjBA,UACAI,EAIiB,EAJjBA,UACAN,EAGiB,EAHjBA,WACA8B,EAEiB,EAFjBA,aACGC,GACc,YACjB,SAA4D/B,QAA5D,IAA4DA,EAAAA,EAAc,CAAC,EAA3E,IAAQgC,MAAAA,OAAR,MAAgB,EAAhB,MAAmB/B,KAAAA,OAAnB,MAA0B,WAA1B,EAAyCgC,GAAzC,YAEA,SAKIH,QALJ,IAKIA,EAAAA,EAAgB,CAAC,EAJRI,EADb,EACEhC,UADF,IAEEiC,KAAAA,OAFF,aAGEC,UAAWC,OAHb,MAGiC,aAHjC,EAIKC,GAJL,YAOA,OACE,UAAC,KAAD,gBAAOF,UAAU,WAAWlC,WAAWC,EAAAA,EAAAA,GAAK,oBAAqBD,IAAgB6B,GAAjF,eACE,SAAC,MAAD,gBAAOC,MAAOA,EAAO/B,KAAMA,GAAUgC,GAArC,aACGlC,MAGH,SAAC,KAAD,gBACEqC,UAAWC,EACXF,KAAMA,EACNjC,WAAWC,EAAAA,EAAAA,GACT,8BACAG,GAAa,yCACb4B,IAEEI,GARN,aAUGT,QAIR,C,wECtDM,SAASU,EAAT,GAAmF,IAAxDV,EAAuD,EAAvDA,SAAUnB,EAA6C,EAA7CA,KAAM8B,EAAuC,EAAvCA,SAAUtC,EAA6B,EAA7BA,UAC1D,OACE,SAAC,IAAD,CAAiBS,MAAM,SAAC,IAAD,IAAcD,KAAMA,EAAM8B,SAAUA,EAAUtC,UAAWA,EAAhF,SACG2B,GAGN,C,oNCaD,SAASY,EAAT,GAA6E,IAAtDC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,MAAOpB,EAAiC,EAAjCA,YACnCqB,EAAaF,EAAc,EAC3BG,EAAaH,EAAc,EACjC,OACE,eACExC,WAAWC,EAAAA,EAAAA,GACT,8BACAyC,GAAc,oCACdC,GAAc,qCAHD,uCAImBF,IALpC,UAQE,UAAC,IAAD,CACE5C,MAAK,OAAEwB,QAAF,IAAEA,EAAAA,GAAe,SAAC,KAAD,CAAW/B,GAAG,gBAAgBC,GAAG,kBACvDqD,MAAOF,EAAa,OAASC,EAAa,MAAQ,OAFpD,UAIGD,EAAa,IAAM,GACnBF,MAIR,CAQD,SAASK,EAAT,GAAqG,IAA7EC,EAA4E,EAA5EA,aAAclC,EAA8D,EAA9DA,SAA8D,IAApDmC,yBAAAA,OAAoD,MAAzB,GAAyB,EAC5FC,EAASC,MAAMC,QAAQJ,GAAgBA,EAAe,CAACA,GAC7D,OACE,eAAI9C,UAAU,oCAAd,SACGgD,EAAO3C,KAAI,SAACmC,EAAajC,GAAd,OACV,SAACgC,EAAD,CAEEC,YAAaA,EACbC,MAAOlC,EACPc,YAAa0B,EAAyBxC,IAJxC,uBACuBK,EADvB,YACmCL,GAFzB,KAUjB,CAUM,SAAS4C,EAAT,GAMgB,IALrB1D,EAKoB,EALpBA,QACA2D,EAIoB,EAJpBA,QACAL,EAGoB,EAHpBA,yBAGoB,IAFpBM,iBAAAA,OAEoB,aADpBrC,MAAAA,OACoB,MADZ,EACY,EACpB,GAAsCsC,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAsB,IAAhE,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,KAA1B,eAAOC,EAAP,KAAcC,EAAd,KAAcA,OAERC,GAAYC,EAAAA,EAAAA,UAAQ,kBAAMC,KAAKC,IAAL,MAAAD,MAAI,OAAQd,EAAQ/C,KAAI,SAAC+D,GAAD,OAAYA,EAAOC,QAAnB,KAA9B,GAA6D,CAACjB,IAEhFkB,GAAYC,EAAAA,EAAAA,GAAa,CAC/BxD,SAAU,EAAIC,EACdwD,WAAW,EACXC,SAAU,WACRb,EAAU,GACVJ,EAAe,EAChB,IANKc,QA6DR,OAnDAI,EAAAA,EAAAA,IAAc,WACZ,IAAMC,EAAyB,CAAC,EAC5BC,EAAe,EACfC,EAAa,EAEXC,GAAuBC,EAAAA,EAAAA,SAAQ3B,EAAS,CAAC,WAAY,QAAS,CAAC,OAAQ,QAAQ4B,QACnF,SAACC,EAAkBC,EAAO3E,GAQxB,OAPA0E,EAAIC,EAAMtE,UAAYL,GAEH,IAAfsE,GAAoBK,EAAMb,SAAWQ,KACvCA,EAAaK,EAAMb,SACnBO,GAAgB,GAElBD,EAAUO,EAAMtE,UAAY,CAAC,EAAGgE,GACzBK,CACR,GACD,CAAC,GAGGE,GAAsBJ,EAAAA,EAAAA,SAAQ3B,EAAS,CAAC,gBAAiB,QAAS,CAAC,OAAQ,QAGjFwB,EAAe,EACfC,EAAa,EAEb,IAAMO,EAAiCD,EAAoB9E,KAAI,SAAC6E,EAAO3E,GACrE,IAAM8E,GAAQ,UAAQH,GAUtB,OARAG,EAAS5C,MAAQ,CAAClC,EAAOuE,EAAqBO,EAASzE,WACvDyE,EAASC,SAAWX,EAAUU,EAASzE,WAEpB,IAAfiE,GAAoBK,EAAMK,cAAgBV,KAC5CA,EAAaK,EAAMK,cACnBX,GAAgB,GAElBS,EAASC,SAAS,GAAKV,EAChBS,CACR,IAED3B,EAAiB0B,EAClB,KAGDI,EAAAA,EAAAA,YAAU,WACJlB,IAAY,EAAItD,EAClBwC,EAAe,GACNc,IAAY,EAAItD,GACzBwC,EAAe,EAElB,GAAE,CAACc,EAAStD,KAGX,iBACEhB,WAAWC,EAAAA,EAAAA,GACT,gBACAqE,EAAU,GAAK,wBACH,IAAZA,IAAiBpE,EAAAA,EAAAA,IAAkB,WAErCuF,MAAO,CACL1B,OAAO,GAAD,QAAMG,KAAKC,IAAI,GAAIJ,GAAU,GAAKN,EAActD,OAAhD,OAPV,WAUE,iBACEH,UAAU,qBACViB,GAAG,0BACHwE,MAAO,CAAEC,QAAS,GAClB5B,IAAKA,EAJP,WAME,gBAAK9D,UAAU,4BAAf,UACE,SAAC2F,EAAA,EAAD,CAAa3F,UAAU,iCAEzB,gBAAKA,UAAU,+BAAf,iBACA,iBAAKA,UAAU,6BAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,KAAD,CAAQiB,GAAG,SAEb,gBAAKjB,UAAU,sBAAf,6BAEF,SAAC,IAAD,CAASH,OAAO,SAAC,KAAD,CAAWP,GAAG,oBAAoBC,GAAG,oBAAsBqD,MAAM,OAAjF,UACE,gBAAK5C,UAAU,6BAAf,kBAGF,SAAC6C,EAAD,CAAcC,aAAc,EAAGlC,SAAS,OAExC,SAAC,IAAD,CAASf,MAAM,QAAQ+C,MAAM,OAA7B,UACE,iBAAM5C,UAAU,mCAAhB,oBAIHyD,EAAcpD,KAAI,SAAC6E,EAAO3E,GAAW,IAAD,IAC3BK,EAAqEsE,EAArEtE,SAAUyD,EAA2Da,EAA3Db,SAAUkB,EAAiDL,EAAjDK,cAAezC,EAAkCoC,EAAlCpC,aAAcL,EAAoByC,EAApBzC,MAAO6C,EAAaJ,EAAbI,SAC1DM,GAAa1B,KAAKC,IAAI,GAAIJ,GAAU,IAAxB,UAA8BtB,EAAMkB,UAApC,QAA+C,GAEjE,OACE,iBACE3D,UAAS,iDAA4CO,GAGrDkF,MAAO,CAAEI,IAAI,GAAD,OAAKD,EAAL,OAJd,WAME,gBAAK5F,UAAU,4BAAf,SACGqE,EAAW,GAAKL,IAAcK,GAAYd,GAAe,IACxD,SAACoC,EAAA,EAAD,CAAa3F,UAAU,iCAG3B,iBAAKA,UAAU,+BAAf,wBAAgDsF,EAAS3B,UAAzD,QAAoE,OACpE,iBAAK3D,UAAU,6BAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,KAAD,CAAQiB,GAAIxB,EAAQmB,GAAUM,cAEhC,gBAAKlB,UAAU,sBAAf,SAAsCP,EAAQmB,GAAUO,WAE1D,SAAC,IAAD,CAAStB,OAAO,SAAC,KAAD,CAAWP,GAAG,oBAAoBC,GAAG,oBAAsBqD,MAAM,OAAjF,UACE,gBAAK5C,UAAU,6BAAf,SAA6CuF,OAE7ClC,GAAoBE,GAAe,QAAsBuC,IAAjBhD,IACxC,SAACD,EAAD,CACEC,aAAcA,EACdlC,SAAUA,EACVmC,yBAA0BA,KAI9B,SAAC,IAAD,CAASlD,MAAM,QAAQ+C,MAAM,OAA7B,SACGW,GAAe,GACd,iBAAMvD,UAAU,mCAAhB,SAAoDqE,KAEpD,iBAAMrE,UAAU,+CAAhB,SAAgEqE,QAjCtE,kBAEkBzD,GAoCrB,MAGN,C,2DC7LM,SAASmF,EAAT,GAQsB,IAAD,EAP1BtG,EAO0B,EAP1BA,QACA2D,EAM0B,EAN1BA,QACAL,EAK0B,EAL1BA,yBACApB,EAI0B,EAJ1BA,SACA9B,EAG0B,EAH1BA,MACAmG,EAE0B,EAF1BA,SACApG,EAC0B,EAD1BA,aAEAqG,EAAAA,EAAAA,KACA,IAAMC,GAAaC,EAAAA,EAAAA,MAEbC,EAAM,iBAAGxG,QAAH,IAAGA,EAAAA,EAAesG,EAAWtG,mBAA7B,QAA4C,QAExD,OACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAWA,YAAawG,EAAxB,gBAAiCvG,QAAjC,IAAiCA,EAAAA,EAAS,YAEzCmG,GAED,SAAC7C,EAAD,CAAc1D,QAASA,EAAS2D,QAASA,EAASL,yBAA0BA,KAC5E,UAAC,KAAD,CAAa/C,UAAU,iDAAiDJ,YAAawG,EAArF,WACE,SAACC,EAAA,EAAD,KACA,SAAC,KAAD,CACE/G,GAAG,iFACHC,GAAG,0DAEL,SAAC8G,EAAA,EAAD,OAGD1E,IAGN,C,qICZD,QAAe,IAA0B,mEClBzC,QAAe,IAA0B,mE,eCAlC,SAAS2E,EAAT,GAQqB,IAAD,IAPzBC,EAOyB,EAPzBA,MACAC,EAMyB,EANzBA,cACAC,EAKyB,EALzBA,WAKyB,IAJzBC,KAAAA,OAIyB,MAJlB,EAIkB,EAHzB1G,EAGyB,EAHzBA,UACA2B,EAEyB,EAFzBA,SAEyB,IADzBgF,YAAAA,OACyB,SACnBT,GAAaC,EAAAA,EAAAA,MACbS,EAAcV,EAAWW,cAC/BZ,EAAAA,EAAAA,KACA,IAAQa,GAAcC,EAAAA,EAAAA,KAAdD,UAEFE,EAAcJ,EAAc,CAAEK,YAAaL,GAAgB,CAAC,EAElE,OACE,gBAAK5G,WAAWC,EAAAA,EAAAA,GAAK,qBAAsBD,GAA3C,UACE,iBAAKA,UAAU,2BAAf,WACE,gBACEA,WAAWC,EAAAA,EAAAA,GACT,4BAC2B,SAA3BiG,EAAWtG,aAA0B,mCAHzC,UAME,gBAAKsH,IAAKJ,EAAUK,EAAcC,GAAeC,IAAKP,EAAU,SAAU,cAE5E,iBAAK9G,WAAWC,EAAAA,EAAAA,GAAK,qCAAqCC,EAAAA,EAAAA,IAAkB,WAA5E,WACE,gBAAKF,UAAU,6BAA6ByF,MAAOuB,KACnD,gBAAKhH,UAAU,+BAA+ByF,MAAOuB,KACrD,gBACEhH,WAAWC,EAAAA,EAAAA,GACT,6BAC2B,SAA3BiG,EAAWtG,aAA0B,oCAHzC,oCAMG2G,QANH,IAMGA,OANH,EAMGA,EAAOe,eANV,QAMqBf,SANrB,QAM8B,OAI/B5E,EAEAP,QAAQoF,KAAmBE,IAC1B,SAAC,KAAD,CAAQlG,KAAK,UAAU+G,QAASf,EAAexG,UAAU,gCAAzD,SACGyG,IAIJrF,QAAQoF,IAAkBpF,QAAQsF,KACjC,SAAC,KAAD,CACElG,KAAK,UACL+G,QAASf,EACT/B,SAAU+B,EACVzF,SAAU2F,EACVc,SAAUb,EALZ,UAOE,SAAC,KAAD,CAAWrH,GAAG,aAAaC,GAAG,WAAWkI,OAAQhB,UAM5D,C,mLC3EM,SAASiB,EAAT,GAKqB,IAAD,MAJzBC,EAIyB,EAJzBA,OACAC,EAGyB,EAHzBA,gBAGyB,IAFzBC,SAAAA,OAEyB,MAFd,OAEc,EADzBC,EACyB,EADzBA,gBAEMC,EAAa,UAAGJ,EAAOI,qBAAV,QAA2B,GACxCC,EAAgBD,EAAgBJ,EAAOxH,OAC7C,GAA+CoE,EAAAA,EAAAA,GAAa,CAC1DxD,SAAUiH,EACVxD,WAAW,EACXC,SAAU,kBAAMkD,EAAOlD,UAAb,IAHJwD,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,MAAOC,EAApC,EAAoCA,OAK9BC,EAAmB,OAAGT,QAAH,IAAGA,EAAAA,EAAmBD,EAAOW,0BAItD9C,EAAAA,EAAAA,YAAU,WACR,IAAM+C,EAAqBrE,KAAKC,IAC9B,EACAD,KAAKsE,IAAIb,EAAOxH,OAAS,EAAG+D,KAAKuE,OAAOT,EAAgBC,GAAYF,KAKtE,OAHIG,GAAaD,EAAWD,GAAiBC,EAAW,GAAKM,IAAuBZ,EAAOe,YACzFf,EAAOgB,cAAcJ,GAEhB,WAAQ,CAChB,GAAE,CAACN,EAAUN,EAAQI,EAAeC,IAErC,IAUMY,GAAQ3E,EAAAA,EAAAA,UAAQ,WACpB,OAAOhB,MAAM0E,EAAOxH,QACjB0I,KAAK,IACLxI,KAAI,SAACyI,EAAGC,GACP,OACE,gBAEE/I,UAAU,sCACVyF,MAAO,CAAEuD,MAAM,GAAD,OAAK,GAAKrB,EAAOxH,OAAjB,MAHhB,SAKG2I,GALH,4BAC4BA,EAAIC,GAOnC,GACJ,GAAE,CAACpB,EAAOxH,SAEX,OACE,iBAAKH,UAAU,uBAAf,WACE,iBAAKA,UAAU,iCAAf,WACE,gBAAKA,UAAU,sCAAf,SAAsD4I,KACtD,iBACE5I,UAAU,sCACVyF,MAAO,CACLuD,MAAM,GAAD,OAAKC,EAAkBjB,EAAeC,GAAtC,KACLiB,gBAAiBrB,SAKvB,UAAC,IAAD,CAAOpC,MAAO,CAAEC,QAAS2C,EAAsB,EAAI,KAAOrI,WAAWE,EAAAA,EAAAA,IAAkB,UAAvF,WACE,SAAC,KAAD,CACEH,KAAK,QACLU,MAAM,SAAC,IAAD,IACN8G,QA3CkB,WACxBY,IACAR,EAAOgB,eAAc,SAACQ,GAAD,OAAejF,KAAKC,IAAIgF,EAAI,EAAG,EAA/B,GACtB,EAyCO3B,SAAUa,GAA6C,IAAtBV,EAAOe,WAJ1C,UAME,SAAC,KAAD,CAAWpJ,GAAG,WAAWC,GAAG,gBAE9B,SAAC,KAAD,CACEQ,KAAK,QACLU,KAAMyH,GAAY,SAAC,IAAD,KAAoB,SAAC,IAAD,IACtCX,QAASW,EAAYC,EAAQC,KAE/B,UAAC,KAAD,CACErI,KAAK,QACLwH,QAlDc,WACpBY,IACAR,EAAOgB,eAAc,SAACQ,GAAD,OAAejF,KAAKsE,IAAIW,EAAI,EAAGxB,EAAOxH,OAAS,EAA/C,GACtB,EAgDOqH,SAAUa,GAAuBV,EAAOe,aAAef,EAAOxH,OAAS,EAHzE,WAKE,SAAC,KAAD,CAAWb,GAAG,aAAUC,GAAG,SAL7B,KAKuC,SAAC,IAAD,QAEvC,SAAC,MAAD,kBACMuI,GADN,IAEE/H,KAAK,QACLwH,QAAS,kBAAMI,EAAOlD,UAAb,EACThE,KAAI,iBAAEqH,QAAF,IAAEA,OAAF,EAAEA,EAAiBrH,YAAnB,SAA2B,SAAC,IAAD,IAC/B+G,SAAUa,EALZ,0BAOGP,QAPH,IAOGA,OAPH,EAOGA,EAAiBnG,gBAPpB,SAOgC,SAAC,KAAD,CAAWrC,GAAG,cAAcC,GAAG,wBAKtE,CAED,SAAS0J,EAAkBjB,EAAuBC,GAChD,OAAsB,IAAlBD,EAA4B,IACQ,KAAhC,EAAIC,EAAWD,EACxB,C,4GC7FM,SAASoB,EAAT,GASa,IARlBzH,EAQiB,EARjBA,SACAiG,EAOiB,EAPjBA,gBACAC,EAMiB,EANjBA,SAMiB,IALjB7H,UAAAA,OAKiB,MALL,GAKK,MAJjBqJ,cAAAA,OAIiB,MAJD,GAIC,MAHjBC,eAAAA,OAGiB,MAHA,GAGA,EAFjBxB,EAEiB,EAFjBA,gBACAH,EACiB,EADjBA,OAEA,OACE,iBAAK3H,WAAWC,EAAAA,EAAAA,GAAK,aAAcD,GAAnC,WACE,gBAAKA,WAAWC,EAAAA,EAAAA,GAAK,mBAAoBoJ,GAAgBpI,GAAG,eAA5D,SACGU,EAAS,MAEZ,gBAAK3B,WAAWC,EAAAA,EAAAA,GAAK,oBAAqBqJ,GAAiBrI,GAAG,gBAA9D,SACGU,EAAS,MAEZ,SAAC+F,EAAA,EAAD,CACEC,OAAQA,EACRC,gBAAiBA,EACjBC,SAAUA,EACVC,gBAAiBA,MAIxB,C,0SCxDM,SAASyB,EAAT,GAAsF,IAA5D5H,EAA2D,EAA3DA,SAAU3B,EAAiD,EAAjDA,UAAcwJ,GAAmC,YAC1F,OACE,gCAAKxJ,WAAWC,EAAAA,EAAAA,GAAK,+BAAgCD,IAAgBwJ,GAArE,aACG7H,IAGN,CAsBM,SAAS8H,EAAT,GAOmB,IANxB9H,EAMuB,EANvBA,SACA+H,EAKuB,EALvBA,OACAR,EAIuB,EAJvBA,gBACAlJ,EAGuB,EAHvBA,UACA2J,EAEuB,EAFvBA,MACGH,GACoB,YACvB,OACE,iCACExJ,WAAWC,EAAAA,EAAAA,GAAK,sCAAuCD,GACvDyF,MAAOiE,GAAUR,EAAkB,CAAEA,gBAAAA,EAAiBtG,OAAOgH,EAAAA,EAAAA,IAAiBV,IAAqB,CAAC,GAChGM,GAHN,cAKGE,GACC,SAAC/D,EAAA,EAAD,CACE3F,UAAU,qCACVyF,MAAOyD,EAAkB,CAAEtG,OAAOgH,EAAAA,EAAAA,IAAiBV,IAAqB,CAAC,KAG3E,SAACW,EAAA,EAAD,CAAe7J,UAAU,wCAG3B,0BAAO2B,KAEP,0BAAOgI,OAGZ,CAgBM,SAASG,EAAT,GAMwB,IAL7BrK,EAK4B,EAL5BA,QACAsK,EAI4B,EAJ5BA,WACA/J,EAG4B,EAH5BA,UACA2B,EAE4B,EAF5BA,SACG6H,GACyB,YACtBQ,GAAuB/F,EAAAA,EAAAA,UAC3B,kBAAMgG,EAAAA,EAAAA,IAAsBF,EAAYtK,GAASyK,KAAK,KAAtD,GACA,CAACH,EAAYtK,IAGf,OACE,iCAAKO,WAAWC,EAAAA,EAAAA,GAAK,iCAAkCD,IAAgBwJ,GAAvE,eACE,SAAC,EAAAW,EAAUC,MAAX,UACGL,EAAW1J,KAAI,SAACO,GAAD,OACd,SAAC,KAAD,CAAQK,GAAIxB,EAAQmB,GAAUM,UAA9B,4BAAkEN,GADpD,MAIjBe,GACD,iBAAM3B,UAAU,uCAAhB,SAAwDgK,OAG7D,CAYM,SAASK,EAAT,GAAyF,IAA9D1I,EAA6D,EAA7DA,SAAUlB,EAAmD,EAAnDA,KAAMT,EAA6C,EAA7CA,UAAcwJ,GAA+B,YAC7F,OACE,UAAC,IAAWc,MAAZ,gBAAiBtK,WAAWC,EAAAA,EAAAA,GAAK,iCAAkCD,IAAgBwJ,GAAnF,eACE,SAAC,KAAD,CAAY/I,KAAI,OAAEA,QAAF,IAAEA,EAAAA,GAAQ,SAAC8J,EAAA,EAAD,IAAiBxK,KAAK,QAAQ0B,MAAM,YAC9D,4BACE,SAAC,KAAD,CAAWnC,GAAG,6BAA0BC,GAAG,yBAC3C,kBACCoC,QAIR,C,8EChIM,SAAS6I,EAAT,GAAwC,IAAxB7I,EAAuB,EAAvBA,SACrB,OAAO,8BAAGA,GACX,CCKM,SAAS8I,EAAT,GAA+D,IAAD,IAA5CC,UAAAA,OAA4C,SAAzB/I,EAAyB,EAAzBA,SAC1C,OAAO+I,GAAY,8BAAG/I,KAAe,uBACtC,CCFM,SAASgJ,EAAT,GAA+D,IAAD,IAA5CD,UAAAA,OAA4C,SAAzB/I,EAAyB,EAAzBA,SAC1C,OAAO+I,GAAY,8BAAG/I,EAAS,MAAS,8BAAGA,EAAS,IACrD,CCVM,SAASiJ,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,MAAOlJ,EAA6B,EAA7BA,SAClC,GAAIkJ,EAAM1K,OAAS,EACjB,MAAM2K,MAAM,0CAGd,OAAID,EAAM,IAAMlJ,EAAS,GAChBA,EAAS,GAGdkJ,EAAM,IAAMlJ,EAAS,GAChBA,EAAS,GAGdkJ,EAAM,IAAMlJ,EAAS,GAChBA,EAAS,GAGdkJ,EAAM,IAAMlJ,EAAS,GAChBA,EAAS,GAGdkJ,EAAM,IAAMlJ,EAAS,GAChBA,EAAS,IAElBoJ,QAAQC,KAAK,4CACNrJ,EACR,C,wPClCYsJ,EACK,iBADLA,EAEQ,oB,gFCGfC,EAAsBC,EAAQ,OAE7B,SAASC,IACd,OAAiBC,EAAAA,EAAAA,IAAsB,UAAhCC,GAAP,eACA,GAA4BC,EAAAA,EAAAA,GAAS,CACnCrE,IAAKgE,EACLM,UAAU,EACVC,MAAM,IAHR,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OAJAnG,EAAAA,EAAAA,YAAU,WACRmG,EAASL,OAAOA,EACjB,GAAE,CAACA,KAEG,8BAAGI,GACX,C,qCClBYE,EAAW,SACtBC,EACAC,EACAC,EACAC,GAEA,MAAiB,OAAbA,EACI,GAAN,OAAUH,EAAME,GAAcE,KAA9B,YAAsCJ,EAAMC,GAAWG,MAGnD,GAAN,OAAUJ,EAAMC,GAAWG,KAA3B,YAAmCJ,EAAME,GAAcE,KACxD,ECZM,SAASC,EAA0B1C,GACxC,OACE,iCAAK2C,MAAM,6BAA6BC,QAAQ,eAAkB5C,GAAlE,eACE,iBACER,MAAM,MACNjF,OAAO,MACPsI,EAAE,OACFC,EAAE,OACFzD,KAAK,UACL0D,GAAG,KACHC,GAAG,KACHC,UAAU,gCAEZ,iBACEzD,MAAM,MACNjF,OAAO,MACPsI,EAAE,OACFC,EAAE,OACFzD,KAAK,OACL6D,OAAO,OACPC,iBAAiB,KACjBC,YAAY,IACZL,GAAG,KACHC,GAAG,KACHC,UAAU,kCAIjB,CCCM,SAASI,EAAT,GAQY,IAPjBC,EAOgB,EAPhBA,KACAjB,EAMgB,EANhBA,MACAkB,EAKgB,EALhBA,gBACAC,EAIgB,EAJhBA,kBACAC,EAGgB,EAHhBA,aACAC,EAEgB,EAFhBA,aACAC,EACgB,EADhBA,UAEQrG,GAAcC,EAAAA,EAAAA,KAAdD,UAER,GAA0BxD,EAAAA,EAAAA,UAAuB,IAAjD,eAAO8J,EAAP,KAAcC,EAAd,KACA,GAAgC/J,EAAAA,EAAAA,WAAS,GAAzC,eAAOgK,EAAP,KAAkBC,EAAlB,KAEA,GAAsChJ,EAAAA,EAAAA,GAAa,CACjDxD,SAAUoM,EAAY,EACtB3I,WAAW,EACXC,SAAU,WACR8I,GAAW,GACXR,EAAgB,CACdS,QAASC,KAAKC,UAAUN,IAE3B,IARK9I,EAAR,EAAQA,QAASqJ,EAAjB,EAAiBA,MAAOzF,EAAxB,EAAwBA,WAWxB1C,EAAAA,EAAAA,YAAU,YACH0C,GAAa8E,GAChBW,GAEH,GAAE,CAACX,EAAmB9E,EAAWyF,KAOlCC,EAAAA,EAAAA,IAAQ,WACNb,EAAgB,CACdS,QAASC,KAAKC,WAAUG,EAAAA,EAAAA,OAE3B,IAED,IAAMhO,EAAQ+L,EAASC,EAAOiB,EAAKgB,iBAAkBhB,EAAKiB,oBAAqBb,GAE/E,OACE,UAAC,IAAD,CAAMD,aAAcA,EAApB,WACE,SAAC,IAAD,CAAMlN,KAAK,QAAQiO,OAAQlH,EAAU,UAAW,QAAS9G,UAAU,WAAW4C,MAAM,SAApF,SACGsF,IACC,gCACGrI,GACD,iBAAMG,UAAU,kBAAhB,SAAmCsE,EAAU,EAAIA,EAAU,EAAI,SAIpE4D,IAAa,SAACkD,EAAD,KAEd,SAAC,IAAD,CAAW7D,QAzBO,kBACpBwF,EAAgB,CACdS,QAASC,KAAKC,WAAUG,EAAAA,EAAAA,OAFN,EAyBlB,0BAECP,GACC,SAACW,EAAA,EAAD,CAAWxI,MAAO,CAAEyI,WAAY,QAASlF,MAAO,QAASmF,QAAS,UAElE,SAAC,KAAD,CACEf,MAAOA,EACPC,SAAUA,EACVrN,UAAU,qBACVoO,MAAM,SAAClC,EAAD,CAA2BlM,UAAU,4BAC3CqO,aAAcnG,MAKvB,CClFM,SAASoG,EAAT,GAA6D,IAAD,IAApC7O,EAAoC,EAApCA,QAAS8O,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAC7C,GAAwCC,EAAAA,EAAAA,GAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,QACtB9B,GAAO+B,EAAAA,EAAAA,GAAQpP,EAAS8O,GAC9B,GAAkDjL,EAAAA,EAAAA,WAAS,GAA3D,eAAO0J,EAAP,KAA0B8B,EAA1B,KACM3B,EAAiB,UAAGoB,EAAMpB,iBAAT,QAAsB,GAEvCJ,EClBD,SAAsC6B,GAC3C,IAAQ9H,GAAcC,EAAAA,EAAAA,KAAdD,UAEFiI,GAAUC,EAAAA,EAAAA,GAAqB,CACnCC,WAAY,iBACZC,aAAc,kBAAMN,EAAQ,EAAd,EACdO,QAAS,kBAAMP,EAAQ,EAAd,EACTQ,eAAgBtI,EACd,oEACA,6DAEFuI,aAAcvI,EACZ,kEACA,mDAIJ,OAAO,SAACwI,GACNP,GAAQ,QACNQ,OAAQtE,GACLqE,GAEN,CACF,CDLyBE,CAA6BZ,GAE/C3B,GACJ,SAAC,KAAD,CACExM,MAAM,SAACgP,EAAA,EAAD,IACN5P,OAAO,SAAC,KAAD,CAAWP,GAAG,UAAUC,GAAG,UAClCmQ,aAAY,OAAEnB,QAAF,IAAEA,GAAF,UAAEA,EAAOhI,aAAT,aAAE,EAAce,QAC5Bb,YAAY,SAAC,KAAD,CAAWnH,GAAG,2CAAkCC,GAAG,oBAC/DiB,KAAK,UACLmP,cAAY,EACZC,QAAS,kBAAMd,GAAqB,EAA3B,EAPX,UASE,SAAC,KAAD,WACE,SAAC,KAAD,CACExP,IAAI,+CAAY6N,EAAZ,6CACJ5N,IAAI,4CAAY4N,EAAZ,+CAMZ,OACE,SAAC,KAAD,CAAgB0C,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MAAOC,aAAcC,EAAAA,EAAOC,iBAAiBC,QAA3E,UACE,UAAC,IAAD,CAAcvB,KAAMA,EAAMjP,QAASA,EAAnC,WAEE,SAAC,IAAD,CACE8G,MAAK,OAAEgI,QAAF,IAAEA,OAAF,EAAEA,EAAOhI,MACdC,cAAemI,EACflI,WAAW,IACXC,KAAM,EACNC,aAAW,KAIb,SAACkG,EAAD,CACEK,aAAcsB,EAAKxC,SACnBc,KAAMA,EACNjB,MAAK,OAAE0C,QAAF,IAAEA,OAAF,EAAEA,EAAO1C,MACdkB,gBAAiBA,EACjBE,aAAcA,EACdD,kBAAmBA,EACnBG,UAAWA,QAKpB,C,gDE3BY+C,G,SAAkB,kBAC7B,SAAC,KAAD,WACE,SAAC,KAAD,CACE5Q,IACE,oIAEE,kBAFF,0EAMFC,IACE,kIAEE,kBAFF,8DAXuB,GAqBlB4Q,EAAe,kBAC1B,SAAC,KAAD,WACE,SAAC,KAAD,CACE7Q,IACE,iHAEE,kBAFF,qDAG6C,SAAC+C,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAAqD,IAHlG,6BAI2B,SAAC6B,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAJ3B,YAKE,kBALF,oFAM2E,KACzE,SAAC6B,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAPF,aAUFjB,IACE,mGAEE,kBAFF,uCAGqC,SAAC8C,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAHrC,gCAIkB,SAAC6B,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAJlB,YAKE,kBALF,gEAMgE,KAC9D,SAAC6B,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAPF,gBAfoB,EA6Bf4P,EAAe,kBAC1B,SAAC,KAAD,WACE,SAAC,KAAD,CACE9Q,IACE,qFAC6C,SAAC+C,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAAqD,IADlG,6BAE2B,SAAC6B,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAF3B,YAGE,kBAHF,oFAI2E,KACzE,SAAC6B,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eALF,aAQFjB,IACE,uEACqC,SAAC8C,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eADrC,gCAEkB,SAAC6B,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eAFlB,YAGE,kBAHF,gEAIgE,KAC9D,SAAC6B,EAAA,EAAD,CAAiB7B,KAAK,WAAtB,eALF,gBAboB,E,iJCxFtB6P,GAAY,SAACC,GACjB,OAAKA,EAHgB,SAACA,GAAD,OAAoBA,EAAOC,SAAS,MAApC,CAMjBC,CAAeF,GACV,UANe,SAACA,GAAD,OAAoBA,EAAOC,SAAS,MAApC,CAQpBE,CAAkBH,GACb,aAEF,UARE,MASV,E,wCCRM,SAASI,GAAT,GAAkE,IAAxClD,EAAuC,EAAvCA,QAASxE,EAA8B,EAA9BA,MACxC,OACE,iBAAKhJ,UAAU,iBAAf,WACE,SAACkM,EAAD,CAA2BzG,MAAO,CAAEuD,MAAAA,GAAShJ,UAAU,0BACvD,SAAC,KAAD,CAAWwN,QAASA,EAASxE,MAAOA,EAAOhJ,UAAU,6BAG1D,CCYM,SAAS2Q,GAAT,GASyB,IAR9BlR,EAQ6B,EAR7BA,QACAoM,EAO6B,EAP7BA,MACA+E,EAM6B,EAN7BA,SACAC,EAK6B,EAL7BA,SACAC,EAI6B,EAJ7BA,eACAC,EAG6B,EAH7BA,kBACA7D,EAE6B,EAF7BA,aACA8D,EAC6B,EAD7BA,WAEA,GAAqB3F,EAAAA,EAAAA,IAAsB,cAApC4F,GAAP,eAEA,OACE,SAACvP,GAAA,EAAD,CACE7B,OAAO,SAAC,KAAD,CAAWP,GAAG,WAAWC,GAAG,aACnCqC,aAAc,CAAE5B,UAAW,iBAC3BA,UAAU,YAHZ,SAKG4Q,EAASvQ,KAAI,SAACmN,GAAa,IAAD,IACnB0D,EAAO,OAAGrF,QAAH,IAAGA,GAAH,UAAGA,EAAK,OAAGiF,QAAH,IAAGA,OAAH,EAAGA,EAAiBtD,EAAQ5M,kBAApC,aAAG,EAA6CqL,KACvDkF,EAAU,OAAGtF,QAAH,IAAGA,GAAH,UAAGA,EAAK,OAAGkF,QAAH,IAAGA,OAAH,EAAGA,EAAoBvD,EAAQ5M,kBAAvC,aAAG,EAAgDqL,KAC7DmF,EAAiBF,GAAWC,EAElC,OACE,UAAC,KAAD,CAEE1L,MAAO,CAAEuD,MAAOiI,GAChB1J,QAAS,kBAAMsJ,EAASrD,EAAQ5M,SAAvB,EACTZ,UAAU,kBACVqR,OAAQ7D,EAAQ5M,WAAaoQ,EAC7BM,YAAY,0BANd,WAQE,kBAAMtR,UAAU,0BAAhB,UACGoR,IAAkB,SAAC,MAAD,CAAY3Q,MAAM,SAAC8Q,GAAA,EAAD,IAAmBvR,UAAU,8BAClE,SAAC,MAAD,CAAYW,OAAQlB,EAAQ+N,EAAQ5M,gBAEtC,SAAC8P,GAAD,CAAgBlD,QAASA,EAAQA,QAASxE,MAAOiI,KACjD,SAAC,KAAW3G,KAAZ,CAAiBkH,MAAI,EAACxR,UAAU,YAAhC,SACoB,OAAjBkN,GACC,uCACGgE,QADH,IACGA,EAAAA,EAAW,IADd,WACoBC,QADpB,IACoBA,EAAAA,EAAc,QAGlC,uCACGA,QADH,IACGA,EAAAA,EAAc,IADjB,WACuBD,QADvB,IACuBA,EAAAA,EAAW,WAnBjC1D,EAAQ5M,SAyBlB,KAGN,CChEM,SAAS6Q,GAAT,GAMyB,IAL9B5F,EAK6B,EAL7BA,MACAgF,EAI6B,EAJ7BA,SACAa,EAG6B,EAH7BA,YACAV,EAE6B,EAF7BA,WACAW,EAC6B,EAD7BA,aAEA,OACE,SAACC,GAAA,EAAD,CAAgB7R,KAAK,QAAQkC,MAAI,EAAjC,SACGyP,EAAYrR,KAAI,SAACyL,GAAD,OACf,UAAC,KAAD,CAEEvE,QAAS,kBAAMsJ,EAAS/E,EAAf,EACTuF,OAAQL,IAAelF,EACvB9L,UAAU,kBAJZ,UAMG2R,EAAa7F,KACZ,SAAC,MAAD,CAAYrL,MAAM,SAAC8Q,GAAA,EAAD,IAAmBvR,UAAU,8BAEjD,SAAC,IAAD,CAAM6R,YAAU,EAAhB,SAAkBhG,EAAMC,GAAWG,SAR9BH,EAFQ,KAetB,CCxBM,SAASgG,GAAT,GAM4B,IALjCjG,EAKgC,EALhCA,MACAgF,EAIgC,EAJhCA,SACAkB,EAGgC,EAHhCA,eACAf,EAEgC,EAFhCA,WACAW,EACgC,EADhCA,aAEA,OACE,SAACC,GAAA,EAAD,CAAgB7R,KAAK,QAAQkC,MAAI,EAAjC,SACG8P,EAAe1R,KAAI,SAAC0L,GAAD,OAClB,UAAC,KAAD,CAEExE,QAAS,kBAAMsJ,EAAS9E,EAAf,EACTsF,OAAQL,IAAejF,EACvB/L,UAAU,kBAJZ,UAMG2R,EAAa5F,KACZ,SAAC,MAAD,CAAYtL,MAAM,SAAC8Q,GAAA,EAAD,IAAmBvR,UAAU,8BAEjD,SAAC,IAAD,CAAM6R,YAAU,EAAhB,SAAkBhG,EAAME,GAAcE,SARjCF,EAFW,KAezB,CCFM,SAASiG,GAAT,GAUgB,IATrBvS,EASoB,EATpBA,QACAwS,EAQoB,EARpBA,gBACApG,EAOoB,EAPpBA,MACA+E,EAMoB,EANpBA,SACAc,EAKoB,EALpBA,YACAK,EAIoB,EAJpBA,eACA9E,EAGoB,EAHpBA,aACAH,EAEoB,EAFpBA,KACAI,EACoB,EADpBA,aAEQgF,GAAcC,EAAAA,EAAAA,KAAdD,UAEFE,GAAcC,EAAAA,EAAAA,GAAa,EAAG,CAClCC,IAAK,GACLC,SAAU,IACVC,SAAU,MAEZ,GAAoCnH,EAAAA,EAAAA,IAAsB,cAA1D,eAAO4F,EAAP,KAAmBwB,EAAnB,KACA,ELvCK,YAUH,IATF7B,EASC,EATDA,SACA8B,EAQC,EARDA,OACAhB,EAOC,EAPDA,YACAK,EAMC,EANDA,eAOMY,EAAqB,WACzB,OAAO/B,EAAS5L,QAAO,SAACC,EAAD,GAAqD,IAA3BrE,EAA0B,EAA1BA,SAAUkL,EAAgB,EAAhBA,UAKzD,OAJA7G,EAAIrE,GAAY,GACZA,IAAa8R,IACfzN,EAAIrE,GAAYkL,GAEX7G,CACR,GAAE,CAAC,EACL,EAEK2N,EAAwB,WAC5B,OAAOhC,EAAS5L,QAAO,SAACC,EAAD,GAAwD,IAA9BrE,EAA6B,EAA7BA,SAAUmL,EAAmB,EAAnBA,aAKzD,OAJA9G,EAAIrE,GAAY,GACZA,IAAa8R,IACfzN,EAAIrE,GAAYmL,GAEX9G,CACR,GAAE,CAAC,EACL,EAED,GAAoC3B,EAAAA,EAAAA,UAAS,IAA7C,eAAO0N,EAAP,KAAmB6B,EAAnB,KACA,GAA4CvP,EAAAA,EAAAA,UAA2BqP,KAAvE,eAAO7B,EAAP,KAAuBgC,EAAvB,KACA,GAAkDxP,EAAAA,EAAAA,UAA2BsP,KAA7E,eAAO7B,EAAP,KAA0BgC,EAA1B,KA6CMpB,GAAe1N,EAAAA,EAAAA,UAAQ,WAC3B,IAAM+O,EAA4B,CAAC,EAWnC,OAVAC,OAAOC,OAAOpC,GAAgBqC,SAAQ,SAAC7C,GACjCA,IACF0C,EAAO1C,IAAU,EAEpB,IACD2C,OAAOC,OAAOnC,GAAmBoC,SAAQ,SAAC7C,GACpCA,IACF0C,EAAO1C,IAAU,EAEpB,IACM0C,CACR,GAAE,CAAClC,EAAgBC,IAEdqC,GAAanP,EAAAA,EAAAA,UAAQ,WACzB,OAAOgP,OAAOC,OAAOpC,GAAgBuC,MAAMjS,UAAY6R,OAAOC,OAAOnC,GAAmBsC,MAAMjS,QAC/F,GAAE,CAAC0P,EAAgBC,IAyBpB,MAAO,CACLC,WAAAA,EACAsC,aAvFmB,SAACC,GAEpB,GAAIA,IAAYvC,EACd,OAAO6B,EAAc,IAGvB,IAAMW,EAAanD,GAAUW,GACvByC,EAAYpD,GAAUkD,GAG5B,GAAIC,IAAeC,EACjB,OAAOZ,EAAcU,GAIvB,GAAIA,IAA2B,YAAfC,GAA0C,YAAdC,GAA0B,CACpE,GAAkB,YAAdA,EAEF,OADAZ,EAAc,IACPC,GAAkB,SAACY,GAAD,eAAC,UAAeA,GAAhB,eAAuB1C,EAAauC,GAApC,IAE3B,GAAkB,eAAdE,EAEF,OADAZ,EAAc,IACPE,GAAqB,SAACW,GAAD,eAAC,UAAeA,GAAhB,eAAuB1C,EAAauC,GAApC,IAE9B,GAAmB,YAAfC,EAEF,OADAX,EAAc,IACPC,GAAkB,SAACY,GAAD,eAAC,UAAeA,GAAhB,eAAuBH,EAAUvC,GAAjC,IAE3B,GAAmB,eAAfwC,EAEF,OADAX,EAAc,IACPE,GAAqB,SAACW,GAAD,eAAC,UAAeA,GAAhB,eAAuBH,EAAUvC,GAAjC,GAE/B,CAED6B,EAAcU,EACf,EAqDCzC,eAAAA,EACAC,kBAAAA,EACAY,aAAAA,EACAyB,WAAAA,EACAO,aAvDmB,WACnBd,EAAc,IACdC,EAAkBH,KAClBI,EAAqBH,IACtB,EAoDCgB,gBA/BsB,WACtB,IAAMC,EAAeZ,OAAOC,OAAOpC,GAC7BgD,GAAoBC,EAAAA,GAAAA,SAAQrC,EAAYsC,QAAO,SAAC/S,GAAD,OAAS4S,EAAatD,SAAStP,EAA/B,KAC/CgT,EAAiC,CAAC,EACxChB,OAAOiB,KAAKpD,GAAgBqC,SAAQ,SAACvS,GACH,IAAD,EAA1BkQ,EAAelQ,KAClBqT,EAAarT,GAAb,UAAyBkT,EAAkBK,aAA3C,QAAoD,GAEvD,IAED,IAAMC,EAAkBnB,OAAOC,OAAOnC,GAChCsD,GAAuBN,EAAAA,GAAAA,SAAQhC,EAAeiC,QAAO,SAAC/S,GAAD,OAASmT,EAAgB7D,SAAStP,EAAlC,KACrDqT,EAAoC,CAAC,EAC3CrB,OAAOiB,KAAKnD,GAAmBoC,SAAQ,SAACvS,GACH,IAAD,EAA7BmQ,EAAkBnQ,KACrB0T,EAAgB1T,GAAhB,UAA4ByT,EAAqBF,aAAjD,QAA0D,GAE7D,IAEDrB,GAAkB,SAACY,GAAD,eAAC,UAAeA,GAASO,EAAzB,IAClBlB,GAAqB,SAACW,GAAD,eAAC,UAAeA,GAASY,EAAzB,GACtB,EAYF,CKlFKC,CAAY,CACd3D,SAAAA,EACA8B,OAAQ5F,EAAK7L,GACbyQ,YAAAA,EACAK,eAAAA,IAZAjB,EADF,EACEA,eACAC,EAFF,EAEEA,kBACAuC,EAHF,EAGEA,aACAtC,EAJF,EAIEA,WACAW,EALF,EAKEA,aACAgC,EANF,EAMEA,aACAP,EAPF,EAOEA,WACAQ,EARF,EAQEA,gBAOF,GAA0CtQ,EAAAA,EAAAA,WAAS,GAAnD,eAAOkR,EAAP,KAAsBC,EAAtB,KAEMC,EAAe,WACnBD,GAAiB,GACjBb,GACD,GAGDpO,EAAAA,EAAAA,YAAU,WACHyL,GAEHwB,EAA6C,GAA/BvO,KAAKuE,MAAM2J,EAAc,IAE1C,GAAE,CAACnB,EAAYmB,KAEhBxE,EAAAA,EAAAA,IAAQ,WACN8G,GACD,GAAE,IAEH,IAAMC,GACJ,SAACjT,GAAA,EAAD,CAAW7B,OAAO,SAAC,KAAD,CAAWP,GAAG,cAAcC,GAAG,gBAAjD,UACE,SAACuS,GAAD,CACEjG,MAAOA,EACPkG,eAAgBA,EAChBlB,SAAUyC,EACVtC,WAAYA,EACZW,aAAcA,MAKdiD,GACJ,SAAClT,GAAA,EAAD,CAAW7B,OAAO,SAAC,KAAD,CAAWP,GAAG,WAAWC,GAAG,aAA9C,UACE,SAACkS,GAAD,CACE5F,MAAOA,EACP6F,YAAaA,EACbb,SAAUyC,EACVtC,WAAYA,EACZW,aAAcA,MAKpB,OACE,UAAC,IAAD,CAAM1E,aAAcA,EAAc4H,WAAS,EAA3C,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAWvV,GAAG,oBAAcC,GAAG,uBAGjC,SAAC,MAAD,CAAa+B,SAAS,SAAC4O,EAAD,OACtB,SAAC,KAAD,KAEA,SAAC,KAAD,CAAiB1P,KAAK,SAAtB,UACE,SAAC,KAAD,CACElB,IACE,yIAGE,kBAHF,qEAKE,kBALF,oEAOE,kBAPF,qCAQmC,sDARnC,OAWFC,IACE,0HAEE,kBAFF,iEAIE,kBAJF,wDAME,kBANF,6BAO2B,2CAP3B,YAaN,UAAC,IAAD,CAAO2C,UAAU,WAAjB,WACE,UAAC0P,GAAA,EAAD,CAAgB3P,MAAI,EAApB,WACE,SAAC,KAAD,CAAQzB,KAAK,UAAUC,MAAM,SAACqU,EAAA,EAAD,IAAmBvN,QAASoM,EAAcnM,SAAU0K,EAAjF,UACE,SAAC,KAAD,CAAW5S,GAAG,wBAAkBC,GAAG,wBAErC,SAAC,KAAD,CACEiB,KAAK,UACLC,MAAM,SAACsU,EAAA,EAAD,IACNxN,QAASmN,EACTlN,SAAU0K,GAAakB,EAJzB,UAME,SAAC,KAAD,CAAW9T,GAAG,mBAAmBC,GAAG,oBAEtC,SAAC,KAAD,CACEgI,QAAS,kBACP0K,EAAgB,CACd+C,QAASC,GAAerE,EAAUE,EAAgBC,GAClDyD,cAAAA,GAHK,EAMThN,UAAW4L,EACX3S,MAAM,SAACyU,EAAA,EAAD,IARR,UAUE,SAAC,KAAD,CAAW5V,GAAG,6BAAuBC,GAAG,0BAI5C,SAACoR,GAAD,CACElR,QAASA,EACToM,MAAOA,EACP+E,SAAUA,EACVC,SAAUyC,EACVxC,eAAgBA,EAChBC,kBAAmBA,EACnB7D,aAAcA,EACd8D,WAAYA,IAGI,OAAjB9D,EAAwB0H,EAAWD,EAElB,OAAjBzH,EAAwByH,EAAcC,OAI9C,CAED,IAAMK,GAAiB,SACrBrE,EACAE,EACAC,GAEA,IAAMiE,EAAmC,CAAC,EAM1C,OAJApE,EAASuC,SAAQ,YAAmB,IAAhBvS,EAAe,EAAfA,SAClBoU,EAAQpU,GAAY,CAACmQ,EAAkBnQ,GAAWkQ,EAAelQ,GAClE,IAEMoU,CACR,ECjMM,SAASG,GAAT,GAAgE,IAAD,EAApC1V,EAAoC,EAApCA,QAAS8O,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAChD,GAA0BC,EAAAA,EAAAA,GAAQ,GAA1BC,EAAR,EAAQA,KAAME,EAAd,EAAcA,QACR9B,GAAO+B,EAAAA,EAAAA,GAAQpP,EAAS8O,GAExB0D,ERUD,SAAsCrD,GAC3C,IAAQ9H,GAAcC,EAAAA,EAAAA,KAAdD,UAEFiI,GAAUC,EAAAA,EAAAA,GAAqB,CACnCC,WAAY,iBACZmG,UAAW,kBAAMxG,EAAQ,EAAd,EACXO,QAAS,kBAAMP,EAAQ,EAAd,EACTQ,eAAgBtI,EACd,6DACA,4DAEFuI,aAAcvI,EACZ,4EACA,0DAIJ,OAAO,SAACwI,GACNP,GAAQ,QACNQ,OAAQtE,GACLqE,GAEN,CACF,CQjCyB+F,CAA6BzG,GAE/C3B,GACJ,SAAC,KAAD,CACExM,MAAM,SAAC6U,EAAA,EAAD,IACNzV,OAAO,SAAC,KAAD,CAAWP,GAAG,oBAAcC,GAAG,oBACtCmQ,aAAY,OAAEnB,QAAF,IAAEA,GAAF,UAAEA,EAAOhI,aAAT,aAAE,EAAce,QAC5B9G,KAAK,UACLO,SAAUwN,EAAMhI,MAAMe,QAAU,EAAI,QAAKxB,EAL3C,UAOE,SAACoK,EAAD,MAIJ,OACE,SAAC,KAAD,CAAgBL,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MAAOC,aAAcC,EAAAA,EAAOC,iBAAiBuF,WAA3E,UACE,SAAC,IAAD,CAAc7G,KAAMA,EAAMjP,QAASA,EAAnC,UAEE,SAAC,KAAD,CAAQiL,UAAW6D,EAAMqC,UAAY9D,EAAK7L,GAA1C,UACE,SAAC+Q,GAAD,CACE/E,aAAcA,EACdC,aAAcsB,EAAKxC,SACnBc,KAAMA,EACNrN,QAASA,EACTwS,gBAAiBA,EACjBpG,MAAO0C,EAAM1C,MACb+E,SAAUrC,EAAMqC,SAChBc,YAAanD,EAAMmD,YACnBK,eAAgBxD,EAAMwD,sBAMjC,C,oDC9CM,SAASyD,GAAT,GAAsE,IAAtCC,EAAqC,EAArCA,OACrC,OACE,iBAAKzV,UAAU,uBAAf,WACE,SAAC,MAAD,WACE,SAAC,KAAD,CAAWV,GAAG,UAAUC,GAAG,eAE7B,iBAAMS,UAAU,YAAhB,UACE,SAAC,MAAD,CAAaW,OAAQ8U,QAI5B,C,4BCKM,SAASC,GAAT,GAMwB,IAL7BjW,EAK4B,EAL5BA,QACAoM,EAI4B,EAJ5BA,MACA8J,EAG4B,EAH5BA,YACAC,EAE4B,EAF5BA,aACA1I,EAC4B,EAD5BA,aAEM2I,GAAU5R,EAAAA,EAAAA,UACd,kBACEc,EAAAA,GAAAA,SACE6Q,EAAaE,WAAWzV,KAAI,SAAC0V,GAC3B,IAAMlW,EAAQ+L,EACZC,EACAkK,EAAgBjK,UAChBiK,EAAgBhK,aAChBmB,GAEI8I,EAAmBJ,EAAa9J,YAAciK,EAAgBjK,UAC9DmK,EAAsBL,EAAa7J,eAAiBgK,EAAgBhK,aAC1E,MAAO,CACL9K,GAAIpB,EACJkK,WAAYgM,EAAgBhM,WAC5BmM,MAAOH,EAAgBG,MACvBhF,QAASrF,EAAMkK,EAAgBjK,WAC/BqK,eAAgBH,EAChB7E,WAAYtF,EAAMkK,EAAgBhK,cAClCqK,kBAAmBH,EACnBI,YAAaC,OAAON,GAAoBM,OAAOL,GAC/CM,MAAOR,EAAgBhM,WAAW5J,OAErC,IACD,CAAC,cAAe,QAAS,MACzB,CAAC,OAAQ,OAAQ,OAxBrB,GA0BA,CAAC0L,EAAO+J,EAAc1I,IAGxB,OACE,iBAAKlN,UAAU,uBAAf,WACE,SAAC,MAAD,WACE,SAAC,KAAD,CAAWV,GAAG,wBAAwBC,GAAG,oBAE1CsW,EAAQxV,KAAI,SAAC6E,EAAO3E,GACnB,IAAMiW,GACJ,SAAC,KAAWlM,KAAZ,CACEmM,SAAUvR,EAAMiR,eAChB1Q,MACEP,EAAMiR,gBAAwC,IAAtBjR,EAAMmR,YAC1B,CACEnN,gBAAiByM,EACjB/S,OAAOgH,EAAAA,EAAAA,IAAiB+L,IAE1B,CAAE/S,MAAO,UAAWsG,gBAAiB,WAR7C,SAWGhE,EAAMgM,QAAQjF,OAIbyK,GACJ,SAAC,KAAWpM,KAAZ,CACEmM,SAAUvR,EAAMkR,kBAChB3Q,MACEP,EAAMkR,mBAA2C,IAAtBlR,EAAMmR,YAC7B,CACEnN,gBAAiByM,EACjB/S,OAAOgH,EAAAA,EAAAA,IAAiB+L,IAE1B,CAAE/S,MAAO,UAAWsG,gBAAiB,WAR7C,SAWGhE,EAAMiM,WAAWlF,OAItB,OACE,iBAAwCjM,UAAU,qBAAlD,WACE,SAAC,MAAD,CACE0J,OAA8B,IAAtBxE,EAAMmR,YACdnN,gBAAiByM,EACjBhM,OACE,UAAC,KAAD,CAAMgN,MAAM,SAASrE,IAAK,EAA1B,WACE,SAAC,MAAD,CAAY7R,MAAM,SAACmW,GAAA,EAAD,IAAc7W,KAAK,UADvC,IACmDmF,EAAMgR,SAL7D,SASoB,OAAjBhJ,GACC,4BACGsJ,EADH,IACiBE,MAGjB,4BACGA,EADH,IACoBF,QAKxB,SAAC,KAAD,CAAsBzM,WAAY7E,EAAM6E,WAAYtK,QAASA,MArB/D,gBAAmByF,EAAMjE,GAAzB,YAA+BV,GAwBlC,MAGN,CChHM,SAASsW,GAAT,GAA+F,IAAhEhL,EAA+D,EAA/DA,MAAO+J,EAAwD,EAAxDA,aAAc1I,EAA0C,EAA1CA,aACzD,OACE,iBAAKlN,UAAU,sBAAf,UACgC,IAA7B4V,EAAaS,cACZ,iCACE,SAAC,MAAD,WACE,SAAC,KAAD,CAAW/W,GAAG,sCAAgCC,GAAG,qCAGnD,SAAC,MAAD,CAAsBmK,QAAM,EAA5B,SACGkC,EAASC,EAAO+J,EAAa9J,UAAW8J,EAAa7J,aAAcmB,KAGxC,IAA7B0I,EAAakB,cACZ,SAAC,MAAD,WACE,SAAC,KAAD,CACExX,GAAG,yCACHC,GAAG,4DAOb,UAAC,KAAWwX,UAAZ,CAAsB/W,UAAU,OAAhC,WACE,SAAC,KAAD,CAAWV,GAAG,mBAAmBC,GAAG,uBADtC,IAC+D,KAC7D,SAAC8C,EAAA,EAAD,UAAkBuT,EAAakB,cAFjC,eAML,CCjBM,SAASE,GAAT,GAAoG,IAA7EC,EAA4E,EAA5EA,QAASxX,EAAmE,EAAnEA,QAASoM,EAA0D,EAA1DA,MAAOqL,EAAmD,EAAnDA,gBAAiBhK,EAAkC,EAAlCA,cACtEjH,EAAAA,GAAAA,KAEA,IAAMmM,GAAcC,EAAAA,EAAAA,GAAa,EAAG,CAAEC,IAAK,GAAIC,SAAU,IAAKC,SAAU,MAElEoD,EAAeqB,EAAQC,EAAgBxO,YAEvCyO,EAAe1X,EAAQmW,EAAawB,UACpCC,GAAeC,EAAAA,EAAAA,IAAmBH,EAAajW,UAErD,OACE,UAAC,IAAD,CAAM2T,WAAS,EAAf,WACE,SAAC,KAAD,CAAW9U,KAAK,QAAhB,UACE,SAAC,KAAD,CAAWT,GAAG,oBAAoBC,GAAG,qBAGvC,SAAC,MAAD,CAAa+B,SAAS,SAAC8O,EAAD,OAEtB,UAAC,MAAD,CACEzI,OAAQuP,EACRrP,SAAUwP,EACVhO,cAAc,sBACdC,eAAe,oBAJjB,WAME,0BACE,SAACoH,GAAD,CAAgBlD,QAASoI,EAAapI,QAASxE,MAAOoJ,OAGxD,iCACE,SAACoD,GAAD,CAAsBC,OAAQ0B,KAE9B,SAACzB,GAAD,CACEjW,QAASA,EACToM,MAAOA,EACP8J,YAAa0B,EACbzB,aAAcA,EACd1I,aAAcA,KAGhB,SAAC2J,GAAD,CAAqBhL,MAAOA,EAAO+J,aAAcA,EAAc1I,aAAcA,YAKtF,C,2BCxDM,SAASqK,GAAT,GAA+E,IAAxD9X,EAAuD,EAAvDA,QAAS2D,EAA8C,EAA9CA,QAASoU,EAAqC,EAArCA,SAAUjR,EAA2B,EAA3BA,MACxD,OACE,UAAC,KAAD,CACE9G,QAASA,EACT2D,QAASA,EACTL,yBAA0B,EACxB,SAAC,KAAD,CAAmBzD,GAAG,iBAAiBC,GAAG,mBAA3B,MACf,SAAC,KAAD,CAAmBD,GAAG,yBAAyBC,GAAG,2BAAnC,MALnB,WAQE,SAACqS,GAAA,EAAD,WACE,SAAC,KAAD,CAAQrK,QAASiQ,EAAjB,UACE,SAAC,KAAD,CAAWlY,GAAG,0BAA0BC,GAAG,2BAG/C,SAAC,MAAD,CAAqBgH,MAAOA,MAGjC,CClBM,SAASkR,GAAT,GAA6D,IAAD,EAApChY,EAAoC,EAApCA,QAAS8O,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAC7C,GAAiDC,EAAAA,EAAAA,GAAQ,GAAjDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAc+I,EAA5B,EAA4BA,iBACtBR,GAAkBS,EAAAA,GAAAA,GAAa,CACnCxX,OAAQoO,EAAM0I,QAAQ9W,OACtB4H,cpBlB0B,EoBmB1BtD,SAAUkK,IAQZ,OACE,SAAC,KAAD,CAAgBkB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MAAOC,aAAcC,EAAAA,EAAOC,iBAAiB4H,QAA3E,UACE,UAAC,IAAD,CAAclJ,KAAMA,EAAMjP,QAASA,EAAnC,WAEE,SAAC,KAAD,CACEgB,MAAM,SAACoX,GAAA,EAAD,IACNhY,OAAO,SAAC,KAAD,CAAWP,GAAG,oBAAoBC,GAAG,kBAC5CqQ,QAASjB,EACTe,aAAY,OAAEnB,QAAF,IAAEA,GAAF,UAAEA,EAAOhI,aAAT,aAAE,EAAce,QAC5BX,aAAW,EACXnG,KAAK,QACLO,SAAUwN,EAAMhI,MAAMe,QAAU,EAAI,QAAKxB,EAP3C,UASE,SAACqK,EAAD,OAIF,SAAC6G,GAAD,CACEC,QAAS1I,EAAM0I,QACfxX,QAASA,EACToM,MAAO0C,EAAM1C,MACbqB,aAAcsB,EAAKxC,SACnBkL,gBAAiBA,KAInB,SAACK,GAAD,CAAa9X,QAASA,EAAS2D,QAASmL,EAAMnL,QAASmD,MAAOgI,EAAMhI,MAAOiR,SA/BhE,WACfN,EAAgBY,QAChBJ,GACD,QAgCF,C,gEC3CM,SAASK,GAAT,GAA6E,IAAjD7S,EAAgD,EAAhDA,MAAOzF,EAAyC,EAAzCA,QAASuJ,EAAgC,EAAhCA,MAC3CrI,EAASlB,EAAQyF,EAAMtE,UACvBoX,GAAcV,EAAAA,EAAAA,IAAmB3W,EAAOO,UAE9C,OACE,UAAC0Q,GAAA,EAAD,CAAgBqG,UAAQ,EAAC7X,WAAS,EAAlC,WACE,SAAC,MAAD,CAAYO,OAAQA,KACpB,SAAC+P,GAAD,CAAgBlD,QAAStI,EAAMsI,QAASxE,MAAOA,KAC/C,SAAC,KAAWsB,KAAZ,CAAiBkH,MAAI,EAACxR,UAAU,YAAhC,SACGkF,EAAMrF,SAGT,SAAC,KAAD,CACEqY,QAA0B,IAAjBhT,EAAMiT,SACfpY,KAAK,QACL0F,MAAO,CAAEuD,MAAOA,GAChBoP,YAAaJ,MAIpB,CCvBM,SAASK,GAAT,GAAwD,IAA/B9J,EAA8B,EAA9BA,MAAO9O,EAAuB,EAAvBA,QAC/B2S,GAAcC,EAAAA,EAAAA,GAAa,EAAG,CAAEC,IAAK,GAAIC,SAAU,IAAKC,SAAU,MAExE,OACE,UAAC,KAAD,CAAiBjE,MAAOA,EAAO9O,QAASA,EAAS6Y,kBAAkB,SAACC,GAAA,EAAD,IAAnE,WACE,SAAC/Y,GAAA,EAAD,CAAcC,QAASA,EAASC,aAAc6O,EAAM7O,aAAcC,UAAW6Y,GAAAA,KAE7E,SAAC9W,GAAA,EAAD,CAAW7B,OAAO,SAAC,KAAD,CAAWP,GAAG,SAASC,GAAG,UAAYqC,aAAc,CAAE5B,UAAW,iBAAnF,SACGuO,EAAM0I,QAAQ5W,KAAI,SAAC6E,GAClB,OACE,SAAC6S,GAAD,CAEE7S,MAAOA,EACPzF,QAASA,EACTuJ,MAAOoJ,GAJT,UACUlN,EAAMtE,SADhB,YAC4BsE,EAAMjE,IAMrC,QAIR,CCnBD,SAASwX,GAAmBlK,GAE1B,GAAIA,IAAUA,EAAMsB,MAAO,OAAO6I,EAAAA,GAElC,OAAQnK,EAAMsB,OACZ,KAAKE,EAAAA,EAAO4I,QAAQC,MAClB,OAAOC,EAAAA,GACT,KAAK9I,EAAAA,EAAO4I,QAAQG,MAClB,OAAOC,EAAAA,GACT,KAAKhJ,EAAAA,EAAO4I,QAAQK,MAClB,OAAOC,EAAAA,GACT,KAAKlJ,EAAAA,EAAOC,iBAAiBC,QAC3B,OAAO3B,EACT,KAAKyB,EAAAA,EAAOC,iBAAiBuF,WAC3B,OAAOJ,GACT,KAAKpF,EAAAA,EAAOC,iBAAiB4H,QAC3B,OAAOH,GACT,KAAK1H,EAAAA,EAAO4I,QAAQO,UAClB,OAAOb,GACT,QACE,OAAOc,EAAAA,EAEZ,CAQD,SANA,WACE,OACE,SAAC,IAAD,CAASC,eAAgBC,EAAAA,GAAgBrJ,iBAAkByI,mBAAoBA,IAElF,C,0DC3CKa,EACc,mBADdA,EAEgB,qBAFhBA,EAGW,gBAHXA,EAIa,kBAJbA,EAKS,cALTA,EAMW,gBANXA,EAOa,kBAPbA,EAQc,mBARdA,EASU,eATVA,EAUW,gBAGJd,GAA2C,eACrDc,EAAgC,CAC/B7Y,KAAM,UACNZ,MAAO,CACLP,GAAI,kBACJC,GAAI,oBAEN8B,YAAa,CACX/B,GAAI,2BACJC,GAAI,mCAT8C,SAYrD+Z,EAAkC,CACjC7Y,KAAM,YACNZ,MAAO,CACLP,GAAI,oBACJC,GAAI,sBAEN8B,YAAa,CACX/B,GAAI,4BACJC,GAAI,oCApB8C,SAuBrD+Z,EAA6B,CAC5B7Y,KAAM,SACNZ,MAAO,CACLP,GAAI,gBACJC,GAAI,iBAEN8B,YAAa,CACX/B,GAAI,wBACJC,GAAI,gCA/B8C,SAkCrD+Z,EAA+B,CAC9B7Y,KAAM,cACNZ,MAAO,CACLP,GAAI,iBACJC,GAAI,mBAEN8B,YAAa,CACX/B,GAAI,yBACJC,GAAI,iCA1C8C,SA6CrD+Z,EAA2B,CAC1B7Y,KAAM,QACNZ,MAAO,CACLP,GAAI,gBACJC,GAAI,cAEN8B,YAAa,CACX/B,GAAI,yDACJC,GAAI,2CArD8C,SAwDrD+Z,EAA6B,CAC5B7Y,KAAM,OACNZ,MAAO,CACLP,GAAI,iBACJC,GAAI,gBAEN8B,YAAa,CACX/B,GAAI,0CACJC,GAAI,4CAhE8C,SAmErD+Z,EAA+B,CAC9B7Y,KAAM,OACNZ,MAAO,CACLP,GAAI,mBACJC,GAAI,mBAEN8B,YAAa,CACX/B,GAAI,8BACJC,GAAI,+BA3E8C,SA8ErD+Z,EAAgC,CAC/B7Y,KAAM,YACNZ,MAAO,CACLP,GAAI,6BACJC,GAAI,6BAEN8B,YAAa,CACX/B,GAAI,4BACJC,GAAI,gCAtF8C,SAyFrD+Z,EAA4B,CAC3B7Y,KAAM,SACNZ,MAAO,CACLP,GAAI,iBACJC,GAAI,gBAEN8B,YAAa,CACX/B,GAAI,4BACJC,GAAI,4BAjG8C,SAoGrD+Z,EAA6B,CAC5B7Y,KAAM,iBACNZ,MAAO,CACLP,GAAI,6BACJC,GAAI,0BAEN8B,YAAa,CACX/B,GAAI,0BACJC,GAAI,4BA5G8C,GAiHxD,S,wECvFO,SAASoY,EAAa4B,GAK3B,OAAoCjW,EAAAA,EAAAA,UAAS,GAA7C,eAAOoF,EAAP,KAAmBC,EAAnB,KACA,GAAgErF,EAAAA,EAAAA,WAAS,GAAzE,eAAOgF,EAAP,KAAiCkR,EAAjC,KAQA,OANAhU,EAAAA,EAAAA,YAAU,WACJ8C,GAA4BI,IAAe6Q,EAAQpZ,OAAS,GAC9DqZ,GAA4B,EAE/B,GAAE,CAAClR,EAA0BI,EAAY6Q,EAAQpZ,UAE3C,kBACFoZ,GADL,IAEE7Q,WAAAA,EACAC,cAAAA,EACAmP,MAAO,kBAAMnP,EAAc,EAApB,EACPL,yBAAAA,EACAkR,4BAAAA,GAEH,C,6DChEM,SAASjI,EAAc/H,GAC5B,OACE,iCAAK2C,MAAM,6BAA6BC,QAAQ,eAAkB5C,GAAlE,eACE,iBACEX,KAAK,UACL4Q,EAAE,wIAEJ,iBACEA,EAAE,2GACF/T,QAAQ,SAEV,iBAAM+T,EAAE,4TACR,iBAAMA,EAAE,2TAGb,C,4DCfM,SAASC,EAAUlQ,GACxB,OACE,iCAAK2C,MAAM,6BAA6BC,QAAQ,eAAkB5C,GAAlE,eACE,mBAAQmQ,GAAG,MAAMC,GAAG,MAAMC,EAAE,MAAMhR,KAAK,aACvC,iBACEA,KAAK,UACL4Q,EAAE,8LAEJ,mBAAQE,GAAG,MAAMC,GAAG,MAAMC,EAAE,UAAUhR,KAAK,aAC3C,iBACEA,KAAK,UACL4Q,EAAE,kOAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,gVAEJ,mBAAQE,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAAShR,KAAK,aAC1C,iBACEA,KAAK,UACL4Q,EAAE,qRAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,4NAEJ,iBAAMA,EAAE,4oBACR,iBAAMA,EAAE,6hBACR,iBAAMA,EAAE,gvCAGb,C,6DC/BM,SAASlB,EAAU/O,GACxB,OACE,iCAAK2C,MAAM,6BAA6BC,QAAQ,eAAkB5C,GAAlE,eACE,iBACEX,KAAK,UACL4Q,EAAE,uLAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,sOAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,4NAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,iLAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,qLAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,6JAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,gMAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,yIAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,gMAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,0OAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,0OAEJ,mBAAQE,GAAG,SAASC,GAAG,UAAUC,EAAE,SAAShR,KAAK,aACjD,mBAAQ8Q,GAAG,UAAUC,GAAG,UAAUC,EAAE,SAAShR,KAAK,aAClD,iBACEA,KAAK,UACL4Q,EAAE,8aAEJ,iBAAMA,EAAE,ynFAGb,C,6DCxDM,SAASlP,EAAYf,GAC1B,OACE,iCAAK2C,MAAM,6BAA6BC,QAAQ,eAAkB5C,GAAlE,eACE,iBACEX,KAAK,UACL4Q,EAAE,gGAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,oTAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,wHAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,kNAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,wSAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,8HAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,scAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,8NAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,kHAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,+VAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,2UAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,mKAEJ,iBAAMA,EAAE,osJAGb,C,6DCtDM,SAASxL,EAAUzE,GACxB,OACE,iCAAK2C,MAAM,6BAA6BC,QAAQ,eAAkB5C,GAAlE,eACE,iBACEX,KAAK,UACL4Q,EAAE,qMAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,oMAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,qOAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,gKAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,+rCAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,mwBAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,6KAEJ,mBAAQE,GAAG,MAAMC,GAAG,SAASC,EAAE,SAAShR,KAAK,aAC7C,iBAAM4Q,EAAE,s8IACR,iBAAMA,EAAE,ooDAGb,C,6DCpCM,SAAS7C,EAASpN,GACvB,OACE,iCAAK2C,MAAM,6BAA6BC,QAAQ,eAAkB5C,GAAlE,eACE,iBACEX,KAAK,UACL4Q,EAAE,oMAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,iSAEJ,iBAAMA,EAAE,0xCAGb,C,6DCdM,SAAS5B,EAAgBrO,GAC9B,OACE,iCAAK2C,MAAM,6BAA6BC,QAAQ,eAAkB5C,GAAlE,eACE,iBAAMX,KAAK,UAAU4Q,EAAE,8CACvB,iBACE5Q,KAAK,UACL4Q,EAAE,uFAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,4OAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,oRAEJ,iBACE5Q,KAAK,UACL4Q,EAAE,6KAEJ,mBAAQE,GAAG,MAAMC,GAAG,SAASC,EAAE,QAAQhR,KAAK,aAC5C,iBAAM4Q,EAAE,wnBACR,iBAAMA,EAAE,oZACR,iBAAMA,EAAE,uhBAGb,C","sources":["components/general/Achievements.tsx","components/layout/Container.tsx","components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","components/slide-show/SlideShowControls.tsx","components/slide-show/SlideShow.tsx","components/slide-show/SlideShowComposableComponents.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/sinais-de-alerta/utils/constants.ts","components/audio/SinaisDeAlertaSound.tsx","games/sinais-de-alerta/utils/helpers.ts","games/sinais-de-alerta/components/WarningSignBackgroundMask.tsx","games/sinais-de-alerta/StepDraw.tsx","games/sinais-de-alerta/PhaseDrawing.tsx","games/sinais-de-alerta/utils/api-requests.ts","games/sinais-de-alerta/components/RulesBlobs.tsx","games/sinais-de-alerta/utils/useGuessing.ts","games/sinais-de-alerta/components/WarningDrawing.tsx","games/sinais-de-alerta/components/EvaluationAllDrawings.tsx","games/sinais-de-alerta/components/EvaluationAllSubjects.tsx","games/sinais-de-alerta/components/EvaluationAllDescriptors.tsx","games/sinais-de-alerta/StepEvaluate.tsx","games/sinais-de-alerta/PhaseEvaluation.tsx","games/sinais-de-alerta/components/GalleryWindowCredits.tsx","games/sinais-de-alerta/components/GalleryWindowGuesses.tsx","games/sinais-de-alerta/components/GalleryWindowResult.tsx","games/sinais-de-alerta/StepGallery.tsx","games/sinais-de-alerta/StepRanking.tsx","games/sinais-de-alerta/PhaseGallery.tsx","games/sinais-de-alerta/components/FinalGalleryItem.tsx","games/sinais-de-alerta/PhaseGameOver.tsx","games/sinais-de-alerta/SessionSinaisDeAlerta.tsx","games/sinais-de-alerta/utils/achievements.ts","hooks/useSlideShow.ts","icons/CheckMarkIcon.tsx","icons/ClockIcon.tsx","icons/CrownIcon.tsx","icons/GarbageIcon.tsx","icons/PanicIcon.tsx","icons/StarIcon.tsx","icons/WarningSignIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { motion } from 'framer-motion';\n// Ant Design Resources\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Popover } from 'antd';\n// Types\nimport type { Achievement, AchievementReference } from 'types/achievements';\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { getAnimation } from 'utils/animations';\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Container } from 'components/layout/Container';\nimport { Instruction } from 'components/text';\n// Internal\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  /**\n   * Players of the game\n   */\n  players: GamePlayers;\n  /**\n   * Achievements to be displayed\n   */\n  achievements: Achievement[];\n  /**\n   * Reference for the achievements\n   */\n  reference: AchievementReference;\n  /**\n   * Color scheme for the component\n   */\n  colorScheme?: ColorScheme;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference, colorScheme }: AchievementsProps) {\n  return (\n    <Container\n      title={<Translate pt=\"Medalhas\" en=\"Achievements\" />}\n      titleProps={{\n        colorScheme,\n        size: 'small',\n      }}\n      className={clsx('achievements', getAnimationClass('fadeIn'))}\n    >\n      {achievements.length === 0 && (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Nenhuma medalha foi conquistada nesse jogo.\n                <br />\n                Para ganhar uma medalha, apenas uma jogador pode atender a condição.\n              </>\n            }\n            en={\n              <>\n                No achievements were achieved in this game.\n                <br />\n                To win a medal, only one player can meet the condition.\n              </>\n            }\n          />\n        </Instruction>\n      )}\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <motion.li\n              key={`achievement-${achievement.type}`}\n              className={'achievements-entry'}\n              {...getAnimation('flipInY', {\n                duration: 2,\n                delay: (index < achievements.length / 2 ? index : achievements.length - 1 - index) + 2.5,\n              })}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <span>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {String(achievement.value)})\n                      </span>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </motion.li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space, type SpaceProps } from 'antd';\n// Components\nimport { Title, type TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: Omit<TitleProps, 'children'>;\n  contentProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  contentProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = contentProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName,\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","// Icons\nimport { StarIcon } from 'icons/StarIcon';\n// Components\nimport { type HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { type LegacyRef, type ReactNode, useEffect, useMemo, useState } from 'react';\nimport { useEffectOnce, useMeasure } from 'react-use';\n// Ant Design Resources\nimport { CrownFilled } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n// Types\nimport type { GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps) {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`,\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({ gainedPoints, playerId, gainedPointsDescriptions = [] }: GainedPointsProps) {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [ref, { height }] = useMeasure();\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {},\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx(\n        'ranking-board',\n        seconds > 4 && 'ranking-board--hidden',\n        seconds === 4 && getAnimationClass('fadeIn'),\n      )}\n      style={{\n        height: `${(Math.max(60, height) + 8) * sortedRanking.length}px`,\n      }}\n    >\n      <div\n        className=\"ranking-board__row\"\n        id=\"ranking-row-placeholder\"\n        style={{ opacity: 0 }}\n        ref={ref as LegacyRef<HTMLDivElement>}\n      >\n        <div className=\"ranking-board__cell-crown\">\n          <CrownFilled className=\"ranking-board__crown-icon\" />\n        </div>\n        <div className=\"ranking-board__cell-position\">#0</div>\n        <div className=\"ranking-board__cell-player\">\n          <div className=\"ranking-board__avatar\">\n            <Avatar id=\"A\" />\n          </div>\n          <div className=\"ranking-board__name\">Placeholder</div>\n        </div>\n        <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n          <div className=\"ranking-board__cell-points\">0</div>\n        </Tooltip>\n\n        <GainedPoints gainedPoints={0} playerId=\"A\" />\n\n        <Tooltip title=\"Total\" color=\"gold\">\n          <span className=\"ranking-board__cell-points-total\">0</span>\n        </Tooltip>\n      </div>\n\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            // id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n\n            <Tooltip title=\"Total\" color=\"gold\">\n              {displayStep >= 2 ? (\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              ) : (\n                <span className=\"ranking-board__cell-points-total-preliminary\">{newScore}</span>\n              )}\n            </Tooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Types\nimport type { GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { useGameAppearance } from 'components/session/GameInfoContext';\nimport { Step } from 'components/steps';\nimport { Instruction, StepTitle } from 'components/text';\n// Internal\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  colorScheme?: ColorScheme;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  colorScheme,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n  const appearance = useGameAppearance();\n\n  const scheme = colorScheme ?? appearance.colorScheme ?? 'light';\n\n  return (\n    <Step>\n      <StepTitle colorScheme={scheme}>{title ?? 'Ranking'}</StepTitle>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\" colorScheme={scheme}>\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { useGameAppearance } from 'components/session/GameInfoContext';\n// Images\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n\ntype RoundAnnouncementProps = {\n  /**\n   * The round object\n   */\n  round: GameRound;\n  /**\n   * Function to be called when the continue button is pressed\n   */\n  onPressButton?: GenericFunction;\n  /**\n   * Text to be displayed on the continue button\n   */\n  buttonText?: string;\n  /**\n   * Time in seconds to automatically press the continue button\n   */\n  time: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional children\n   */\n  children?: ReactNode;\n  /**\n   * If the announcement is unskippable\n   */\n  unskippable?: boolean;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n}: RoundAnnouncementProps) {\n  const appearance = useGameAppearance();\n  const circleColor = appearance.primaryColor;\n  useTemporarilyHidePlayersBar();\n  const { translate } = useLanguage();\n\n  const circleStyle = circleColor ? { borderColor: circleColor } : {};\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div\n          className={clsx(\n            'round-announcement__title',\n            appearance.colorScheme === 'dark' && 'round-announcement__title--dark',\n          )}\n        >\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className=\"round-announcement__circle\" style={circleStyle} />\n          <div className=\"round-announcement__circle-2\" style={circleStyle} />\n          <div\n            className={clsx(\n              'round-announcement__number',\n              appearance.colorScheme === 'dark' && 'round-announcement__number--dark',\n            )}\n          >\n            {round?.current ?? round ?? 0}\n          </div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !time && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useMemo } from 'react';\n// Ant Design Resources\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\nimport { Button, type ButtonProps, Space } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport type { SlideShowConfig } from 'hooks/useSlideShow';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\n\ntype SlideShowControlsProps = {\n  /**\n   * Slide show configuration provided by useSlideShow\n   */\n  config: SlideShowConfig;\n  /**\n   * The color of the progress bar (default: gray)\n   */\n  barColor: string;\n  /**\n   * Prop indicating if the controls should be disabled\n   */\n  disableControls?: boolean;\n  /**\n   * Next Button props (See Ranking Button)\n   */\n  nextButtonProps?: ButtonProps;\n};\n\nexport function SlideShowControls({\n  config,\n  disableControls,\n  barColor = 'gray',\n  nextButtonProps,\n}: SlideShowControlsProps) {\n  const slideDuration = config.slideDuration ?? 10;\n  const totalDuration = slideDuration * config.length;\n  const { timeLeft, isRunning, pause, resume } = useCountdown({\n    duration: totalDuration,\n    autoStart: true,\n    onExpire: () => config.onExpire(),\n  });\n  const disableControlsFlag = disableControls ?? config.isFirstGalleryRunThrough;\n\n  // Automatically go to the next window every {windowDuration} seconds\n  // biome-ignore lint/correctness/useExhaustiveDependencies: isRunning shouldn't retrigger the effect\n  useEffect(() => {\n    const expectedSlideIndex = Math.max(\n      0,\n      Math.min(config.length - 1, Math.floor((totalDuration - timeLeft) / slideDuration)),\n    );\n    if (isRunning && timeLeft < totalDuration && timeLeft > 0 && expectedSlideIndex !== config.slideIndex) {\n      config.setSlideIndex(expectedSlideIndex);\n    }\n    return () => {};\n  }, [timeLeft, config, slideDuration, totalDuration]);\n\n  const goToPreviousSlide = () => {\n    pause();\n    config.setSlideIndex((s: number) => Math.max(s - 1, 0));\n  };\n\n  const goToNextSlide = () => {\n    pause();\n    config.setSlideIndex((s: number) => Math.min(s + 1, config.length - 1));\n  };\n\n  const slots = useMemo(() => {\n    return Array(config.length)\n      .fill('')\n      .map((e, i) => {\n        return (\n          <div\n            key={`control-timer-bar-${e + i}`}\n            className=\"slide-show__controls-timer-bar-node\"\n            style={{ width: `${99 / config.length}%` }}\n          >\n            {e}\n          </div>\n        );\n      });\n  }, [config.length]);\n\n  return (\n    <div className=\"slide-show__controls\">\n      <div className=\"slide-show__controls-timer-bar\">\n        <div className=\"slide-show__controls-timer-bar-base\">{slots}</div>\n        <span\n          className=\"slide-show__controls-timer-bar-pill\"\n          style={{\n            width: `${calculateProgress(totalDuration, timeLeft)}%`,\n            backgroundColor: barColor,\n          }}\n        ></span>\n      </div>\n\n      <Space style={{ opacity: disableControlsFlag ? 0 : 100 }} className={getAnimationClass('fadeIn')}>\n        <Button\n          size=\"large\"\n          icon={<StepBackwardOutlined />}\n          onClick={goToPreviousSlide}\n          disabled={disableControlsFlag || config.slideIndex === 0}\n        >\n          <Translate pt=\"Anterior\" en=\"Previous\" />\n        </Button>\n        <Button\n          size=\"large\"\n          icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n          onClick={isRunning ? pause : resume}\n        />\n        <Button\n          size=\"large\"\n          onClick={goToNextSlide}\n          disabled={disableControlsFlag || config.slideIndex === config.length - 1}\n        >\n          <Translate pt=\"Próximo\" en=\"Next\" /> <StepForwardOutlined />\n        </Button>\n        <Button\n          {...nextButtonProps}\n          size=\"large\"\n          onClick={() => config.onExpire()}\n          icon={nextButtonProps?.icon ?? <TrophyOutlined />}\n          disabled={disableControlsFlag}\n        >\n          {nextButtonProps?.children ?? <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nfunction calculateProgress(totalDuration: number, timeLeft: number): number {\n  if (totalDuration === 0) return 100; // Handle case to avoid division by zero\n  return (1 - timeLeft / totalDuration) * 100;\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport type { ButtonProps } from 'antd';\n// Hooks\nimport type { SlideShowConfig } from 'hooks/useSlideShow';\n// Internal\nimport { SlideShowControls } from './SlideShowControls';\n\ntype SlideShowProps = {\n  /**\n   * Slide show configuration provided by useSlideShow\n   */\n  config: SlideShowConfig;\n  /**\n   * The left and right active pages of the slide\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The color of the progress bar (default: gray)\n   */\n  barColor: string;\n  /**\n   * Prop indicating if the controls should be disabled\n   */\n  disableControls?: boolean;\n  /**\n   * Optional class name for the wrapper\n   */\n  className?: string;\n  /**\n   * Optional class name for the left page\n   */\n  leftClassName?: string;\n  /**\n   * Optional class name for the right page\n   */\n  rightClassName?: string;\n  /**\n   * Next Button props (See Ranking Button)\n   */\n  nextButtonProps?: ButtonProps;\n};\n\n/**\n * Display Slick show with a left and right sides with full navigation controls\n * @param props\n * @returns\n */\nexport function SlideShow({\n  children,\n  disableControls,\n  barColor,\n  className = '',\n  leftClassName = '',\n  rightClassName = '',\n  nextButtonProps,\n  config,\n}: SlideShowProps) {\n  return (\n    <div className={clsx('slide-show', className)}>\n      <div className={clsx('slide-show__left', leftClassName)} id=\"gallery-left\">\n        {children[0]}\n      </div>\n      <div className={clsx('slide-show__right', rightClassName)} id=\"gallery-right\">\n        {children[1]}\n      </div>\n      <SlideShowControls\n        config={config}\n        disableControls={disableControls}\n        barColor={barColor}\n        nextButtonProps={nextButtonProps}\n      />\n    </div>\n  );\n}\n","import type { TextProps } from 'antd/es/typography/Text';\nimport clsx from 'clsx';\nimport { type ReactNode, useMemo } from 'react';\n// Ant Design Resources\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { getContrastColor, getPlayerNamesFromIds } from 'utils/helpers';\n// Icons\nimport { GarbageIcon } from 'icons/GarbageIcon';\n// Components\nimport { Avatar, IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\n/**\n * A functional component that renders a label for the slide show.\n */\nexport function SlideShowLabel({ children, className, ...props }: ElementPropsWithChildren) {\n  return (\n    <div className={clsx('slide-show-composable__label', className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\ntype SlideShowBubbleProps = {\n  /**\n   * If true, the bubble will display a crown icon.\n   */\n  winner?: boolean;\n  /**\n   * The background color of the bubble.\n   */\n  backgroundColor?: string;\n  /**\n   * Extra content to be displayed on the right\n   */\n  extra?: ReactNode;\n} & ElementPropsWithChildren;\n\n/**\n * A component that displays a bubble value in a slide show.\n * It conditionally renders a crown icon if the `winner` prop is true,\n * otherwise, it renders a message icon.\n */\nexport function SlideShowBubbleValue({\n  children,\n  winner,\n  backgroundColor,\n  className,\n  extra,\n  ...props\n}: SlideShowBubbleProps) {\n  return (\n    <div\n      className={clsx('slide-show-composable__bubble-value', className)}\n      style={winner && backgroundColor ? { backgroundColor, color: getContrastColor(backgroundColor) } : {}}\n      {...props}\n    >\n      {winner ? (\n        <CrownFilled\n          className=\"slide-show-composable__bubble-icon\"\n          style={backgroundColor ? { color: getContrastColor(backgroundColor) } : {}}\n        />\n      ) : (\n        <MessageFilled className=\"slide-show-composable__bubble-icon\" />\n      )}\n\n      <span>{children}</span>\n\n      <span>{extra}</span>\n    </div>\n  );\n}\n\ntype SlideShowPlayersListProps = {\n  /**\n   * The player objects.\n   */\n  players: GamePlayers;\n  /**\n   * The player IDs to be displayed.\n   */\n  playersIds: PlayerId[];\n} & ElementProps;\n\n/**\n * SlideShowPlayersList component displays a list of player avatars and their names.\n */\nexport function SlideShowPlayersList({\n  players,\n  playersIds,\n  className,\n  children,\n  ...props\n}: SlideShowPlayersListProps) {\n  const selectedPlayersNames = useMemo(\n    () => getPlayerNamesFromIds(playersIds, players).join(', '),\n    [playersIds, players],\n  );\n\n  return (\n    <div className={clsx('slide-show-composable__players', className)} {...props}>\n      <AntAvatar.Group>\n        {playersIds.map((playerId) => (\n          <Avatar id={players[playerId].avatarId} key={`slide-show-player-${playerId}`} />\n        ))}\n      </AntAvatar.Group>\n      {children}\n      <span className=\"slide-show-composable__players-names\">{selectedPlayersNames}</span>\n    </div>\n  );\n}\n\ntype SlideShowNoWinsProps = TextProps & {\n  /**\n   * Custom icon to replace the garbage icon.\n   */\n  icon?: ReactNode;\n};\n\n/**\n * SlideShowNoWins displays a message indicating that no one won in the slide show.\n */\nexport function SlideShowNoWins({ children, icon, className, ...props }: SlideShowNoWinsProps) {\n  return (\n    <Typography.Text className={clsx('slide-show-composable__no-wins', className)} {...props}>\n      <IconAvatar icon={icon ?? <GarbageIcon />} size=\"large\" shape=\"square\" />\n      <div>\n        <Translate pt=\"Nossa, ninguém acertou.\" en=\"Wow, nobody got it.\" />\n        <br />\n        {children}\n      </div>\n    </Typography.Text>\n  );\n}\n","import type { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import type { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import type { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","export const SINAIS_DE_ALERTA_ACTIONS = {\n  SUBMIT_DRAWING: 'SUBMIT_DRAWING',\n  SUBMIT_EVALUATION: 'SUBMIT_EVALUATION',\n} as const;\n\nexport const SLIDE_DURATION = 7;\n","import { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Hooks\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Sound\nconst sinaisDeAlertaTimer = require('assets/sounds/sinais-de-alerta-30.mp3');\n\nexport function SinaisDeAlertaTimerSound() {\n  const [volume] = useGlobalLocalStorage('volume');\n  const [audio, , controls] = useAudio({\n    src: sinaisDeAlertaTimer,\n    autoPlay: true,\n    loop: false,\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: it only needs to be retriggered when the volume changes\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]);\n\n  return <>{audio}</>;\n}\n","// Types\nimport type { TextCard } from 'types/tdr';\n\nexport const getTitle = (\n  cards: Dictionary<TextCard>,\n  subjectId: string,\n  descriptorId: string,\n  language: Language,\n) => {\n  if (language === 'en') {\n    return `${cards[descriptorId].text} ${cards[subjectId].text}`;\n  }\n\n  return `${cards[subjectId].text} ${cards[descriptorId].text}`;\n};\n","import type React from 'react';\n\nexport function WarningSignBackgroundMask(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\" {...props}>\n      <rect\n        width=\"370\"\n        height=\"370\"\n        x=\"64.2\"\n        y=\"64.2\"\n        fill=\"#fbb903\"\n        rx=\"30\"\n        ry=\"30\"\n        transform=\"rotate(45 249.198 249.201)\"\n      ></rect>\n      <rect\n        width=\"338\"\n        height=\"338\"\n        x=\"80.2\"\n        y=\"80.2\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"6\"\n        rx=\"15\"\n        ry=\"15\"\n        transform=\"rotate(45 249.198 249.201)\"\n      ></rect>\n    </svg>\n  );\n}\n","import { mockDrawing } from 'mock/drawing';\nimport { useEffect, useState } from 'react';\n// Types\nimport type { GamePlayer } from 'types/player';\nimport type { TextCard } from 'types/tdr';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\n// Icons\nimport { PanicIcon } from 'icons/PanicIcon';\n// Components\nimport { SinaisDeAlertaTimerSound } from 'components/audio/SinaisDeAlertaSound';\nimport { DrawingCanvas } from 'components/canvas';\nimport { Card } from 'components/cards';\nimport { DevButton } from 'components/debug';\nimport { Step, type StepProps } from 'components/steps';\n// Internal\nimport { getTitle } from './utils/helpers';\nimport type { SubmitDrawingPayload } from './utils/types';\nimport { WarningSignBackgroundMask } from './components/WarningSignBackgroundMask';\n\ntype StepDrawProps = {\n  user: GamePlayer;\n  cards: Dictionary<TextCard>;\n  onSubmitDrawing: (payload: SubmitDrawingPayload) => void;\n  startDrawingTimer: boolean;\n  gameLanguage: Language;\n  timeLimit: number;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepDraw({\n  user,\n  cards,\n  onSubmitDrawing,\n  startDrawingTimer,\n  announcement,\n  gameLanguage,\n  timeLimit,\n}: StepDrawProps) {\n  const { translate } = useLanguage();\n\n  const [lines, setLines] = useState<CanvasLine[]>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: timeLimit + 5,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (!isRunning && startDrawingTimer) {\n      start();\n    }\n  }, [startDrawingTimer, isRunning, start]);\n\n  const onMockDrawing = () =>\n    onSubmitDrawing({\n      drawing: JSON.stringify(mockDrawing()),\n    });\n\n  useMock(() => {\n    onSubmitDrawing({\n      drawing: JSON.stringify(mockDrawing()),\n    });\n  });\n\n  const title = getTitle(cards, user.currentSubjectId, user.currentDescriptorId, gameLanguage);\n\n  return (\n    <Step announcement={announcement}>\n      <Card size=\"large\" header={translate('Desenhe', 'Draw')} className=\"sda-card\" color=\"yellow\">\n        {isRunning && (\n          <>\n            {title}\n            <span className=\"sda-card__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n          </>\n        )}\n      </Card>\n      {isRunning && <SinaisDeAlertaTimerSound />}\n\n      <DevButton onClick={onMockDrawing}>Mock Drawing</DevButton>\n\n      {isTimesUp ? (\n        <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n      ) : (\n        <DrawingCanvas\n          lines={lines}\n          setLines={setLines}\n          className=\"sda-warning-canvas\"\n          mask={<WarningSignBackgroundMask className=\"sda-warning-canvas-mask\" />}\n          showControls={isRunning}\n        />\n      )}\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { DrawingIcon } from 'icons/DrawingIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnSubmitDrawingAPIRequest } from './utils/api-requests';\nimport { StepDraw } from './StepDraw';\n\nexport function PhaseDrawing({ players, state, meta }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players, state);\n  const [startDrawingTimer, setStartDrawingTimer] = useState(false);\n  const timeLimit: number = state.timeLimit ?? 30;\n\n  const onSubmitDrawing = useOnSubmitDrawingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<DrawingIcon />}\n      title={<Translate pt=\"Alerte!\" en=\"Warn!\" />}\n      currentRound={state?.round?.current}\n      buttonText={<Translate pt=\"Um dó, lá, si... vamos e... já!\" en=\"Ready! Set! Go!\" />}\n      type=\"overlay\"\n      withoutTimer\n      onClose={() => setStartDrawingTimer(true)}\n    >\n      <Instruction>\n        <Translate\n          pt={<>Você tem {timeLimit} segundos para ler e desenhar sua carta</>}\n          en={<>You have {timeLimit} seconds to read and draw your card</>}\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.SINAIS_DE_ALERTA.DRAWING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          unskippable\n        />\n\n        {/* Step 1 */}\n        <StepDraw\n          gameLanguage={meta.language}\n          user={user}\n          cards={state?.cards}\n          onSubmitDrawing={onSubmitDrawing}\n          announcement={announcement}\n          startDrawingTimer={startDrawingTimer}\n          timeLimit={timeLimit}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\nimport type { UseStep } from 'hooks/useStep';\n// Internal\nimport type { SubmitDrawingPayload, SubmitEvaluationPayload } from './types';\nimport { SINAIS_DE_ALERTA_ACTIONS } from './constants';\n\nexport function useOnSubmitDrawingAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\",\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application failed to send your art',\n    ),\n  });\n\n  return (payload: SubmitDrawingPayload) => {\n    request({\n      action: SINAIS_DE_ALERTA_ACTIONS.SUBMIT_DRAWING,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-guesses',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players',\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application failed to send your evaluation',\n    ),\n  });\n\n  return (payload: SubmitEvaluationPayload) => {\n    request({\n      action: SINAIS_DE_ALERTA_ACTIONS.SUBMIT_EVALUATION,\n      ...payload,\n    });\n  };\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\n\ntype DrawInstructionProps = {\n  timeLimit: number;\n};\nexport const DrawInstruction = ({ timeLimit }: DrawInstructionProps) => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você terá <TimeHighlight>{timeLimit}</TimeHighlight> segundos para ler a sua carta e desenhá-la.\n          <br />\n          Aperte o botão quando estiver pronto!\n          <br />\n          <span className={clsx(getAnimationClass('tada'))}>\n            <strong>Não vale usar números e letras.</strong>\n          </span>\n          <br />\n          Fique esperto porque o tempo começa assim que você apertar.\n        </>\n      }\n      en={\n        <>\n          You'll have <TimeHighlight>{timeLimit}</TimeHighlight> seconds to read and draw your card.\n          <br />\n          Press the button when you're ready!\n          <br />\n          <span className={clsx(getAnimationClass('tada'))}>\n            <strong>You can NOT use numbers or letters.</strong>\n          </span>\n          <br />\n          Be aware of the timer! It starts as soon as you press the button.\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre o par de cartas relacionado a cada desenho clicando em uma carta em seguida no desenho.\n          <br />\n          Quando você selecionar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Match the pair of cards related to each drawing by clicking on a card and then on the drawing.\n          <br />\n          When you've selected all pairs, send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada placa, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você acertou as duas cartas, você ganha <PointsHighlight type=\"positive\">2</PointsHighlight>{' '}\n          pontos e o artista ganha <PointsHighlight type=\"positive\">3</PointsHighlight> pontos.\n          <br />\n          Se você acertou uma das cartas, você NÃO ganha nada, mas o artista ganha{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> ponto.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          If you matched both cards, you get <PointsHighlight type=\"positive\">2</PointsHighlight> points and\n          the artist gets <PointsHighlight type=\"positive\">3</PointsHighlight> points.\n          <br />\n          If you matched one card, you get nothing, but the artist gets{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> point.\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const ScoringRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Se você acertou as duas cartas, você ganha <PointsHighlight type=\"positive\">2</PointsHighlight>{' '}\n          pontos e o artista ganha <PointsHighlight type=\"positive\">3</PointsHighlight> pontos.\n          <br />\n          Se você acertou uma das cartas, você NÃO ganha nada, mas o artista ganha{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> ponto.\n        </>\n      }\n      en={\n        <>\n          If you matched both cards, you get <PointsHighlight type=\"positive\">2</PointsHighlight> points and\n          the artist gets <PointsHighlight type=\"positive\">3</PointsHighlight> points.\n          <br />\n          If you matched one card, you get nothing, but the artist gets{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> point.\n        </>\n      }\n    />\n  </Instruction>\n);\n","import { shuffle } from 'lodash';\nimport { useMemo, useState } from 'react';\n// Internal\nimport type { DrawingEntry } from './types';\n\nconst checkIsSubject = (cardId: string) => cardId.includes('wss');\nconst checkIsDescriptor = (cardId: string) => cardId.includes('wsd');\nconst checkType = (cardId: string) => {\n  if (!cardId) {\n    return 'none';\n  }\n  if (checkIsSubject(cardId)) {\n    return 'subject';\n  }\n  if (checkIsDescriptor(cardId)) {\n    return 'descriptor';\n  }\n  return 'drawing';\n};\n\nexport function useGuessing({\n  drawings,\n  userId,\n  subjectsIds,\n  descriptorsIds,\n}: {\n  drawings: DrawingEntry[];\n  userId: PlayerId;\n  subjectsIds: CardId[];\n  descriptorsIds: CardId[];\n}) {\n  const getDefaultSubjects = () => {\n    return drawings.reduce((acc: StringDictionary, { playerId, subjectId }) => {\n      acc[playerId] = '';\n      if (playerId === userId) {\n        acc[playerId] = subjectId;\n      }\n      return acc;\n    }, {});\n  };\n\n  const getDefaultDescriptors = () => {\n    return drawings.reduce((acc: StringDictionary, { playerId, descriptorId }) => {\n      acc[playerId] = '';\n      if (playerId === userId) {\n        acc[playerId] = descriptorId;\n      }\n      return acc;\n    }, {});\n  };\n\n  const [activeItem, setActiveItem] = useState('');\n  const [subjectGuesses, setSubjectGuesses] = useState<StringDictionary>(getDefaultSubjects());\n  const [descriptorGuesses, setDescriptorGuesses] = useState<StringDictionary>(getDefaultDescriptors());\n\n  const activateItem = (entryId: string) => {\n    // If same select, deselect\n    if (entryId === activeItem) {\n      return setActiveItem('');\n    }\n\n    const activeType = checkType(activeItem);\n    const entryType = checkType(entryId);\n\n    // If same type, replace\n    if (activeType === entryType) {\n      return setActiveItem(entryId);\n    }\n\n    // If any type is a drawing, match\n    if (entryId && (activeType === 'drawing' || entryType === 'drawing')) {\n      if (entryType === 'subject') {\n        setActiveItem('');\n        return setSubjectGuesses((prev) => ({ ...prev, [activeItem]: entryId }));\n      }\n      if (entryType === 'descriptor') {\n        setActiveItem('');\n        return setDescriptorGuesses((prev) => ({ ...prev, [activeItem]: entryId }));\n      }\n      if (activeType === 'subject') {\n        setActiveItem('');\n        return setSubjectGuesses((prev) => ({ ...prev, [entryId]: activeItem }));\n      }\n      if (activeType === 'descriptor') {\n        setActiveItem('');\n        return setDescriptorGuesses((prev) => ({ ...prev, [entryId]: activeItem }));\n      }\n    }\n\n    setActiveItem(entryId);\n  };\n\n  const resetGuesses = () => {\n    setActiveItem('');\n    setSubjectGuesses(getDefaultSubjects());\n    setDescriptorGuesses(getDefaultDescriptors());\n  };\n\n  const matchedItems = useMemo(() => {\n    const result: BooleanDictionary = {};\n    Object.values(subjectGuesses).forEach((cardId) => {\n      if (cardId) {\n        result[cardId] = true;\n      }\n    });\n    Object.values(descriptorGuesses).forEach((cardId) => {\n      if (cardId) {\n        result[cardId] = true;\n      }\n    });\n    return result;\n  }, [subjectGuesses, descriptorGuesses]);\n\n  const isComplete = useMemo(() => {\n    return Object.values(subjectGuesses).every(Boolean) && Object.values(descriptorGuesses).every(Boolean);\n  }, [subjectGuesses, descriptorGuesses]);\n\n  const randomSelection = () => {\n    const usedSubjects = Object.values(subjectGuesses);\n    const availableSubjects = shuffle(subjectsIds.filter((id) => !usedSubjects.includes(id)));\n    const subjectVotes: StringDictionary = {};\n    Object.keys(subjectGuesses).forEach((playerId) => {\n      if (!subjectGuesses[playerId]) {\n        subjectVotes[playerId] = availableSubjects.pop() ?? '';\n      }\n    });\n\n    const usedDescriptors = Object.values(descriptorGuesses);\n    const availableDescriptors = shuffle(descriptorsIds.filter((id) => !usedDescriptors.includes(id)));\n    const descriptorVotes: StringDictionary = {};\n    Object.keys(descriptorGuesses).forEach((playerId) => {\n      if (!descriptorGuesses[playerId]) {\n        descriptorVotes[playerId] = availableDescriptors.pop() ?? '';\n      }\n    });\n\n    setSubjectGuesses((prev) => ({ ...prev, ...subjectVotes }));\n    setDescriptorGuesses((prev) => ({ ...prev, ...descriptorVotes }));\n  };\n\n  return {\n    activeItem,\n    activateItem,\n    subjectGuesses,\n    descriptorGuesses,\n    matchedItems,\n    isComplete,\n    resetGuesses,\n    randomSelection,\n  };\n}\n","// Components\nimport { CanvasSVG } from 'components/canvas';\n// Internal\nimport { WarningSignBackgroundMask } from './WarningSignBackgroundMask';\n\ntype WarningDrawingProps = {\n  drawing: string;\n  width: number;\n};\n\nexport function WarningDrawing({ drawing, width }: WarningDrawingProps) {\n  return (\n    <div className=\"sda-alert-sign\">\n      <WarningSignBackgroundMask style={{ width }} className=\"sda-alert-sign__mask\" />\n      <CanvasSVG drawing={drawing} width={width} className=\"sda-alert-sign__canvas\" />\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\nimport type { TextCard } from 'types/tdr';\n// Hooks\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Icons\nimport { CheckMarkIcon } from 'icons/CheckMarkIcon';\n// Components\nimport { AvatarName, IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Container } from 'components/layout/Container';\n// Internal\nimport type { DrawingEntry } from '../utils/types';\nimport { WarningDrawing } from './WarningDrawing';\n\ntype EvaluationAllDrawingsProps = {\n  players: GamePlayers;\n  cards: Dictionary<TextCard>;\n  drawings: DrawingEntry[];\n  onSelect: (cardId: CardId) => void;\n  subjectGuesses: StringDictionary;\n  descriptorGuesses: StringDictionary;\n  gameLanguage: Language;\n  activeItem: CardId;\n};\n\nexport function EvaluationAllDrawings({\n  players,\n  cards,\n  drawings,\n  onSelect,\n  subjectGuesses,\n  descriptorGuesses,\n  gameLanguage,\n  activeItem,\n}: EvaluationAllDrawingsProps) {\n  const [canvasSize] = useGlobalLocalStorage('canvasSize');\n\n  return (\n    <Container\n      title={<Translate pt=\"Desenhos\" en=\"Drawings\" />}\n      contentProps={{ className: 'div-container' }}\n      className=\"contained\"\n    >\n      {drawings.map((drawing) => {\n        const subject = cards?.[subjectGuesses?.[drawing.playerId]]?.text;\n        const descriptor = cards?.[descriptorGuesses?.[drawing.playerId]]?.text;\n        const isFullyGuessed = subject && descriptor;\n\n        return (\n          <TransparentButton\n            key={drawing.playerId}\n            style={{ width: canvasSize }}\n            onClick={() => onSelect(drawing.playerId)}\n            className=\"sda-word-button\"\n            active={drawing.playerId === activeItem}\n            activeClass=\"sda-word-button--active\"\n          >\n            <span className=\"sda-word-button__avatar\">\n              {isFullyGuessed && <IconAvatar icon={<CheckMarkIcon />} className=\"sda-word-button__matched\" />}\n              <AvatarName player={players[drawing.playerId]} />\n            </span>\n            <WarningDrawing drawing={drawing.drawing} width={canvasSize} />\n            <Typography.Text code className=\"uppercase\">\n              {gameLanguage === 'pt' ? (\n                <>\n                  {subject ?? '?'} {descriptor ?? '?'}\n                </>\n              ) : (\n                <>\n                  {descriptor ?? '?'} {subject ?? '?'}\n                </>\n              )}\n            </Typography.Text>\n          </TransparentButton>\n        );\n      })}\n    </Container>\n  );\n}\n","// Types\nimport type { TextCard } from 'types/tdr';\n// Icons\nimport { CheckMarkIcon } from 'icons/CheckMarkIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n\ntype EvaluationAllSubjectsProps = {\n  cards: Dictionary<TextCard>;\n  onSelect: (cardId: CardId) => void;\n  subjectsIds: CardId[];\n  activeItem: CardId;\n  matchedItems: BooleanDictionary;\n};\n\nexport function EvaluationAllSubjects({\n  cards,\n  onSelect,\n  subjectsIds,\n  activeItem,\n  matchedItems,\n}: EvaluationAllSubjectsProps) {\n  return (\n    <SpaceContainer size=\"small\" wrap>\n      {subjectsIds.map((subjectId) => (\n        <TransparentButton\n          key={subjectId}\n          onClick={() => onSelect(subjectId)}\n          active={activeItem === subjectId}\n          className=\"sda-word-button\"\n        >\n          {matchedItems[subjectId] && (\n            <IconAvatar icon={<CheckMarkIcon />} className=\"sda-word-button__matched\" />\n          )}\n          <Card hideHeader>{cards[subjectId].text}</Card>\n        </TransparentButton>\n      ))}\n    </SpaceContainer>\n  );\n}\n","// Types\nimport type { TextCard } from 'types/tdr';\n// Icons\nimport { CheckMarkIcon } from 'icons/CheckMarkIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n\ntype EvaluationAllDescriptorsProps = {\n  cards: Dictionary<TextCard>;\n  onSelect: (cardId: CardId) => void;\n  descriptorsIds: CardId[];\n  activeItem: CardId;\n  matchedItems: BooleanDictionary;\n};\n\nexport function EvaluationAllDescriptors({\n  cards,\n  onSelect,\n  descriptorsIds,\n  activeItem,\n  matchedItems,\n}: EvaluationAllDescriptorsProps) {\n  return (\n    <SpaceContainer size=\"small\" wrap>\n      {descriptorsIds.map((descriptorId) => (\n        <TransparentButton\n          key={descriptorId}\n          onClick={() => onSelect(descriptorId)}\n          active={activeItem === descriptorId}\n          className=\"sda-word-button\"\n        >\n          {matchedItems[descriptorId] && (\n            <IconAvatar icon={<CheckMarkIcon />} className=\"sda-word-button__matched\" />\n          )}\n          <Card hideHeader>{cards[descriptorId].text}</Card>\n        </TransparentButton>\n      ))}\n    </SpaceContainer>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { ClearOutlined, CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { Button, Space } from 'antd';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\nimport type { TextCard } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { SendButton } from 'components/buttons';\nimport { CanvasResizer } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Container } from 'components/layout/Container';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { PopoverRule } from 'components/rules';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, StepTitle } from 'components/text';\n// Internal\nimport type { DrawingEntry, SubmitEvaluationPayload } from './utils/types';\nimport { useGuessing } from './utils/useGuessing';\nimport { EvaluationRules } from './components/RulesBlobs';\nimport { EvaluationAllDrawings } from './components/EvaluationAllDrawings';\nimport { EvaluationAllSubjects } from './components/EvaluationAllSubjects';\nimport { EvaluationAllDescriptors } from './components/EvaluationAllDescriptors';\n\ntype StepEvaluateProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  onSubmitGuesses: (payload: SubmitEvaluationPayload) => void;\n  cards: Dictionary<TextCard>;\n  drawings: DrawingEntry[];\n  subjectsIds: CardId[];\n  descriptorsIds: CardId[];\n  gameLanguage: Language;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepEvaluate({\n  players,\n  onSubmitGuesses,\n  cards,\n  drawings,\n  subjectsIds,\n  descriptorsIds,\n  announcement,\n  user,\n  gameLanguage,\n}: StepEvaluateProps) {\n  const { isLoading } = useLoading();\n\n  const canvasWidth = useCardWidth(6, {\n    gap: 16,\n    minWidth: 120,\n    maxWidth: 500,\n  });\n  const [canvasSize, setCanvasSize] = useGlobalLocalStorage('canvasSize');\n  const {\n    subjectGuesses,\n    descriptorGuesses,\n    activateItem,\n    activeItem,\n    matchedItems,\n    resetGuesses,\n    isComplete,\n    randomSelection,\n  } = useGuessing({\n    drawings,\n    userId: user.id,\n    subjectsIds,\n    descriptorsIds,\n  });\n  const [choseRandomly, setChoseRandomly] = useState(false);\n\n  const onGuessForMe = () => {\n    setChoseRandomly(true);\n    randomSelection();\n  };\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    if (!canvasSize) {\n      // Round to increments of 50\n      setCanvasSize(Math.floor(canvasWidth / 50) * 50);\n    }\n  }, [canvasSize, canvasWidth]);\n\n  useMock(() => {\n    onGuessForMe();\n  }, []);\n\n  const descriptors = (\n    <Container title={<Translate pt=\"Descritores\" en=\"Descriptors\" />}>\n      <EvaluationAllDescriptors\n        cards={cards}\n        descriptorsIds={descriptorsIds}\n        onSelect={activateItem}\n        activeItem={activeItem}\n        matchedItems={matchedItems}\n      />\n    </Container>\n  );\n\n  const subjects = (\n    <Container title={<Translate pt=\"Sujeitos\" en=\"Subjects\" />}>\n      <EvaluationAllSubjects\n        cards={cards}\n        subjectsIds={subjectsIds}\n        onSelect={activateItem}\n        activeItem={activeItem}\n        matchedItems={matchedItems}\n      />\n    </Container>\n  );\n\n  return (\n    <Step announcement={announcement} fullWidth>\n      <StepTitle>\n        <Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />\n      </StepTitle>\n\n      <PopoverRule content={<EvaluationRules />} />\n      <CanvasResizer />\n\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Faça pares com as cartas e os desenhos. Cada desenho tem um sujeito e um descritor\n              correspondente.\n              <br />\n              Basta clicar em uma carta e depois em seu desenho correspondente.\n              <br />\n              Para refazer, basta reselecionar o desenho ou carta normalmente.\n              <br />\n              Quando estiver pronto, clique em <b>Enviar sua avaliação</b>.\n            </>\n          }\n          en={\n            <>\n              Match the cards and drawings. Each drawing has a corresponding subject and descriptor.\n              <br />\n              Simply click on a card and then on its corresponding drawing.\n              <br />\n              To redo, just reselect the drawing or card normally.\n              <br />\n              When you're ready, click <b>Send evaluation</b>.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Space direction=\"vertical\">\n        <SpaceContainer wrap>\n          <Button type=\"default\" icon={<ClearOutlined />} onClick={resetGuesses} disabled={isLoading}>\n            <Translate pt=\"Limpar seleções\" en=\"Clear selections\" />\n          </Button>\n          <Button\n            type=\"default\"\n            icon={<ThunderboltOutlined />}\n            onClick={onGuessForMe}\n            disabled={isLoading || isComplete}\n          >\n            <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n          </Button>\n          <SendButton\n            onClick={() =>\n              onSubmitGuesses({\n                guesses: prepareGuesses(drawings, subjectGuesses, descriptorGuesses),\n                choseRandomly,\n              })\n            }\n            disabled={!isComplete}\n            icon={<CloudUploadOutlined />}\n          >\n            <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n          </SendButton>\n        </SpaceContainer>\n\n        <EvaluationAllDrawings\n          players={players}\n          cards={cards}\n          drawings={drawings}\n          onSelect={activateItem}\n          subjectGuesses={subjectGuesses}\n          descriptorGuesses={descriptorGuesses}\n          gameLanguage={gameLanguage}\n          activeItem={activeItem}\n        />\n\n        {gameLanguage === 'pt' ? subjects : descriptors}\n\n        {gameLanguage === 'pt' ? descriptors : subjects}\n      </Space>\n    </Step>\n  );\n}\n\nconst prepareGuesses = (\n  drawings: DrawingEntry[],\n  subjectGuesses: StringDictionary,\n  descriptorGuesses: StringDictionary,\n) => {\n  const guesses: ArrayDictionary<CardId> = {};\n\n  drawings.forEach(({ playerId }) => {\n    guesses[playerId] = [descriptorGuesses[playerId], subjectGuesses[playerId]];\n  });\n\n  return guesses;\n};\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { EvaluateIcon } from 'icons/EvaluateIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { ViewIf } from 'components/views';\n// Internal\nimport { useOnSubmitGuessesAPIRequest } from './utils/api-requests';\nimport { EvaluationRules } from './components/RulesBlobs';\nimport { StepEvaluate } from './StepEvaluate';\n\nexport function PhaseEvaluation({ players, state, meta }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<EvaluateIcon />}\n      title={<Translate pt=\"Adivinhação\" en=\"Match the cards\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={state.round.current < 2 ? 12 : undefined}\n    >\n      <EvaluationRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.SINAIS_DE_ALERTA.EVALUATION}>\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <ViewIf condition={state.drawings && user.id}>\n          <StepEvaluate\n            announcement={announcement}\n            gameLanguage={meta.language}\n            user={user}\n            players={players}\n            onSubmitGuesses={onSubmitGuesses}\n            cards={state.cards}\n            drawings={state.drawings}\n            subjectsIds={state.subjectsIds}\n            descriptorsIds={state.descriptorsIds}\n          />\n        </ViewIf>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Types\nimport type { GamePlayer } from 'types/player';\n// Components\nimport { AvatarEntry } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SlideShowLabel } from 'components/slide-show';\n\ntype GalleryWindowCreditsProps = {\n  artist: GamePlayer;\n};\n\nexport function GalleryWindowCredits({ artist }: GalleryWindowCreditsProps) {\n  return (\n    <div className=\"sda-gallery__credits\">\n      <SlideShowLabel>\n        <Translate pt=\"Criador\" en=\"Creator\" />\n      </SlideShowLabel>\n      <span className=\"uppercase\">\n        <AvatarEntry player={artist} />\n      </span>\n    </div>\n  );\n}\n","import { orderBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Flex, Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\nimport type { TextCard } from 'types/tdr';\n// Utils\nimport { getContrastColor } from 'utils/helpers';\n// Icons\nimport { StarIcon } from 'icons/StarIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SlideShowBubbleValue, SlideShowLabel, SlideShowPlayersList } from 'components/slide-show';\n// Internal\nimport type { GalleryEntry } from '../utils/types';\nimport { getTitle } from '../utils/helpers';\n\ntype GalleryWindowGuessesProps = {\n  players: GamePlayers;\n  cards: Dictionary<TextCard>;\n  artistColor: string;\n  galleryEntry: GalleryEntry;\n  gameLanguage: Language;\n};\n\nexport function GalleryWindowGuesses({\n  players,\n  cards,\n  artistColor,\n  galleryEntry,\n  gameLanguage,\n}: GalleryWindowGuessesProps) {\n  const entries = useMemo(\n    () =>\n      orderBy(\n        galleryEntry.playersSay.map((playerStayEntry) => {\n          const title = getTitle(\n            cards,\n            playerStayEntry.subjectId,\n            playerStayEntry.descriptorId,\n            gameLanguage,\n          );\n          const isSubjectCorrect = galleryEntry.subjectId === playerStayEntry.subjectId;\n          const isDescriptorCorrect = galleryEntry.descriptorId === playerStayEntry.descriptorId;\n          return {\n            id: title,\n            playersIds: playerStayEntry.playersIds,\n            score: playerStayEntry.score,\n            subject: cards[playerStayEntry.subjectId],\n            subjectCorrect: isSubjectCorrect,\n            descriptor: cards[playerStayEntry.descriptorId],\n            descriptorCorrect: isDescriptorCorrect,\n            correctness: Number(isSubjectCorrect) + Number(isDescriptorCorrect),\n            count: playerStayEntry.playersIds.length,\n          };\n        }),\n        ['correctness', 'count', 'id'],\n        ['desc', 'desc', 'asc'],\n      ),\n    [cards, galleryEntry, gameLanguage],\n  );\n\n  return (\n    <div className=\"sda-gallery__guesses\">\n      <SlideShowLabel>\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </SlideShowLabel>\n      {entries.map((entry, index) => {\n        const subjectName = (\n          <Typography.Text\n            keyboard={entry.subjectCorrect}\n            style={\n              entry.subjectCorrect && entry.correctness === 1\n                ? {\n                    backgroundColor: artistColor,\n                    color: getContrastColor(artistColor),\n                  }\n                : { color: 'inherit', backgroundColor: 'inherit' }\n            }\n          >\n            {entry.subject.text}\n          </Typography.Text>\n        );\n\n        const descriptorName = (\n          <Typography.Text\n            keyboard={entry.descriptorCorrect}\n            style={\n              entry.descriptorCorrect && entry.correctness === 1\n                ? {\n                    backgroundColor: artistColor,\n                    color: getContrastColor(artistColor),\n                  }\n                : { color: 'inherit', backgroundColor: 'inherit' }\n            }\n          >\n            {entry.descriptor.text}\n          </Typography.Text>\n        );\n\n        return (\n          <div key={`guess-${entry.id}-${index}`} className=\"sda-gallery__guess\">\n            <SlideShowBubbleValue\n              winner={entry.correctness === 2}\n              backgroundColor={artistColor}\n              extra={\n                <Flex align=\"center\" gap={3}>\n                  <IconAvatar icon={<StarIcon />} size=\"small\" /> {entry.score}\n                </Flex>\n              }\n            >\n              {gameLanguage === 'pt' ? (\n                <span>\n                  {subjectName} {descriptorName}\n                </span>\n              ) : (\n                <span>\n                  {descriptorName} {subjectName}\n                </span>\n              )}\n            </SlideShowBubbleValue>\n\n            <SlideShowPlayersList playersIds={entry.playersIds} players={players} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Typography } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\n// Components\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { SlideShowBubbleValue, SlideShowLabel, SlideShowNoWins } from 'components/slide-show';\n// Internal\nimport type { GalleryEntry } from '../utils/types';\nimport { getTitle } from '../utils/helpers';\n\ntype GalleryWindowResultProps = {\n  cards: Dictionary<TextCard>;\n  galleryEntry: GalleryEntry;\n  gameLanguage: Language;\n};\n\nexport function GalleryWindowResult({ cards, galleryEntry, gameLanguage }: GalleryWindowResultProps) {\n  return (\n    <div className=\"sda-gallery__result\">\n      {galleryEntry.correctness !== 2 && (\n        <>\n          <SlideShowLabel>\n            <Translate pt=\"E o título correto da placa é\" en=\"And the warning sign title is\" />\n          </SlideShowLabel>\n\n          <SlideShowBubbleValue winner>\n            {getTitle(cards, galleryEntry.subjectId, galleryEntry.descriptorId, gameLanguage)}\n          </SlideShowBubbleValue>\n\n          {galleryEntry.artistScore === 0 && (\n            <SlideShowNoWins>\n              <Translate\n                pt=\"Esse desenho deve ter sido muito ruim.\"\n                en=\"It must have been a very crappy drawing. Shame...\"\n              />\n            </SlideShowNoWins>\n          )}\n        </>\n      )}\n\n      <Typography.Paragraph className=\"mt-2\">\n        <Translate pt=\"O criador ganhou\" en=\"The creator earned\" />:{' '}\n        <PointsHighlight>{galleryEntry.artistScore}</PointsHighlight> pontos\n      </Typography.Paragraph>\n    </div>\n  );\n}\n","// Types\nimport type { GamePlayers } from 'types/player';\nimport type { TextCard } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport type { SlideShowConfig } from 'hooks/useSlideShow';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { SlideShow } from 'components/slide-show';\nimport { Step } from 'components/steps';\nimport { StepTitle } from 'components/text';\n// Internal\nimport type { GalleryEntry } from './utils/types';\nimport { GalleryWindowCredits } from './components/GalleryWindowCredits';\nimport { GalleryWindowGuesses } from './components/GalleryWindowGuesses';\nimport { GalleryWindowResult } from './components/GalleryWindowResult';\nimport { ScoringRules } from './components/RulesBlobs';\nimport { WarningDrawing } from './components/WarningDrawing';\n\ntype StepGalleryProps = {\n  gallery: GalleryEntry[];\n  players: GamePlayers;\n  cards: Dictionary<TextCard>;\n  slideShowConfig: SlideShowConfig;\n  gameLanguage: Language;\n};\n\nexport function StepGallery({ gallery, players, cards, slideShowConfig, gameLanguage }: StepGalleryProps) {\n  useTemporarilyHidePlayersBar();\n\n  const canvasWidth = useCardWidth(3, { gap: 16, minWidth: 150, maxWidth: 300 });\n\n  const galleryEntry = gallery[slideShowConfig.slideIndex];\n\n  const playerArtist = players[galleryEntry.artistId];\n  const currentColor = getAvatarColorById(playerArtist.avatarId);\n\n  return (\n    <Step fullWidth>\n      <StepTitle size=\"small\">\n        <Translate pt=\"Galeria de Placas\" en=\"Signs Gallery\" />\n      </StepTitle>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      <SlideShow\n        config={slideShowConfig}\n        barColor={currentColor}\n        leftClassName=\"sda-gallery__canvas\"\n        rightClassName=\"sda-gallery__info\"\n      >\n        <div>\n          <WarningDrawing drawing={galleryEntry.drawing} width={canvasWidth} />\n        </div>\n\n        <>\n          <GalleryWindowCredits artist={playerArtist} />\n\n          <GalleryWindowGuesses\n            players={players}\n            cards={cards}\n            artistColor={currentColor}\n            galleryEntry={galleryEntry}\n            gameLanguage={gameLanguage}\n          />\n\n          <GalleryWindowResult cards={cards} galleryEntry={galleryEntry} gameLanguage={gameLanguage} />\n        </>\n      </SlideShow>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Types\nimport type { GameRound, GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { HostNextPhaseButton } from 'components/host';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { StepRankingWrapper } from 'components/ranking';\n// Hooks\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  round: GameRound;\n  ranking: GameRanking;\n  onGoBack: () => void;\n};\n\nexport function StepRanking({ players, ranking, onGoBack, round }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate key=\"1\" pt=\"Pares corretos\" en=\"Correct matches\" />,\n        <Translate key=\"2\" pt=\"Pontos por seu desenho\" en=\"Points for your drawing\" />,\n      ]}\n    >\n      <SpaceContainer>\n        <Button onClick={onGoBack}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </SpaceContainer>\n      <HostNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useSlideShow } from 'hooks/useSlideShow';\nimport { useStep } from 'hooks/useStep';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { WarningSignIcon } from 'icons/WarningSignIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\n// Internal\nimport { SLIDE_DURATION } from './utils/constants';\nimport { GalleryRules } from './components/RulesBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\n\nexport function PhaseGallery({ players, state, meta }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const slideShowConfig = useSlideShow({\n    length: state.gallery.length,\n    slideDuration: SLIDE_DURATION,\n    onExpire: goToNextStep,\n  });\n\n  const onGoBack = () => {\n    slideShowConfig.reset();\n    goToPreviousStep();\n  };\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.SINAIS_DE_ALERTA.GALLERY}>\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<WarningSignIcon />}\n          title={<Translate pt=\"Galeria de Placas\" en=\"Signs Gallery\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n          type=\"block\"\n          duration={state.round.current < 3 ? 12 : undefined}\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          gallery={state.gallery}\n          players={players}\n          cards={state.cards}\n          gameLanguage={meta.language}\n          slideShowConfig={slideShowConfig}\n        />\n\n        {/* Step 2 */}\n        <StepRanking players={players} ranking={state.ranking} round={state.round} onGoBack={onGoBack} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Progress, Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport type { FinalGalleryEntry } from '../utils/types';\nimport { WarningDrawing } from './WarningDrawing';\n\ntype FinalGalleryItemProps = {\n  entry: FinalGalleryEntry;\n  players: GamePlayers;\n  width: number;\n};\n\nexport function FinalGalleryItem({ entry, players, width }: FinalGalleryItemProps) {\n  const player = players[entry.playerId];\n  const playerColor = getAvatarColorById(player.avatarId);\n\n  return (\n    <SpaceContainer vertical contained>\n      <AvatarName player={player} />\n      <WarningDrawing drawing={entry.drawing} width={width} />\n      <Typography.Text code className=\"uppercase\">\n        {entry.title}\n      </Typography.Text>\n\n      <Progress\n        percent={entry.accuracy * 100}\n        size=\"small\"\n        style={{ width: width }}\n        strokeColor={playerColor}\n      />\n    </SpaceContainer>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Translate } from 'components/language';\nimport { Container } from 'components/layout/Container';\n// Internal\nimport type { FinalGalleryEntry } from './utils/types';\nimport { achievementsReference } from './utils/achievements';\nimport { FinalGalleryItem } from './components/FinalGalleryItem';\n\nexport function PhaseGameOver({ state, players }: PhaseProps) {\n  const canvasWidth = useCardWidth(8, { gap: 16, minWidth: 100, maxWidth: 500 });\n\n  return (\n    <GameOverWrapper state={state} players={players} announcementIcon={<CrownIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Container title={<Translate pt=\"Sinais\" en=\"Sings\" />} contentProps={{ className: 'final-gallery' }}>\n        {state.gallery.map((entry: FinalGalleryEntry) => {\n          return (\n            <FinalGalleryItem\n              key={`${entry.playerId}-${entry.id}`}\n              entry={entry}\n              players={players}\n              width={canvasWidth}\n            />\n          );\n        })}\n      </Container>\n    </GameOverWrapper>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { Session } from 'components/session';\n// Internal\nimport { PhaseDrawing } from './PhaseDrawing';\nimport { PhaseEvaluation } from './PhaseEvaluation';\nimport { PhaseGallery } from './PhaseGallery';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.SINAIS_DE_ALERTA.DRAWING:\n      return PhaseDrawing;\n    case PHASES.SINAIS_DE_ALERTA.EVALUATION:\n      return PhaseEvaluation;\n    case PHASES.SINAIS_DE_ALERTA.GALLERY:\n      return PhaseGallery;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionSinaisDeAlerta() {\n  return (\n    <Session gameCollection={GAME_COLLECTION.SINAIS_DE_ALERTA} getActiveComponent={getActiveComponent} />\n  );\n}\n\nexport default SessionSinaisDeAlerta;\n","// Types\nimport type { AchievementReference } from 'types/achievements';\n\nconst ACHIEVEMENTS = {\n  MOST_DESCRIPTORS: 'MOST_DESCRIPTORS',\n  FEWEST_DESCRIPTORS: 'FEWEST_DESCRIPTORS',\n  MOST_SUBJECTS: 'MOST_SUBJECTS',\n  FEWEST_SUBJECTS: 'FEWEST_SUBJECTS',\n  TABLE_VOTES: 'TABLE_VOTES',\n  CHOOSE_FOR_ME: 'CHOOSE_FOR_ME',\n  BEST_DESCRIPTOR: 'BEST_DESCRIPTOR',\n  WORST_DESCRIPTOR: 'WORST_DESCRIPTOR',\n  BEST_SUBJECT: 'BEST_SUBJECT',\n  WORST_SUBJECT: 'WORST_SUBJECT',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.MOST_DESCRIPTORS]: {\n    icon: 'glasses',\n    title: {\n      pt: 'Mais descritivo',\n      en: 'Most descriptive',\n    },\n    description: {\n      pt: 'Acertou mais descritores',\n      en: 'Guessed the most descriptors',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_DESCRIPTORS]: {\n    icon: 'face-dead',\n    title: {\n      pt: 'Menos descritivos',\n      en: 'Fewest descriptors',\n    },\n    description: {\n      pt: 'Acertou menos descritores',\n      en: 'Guessed the least descriptors',\n    },\n  },\n  [ACHIEVEMENTS.MOST_SUBJECTS]: {\n    icon: 'dialog',\n    title: {\n      pt: 'Mais sujeitos',\n      en: 'Most subjects',\n    },\n    description: {\n      pt: 'Acertou mais sujeitos',\n      en: 'Guessed the most subjects',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_SUBJECTS]: {\n    icon: 'face-fed-up',\n    title: {\n      pt: 'Menos sujeitos',\n      en: 'Fewest subjects',\n    },\n    description: {\n      pt: 'Acertou menos sujeitos',\n      en: 'Guessed the least subjects',\n    },\n  },\n  [ACHIEVEMENTS.TABLE_VOTES]: {\n    icon: 'table',\n    title: {\n      pt: 'Voto no extra',\n      en: 'Table vote',\n    },\n    description: {\n      pt: 'Votou em cartas que não era de jogadores mais vezes',\n      en: 'Voted on non-player cards more times',\n    },\n  },\n  [ACHIEVEMENTS.CHOOSE_FOR_ME]: {\n    icon: 'dice',\n    title: {\n      pt: 'Chute para mim',\n      en: 'Guess for me',\n    },\n    description: {\n      pt: 'Usou a opção de chutar mais vezes',\n      en: 'Used the guess for me option the most',\n    },\n  },\n  [ACHIEVEMENTS.BEST_DESCRIPTOR]: {\n    icon: 'star',\n    title: {\n      pt: 'Melhor descritor',\n      en: 'Best descriptor',\n    },\n    description: {\n      pt: 'Desenhou o melhor descritor',\n      en: 'Drew the best descriptor',\n    },\n  },\n  [ACHIEVEMENTS.WORST_DESCRIPTOR]: {\n    icon: 'face-oops',\n    title: {\n      pt: 'Descritor menos habilidoso',\n      en: 'Not so skilled descriptor',\n    },\n    description: {\n      pt: 'Desenhou o pior descritor',\n      en: 'Drew the worst descriptor',\n    },\n  },\n  [ACHIEVEMENTS.BEST_SUBJECT]: {\n    icon: 'flower',\n    title: {\n      pt: 'Melhor sujeito',\n      en: 'Best subject',\n    },\n    description: {\n      pt: 'Desenhou o melhor sujeito',\n      en: 'Drew the best subject',\n    },\n  },\n  [ACHIEVEMENTS.WORST_SUBJECT]: {\n    icon: 'face-perplexed',\n    title: {\n      pt: 'Sujeito mais mais ou menos',\n      en: 'Not so skilled subject',\n    },\n    description: {\n      pt: 'Desenhou o pior sujeito',\n      en: 'Drew the worst subject',\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { useEffect, useState } from 'react';\n\nexport type SlideShowConfig = {\n  /**\n   * The total number of slides\n   */\n  length: number;\n  /**\n   * The duration of each slide\n   */\n  slideDuration?: number;\n  /**\n   * The index of the current slide\n   * @default 0\n   **/\n  slideIndex: number;\n  /**\n   * Set the index of the current slide\n   */\n  setSlideIndex: React.Dispatch<React.SetStateAction<number>>;\n  /**\n   * Flag to indicate if this is the first run through of the gallery\n   */\n  isFirstGalleryRunThrough: boolean;\n  /**\n   * Set the flag to indicate if this is the first run through of the gallery\n   */\n  setIsFirstGalleryRunThrough: React.Dispatch<React.SetStateAction<boolean>>;\n  /**\n   * Callback function to execute when the slide show expires\n   */\n  onExpire: () => void;\n  /**\n   * Reset the slide show to the first slide\n   */\n  reset: () => void;\n};\n\n/**\n * Controls slide show\n * @param length\n */\nexport function useSlideShow(options: {\n  length: number;\n  slideDuration: number;\n  onExpire: () => void;\n}): SlideShowConfig {\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [isFirstGalleryRunThrough, setIsFirstGalleryRunThrough] = useState(true);\n\n  useEffect(() => {\n    if (isFirstGalleryRunThrough && slideIndex === options.length - 1) {\n      setIsFirstGalleryRunThrough(false);\n    }\n  }, [isFirstGalleryRunThrough, slideIndex, options.length]);\n\n  return {\n    ...options,\n    slideIndex,\n    setSlideIndex,\n    reset: () => setSlideIndex(0),\n    isFirstGalleryRunThrough,\n    setIsFirstGalleryRunThrough,\n  };\n}\n","export function CheckMarkIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#a5eb78\"\n        d=\"M427.53 73.08L203.03 297.6a15.5 15.5 0 01-21.92 0l-96.64-96.64L8.1 277.3l145.78 145.8a54 54 0 0076.37 0L503.9 149.45l-76.37-76.37z\"\n      ></path>\n      <path\n        d=\"M478.65 124.2l-288.9 288.89a59.103 59.103 0 01-28.9 15.87 54 54 0 0069.4-5.86L503.9 149.45l-25.25-25.25z\"\n        opacity=\"0.1\"\n      ></path>\n      <path d=\"M192.07 447.01a61.7 61.7 0 01-43.91-18.18L2.37 283.03a8.1 8.1 0 010-11.45l76.37-76.37a8.1 8.1 0 0111.45 0l28.67 28.67a8.1 8.1 0 11-11.45 11.45L84.47 212.4l-64.91 64.91L159.6 417.37a45.6 45.6 0 0032.46 13.44 45.6 45.6 0 0032.46-13.44l186.95-186.95a8.1 8.1 0 1111.45 11.45L235.98 428.83A61.7 61.7 0 01192.07 447z\"></path>\n      <path d=\"M192.07 310.23c-6.3 0-12.23-2.45-16.69-6.9l-45.06-45.08a8.1 8.1 0 1111.45-11.45l45.07 45.07c1.4 1.4 3.25 2.16 5.23 2.16s3.83-.77 5.23-2.16L421.8 67.36a8.1 8.1 0 0111.46 0l76.37 76.36a8.1 8.1 0 010 11.46l-63.79 63.78a8.1 8.1 0 01-11.45-11.45l58.06-58.06-64.91-64.91-218.79 218.78a23.45 23.45 0 01-16.68 6.91z\"></path>\n    </svg>\n  );\n}\n","export function ClockIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <circle cx=\"256\" cy=\"256\" r=\"248\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 486C122.048 486 12.919 379.795 8.18 247c-.107 2.988-.18 5.986-.18 9 0 136.967 111.033 248 248 248s248-111.033 248-248c0-3.014-.073-6.012-.18-9C499.081 379.795 389.952 486 256 486z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"206.942\" fill=\"#e4eef9\"></circle>\n      <path\n        fill=\"#d5e0f2\"\n        d=\"M256 444.942c-111.274 0-202.022-87.828-206.736-197.942a209.92 209.92 0 00-.207 9c0 114.291 92.651 206.942 206.942 206.942S462.942 370.291 462.942 256c0-3.017-.079-6.015-.207-9C458.022 357.114 367.274 444.942 256 444.942z\"\n      ></path>\n      <path\n        fill=\"#405b6c\"\n        d=\"M331.17 183.393c-5.899-5.818-15.396-5.752-21.213.146L262.848 231.3c10.522 2.911 18.324 12.359 18.76 23.701l49.707-50.395c5.818-5.898 5.753-15.396-.145-21.213zM230.367 256c0-11.14 7.109-20.617 17.036-24.151l-92.462-82.397c-6.186-5.512-15.667-4.966-21.178 1.219s-4.966 15.667 1.219 21.178l95.407 85.021c-.01-.289-.022-.578-.022-.87z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"25.633\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#2d4456\"\n        d=\"M216.381 244.387l14.008 12.483c-.01-.29-.022-.578-.022-.87 0-11.14 7.109-20.617 17.036-24.151l-12.635-11.26c-8.792 5.283-15.446 13.747-18.387 23.798zm58.377-25.163l-11.91 12.075c10.522 2.911 18.324 12.359 18.76 23.701l13.128-13.31c-3.606-9.76-10.801-17.775-19.978-22.466z\"\n      ></path>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 263.634c-10.989 0-20.36-6.917-24.005-16.634a25.56 25.56 0 00-1.629 9c0 14.157 11.477 25.634 25.633 25.634 14.157 0 25.634-11.477 25.634-25.634a25.56 25.56 0 00-1.629-9c-3.644 9.716-13.015 16.634-24.004 16.634z\"\n      ></path>\n      <path d=\"M437.02 74.98C388.667 26.629 324.381 0 256 0S123.333 26.629 74.98 74.98C26.628 123.333 0 187.62 0 256c0 65.664 24.828 128.099 69.909 175.802a7.515 7.515 0 1010.923-10.323C38.398 376.577 15.029 317.809 15.029 256c0-64.366 25.065-124.879 70.578-170.392C131.121 40.094 191.634 15.029 256 15.029s124.879 25.065 170.392 70.579C471.905 131.121 496.97 191.634 496.97 256s-25.066 124.879-70.578 170.392C380.879 471.906 320.366 496.971 256 496.971c-56.111 0-110.745-19.706-153.838-55.487a7.515 7.515 0 00-9.601 11.563C138.346 491.063 196.389 512 256 512c68.381 0 132.667-26.629 181.02-74.98C485.372 388.667 512 324.38 512 256s-26.628-132.667-74.98-181.02z\"></path>\n      <path d=\"M402.975 109.552a7.514 7.514 0 00-.363-10.621C362.703 61.662 310.635 41.138 256 41.138c-57.391 0-111.348 22.349-151.93 62.932S41.138 198.608 41.138 256s22.349 111.348 62.932 151.931 94.539 62.931 151.93 62.931 111.348-22.349 151.931-62.931S470.862 313.392 470.862 256c0-49.329-16.259-95.72-47.02-134.156a7.514 7.514 0 10-11.734 9.39c28.605 35.743 43.724 78.886 43.724 124.766 0 110.188-89.645 199.833-199.833 199.833S56.167 366.188 56.167 256 145.812 56.167 256 56.167c50.813 0 99.238 19.088 136.354 53.748a7.512 7.512 0 0010.621-.363z\"></path>\n      <path d=\"M263.515 98.649V75.372a7.515 7.515 0 10-15.03 0v23.276a7.515 7.515 0 0015.03.001zm-15.03 314.702v23.276a7.515 7.515 0 1015.03 0v-23.276a7.515 7.515 0 10-15.03 0zm188.142-149.836a7.515 7.515 0 100-15.03h-23.276c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515zm-361.254-15.03c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515h23.276a7.515 7.515 0 100-15.03zm282.215 102.661a7.515 7.515 0 009.667-11.508l-81.672-68.603c2-3.919 3.245-8.283 3.539-12.904l47.69-48.35c8.687-8.451 8.585-23.551-.219-31.882-8.432-8.714-23.553-8.576-31.882.219l-44.363 44.977a33.14 33.14 0 00-11.013.378l-89.594-79.841c-8.887-8.252-23.953-7.381-31.831 1.833-8.269 9.28-7.447 23.559 1.833 31.829L173.1 215.93a7.516 7.516 0 0010-11.22l-43.355-38.635c-3.094-2.757-3.368-7.517-.611-10.61 2.624-3.072 7.653-3.36 10.61-.611l84.956 75.708a33.368 33.368 0 00-9.068 12.05l-20.094-17.906a7.516 7.516 0 00-9.999 11.221l27.576 24.573c2.204 16.183 16.106 28.698 32.885 28.698a33.025 33.025 0 0019.916-6.655zm-42.175-162.473c2.777-2.934 7.809-2.968 10.627-.072 2.936 2.777 2.969 7.81.072 10.627l-40.747 41.311a33.435 33.435 0 00-9.876-11.39zM256 274.169c-10.019 0-18.169-8.151-18.169-18.169s8.151-18.169 18.169-18.169c10.019 0 18.169 8.151 18.169 18.169s-8.15 18.169-18.169 18.169z\"></path>\n    </svg>\n  );\n}\n","export function CrownIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M445.512 460.432H66.488c-16.01 0-28.988-12.978-28.988-28.988 0-16.01 12.978-28.988 28.988-28.988h379.024c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.978 28.988-28.988 28.988z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M445.512 402.456h-30c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.979 28.988-28.988 28.988h30c16.01 0 28.988-12.978 28.988-28.988 0-16.01-12.979-28.988-28.988-28.988zm28.988-240l-143.5 75-75-135-90 135-128.5-75 45 240h347z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M331 237.46l-75-135.004-16.364 24.546 54.327 97.789c7.274 13.091 23.269 18.563 37.037 12.669zm110.241-57.621L399.5 402.456h30l45-240zM166 237.46L37.5 162.456l3.687 19.661 98.271 57.357A23.432 23.432 0 00166 237.46z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M251.05 150.169l-43.326-43.326a6.999 6.999 0 010-9.899l43.326-43.326a6.999 6.999 0 019.899 0l43.326 43.326a6.999 6.999 0 010 9.899l-43.326 43.326a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M304.276 96.944L260.95 53.618a6.999 6.999 0 00-9.899 0L241 63.668l33.276 33.276a7 7 0 010 9.9L241 140.119l10.05 10.05a6.999 6.999 0 009.899 0l43.326-43.326a7 7 0 00.001-9.899z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M371.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a6.999 6.999 0 019.899 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M401.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L361 290.906l10.246 10.246a6.999 6.999 0 010 9.899L361 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M131.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a7 7 0 019.9 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a7 7 0 01-9.9 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M161.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L121 290.906l10.246 10.246a6.999 6.999 0 010 9.899L121 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M278.747 259.703h-45.494a6.999 6.999 0 00-6.062 3.5l-22.747 39.399a7.002 7.002 0 000 7l22.747 39.399a6.999 6.999 0 006.062 3.5h45.494a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7l-22.747-39.399a7 7 0 00-6.062-3.5z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M307.556 302.602l-22.747-39.399a6.999 6.999 0 00-6.062-3.5h-30a6.999 6.999 0 016.062 3.5l22.747 39.399a7.002 7.002 0 010 7l-22.747 39.399a6.999 6.999 0 01-6.062 3.5h30a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7z\"\n      ></path>\n      <circle cx=\"37.625\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <circle cx=\"474.375\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M474.375 132.466a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125 0-16.638-13.488-30.125-30.125-30.125zm-436.75 0a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125.001-16.638-13.487-30.125-30.125-30.125z\"\n      ></path>\n      <path d=\"M136 271.306a14.401 14.401 0 00-10.253 4.247L105.45 295.85c-5.653 5.654-5.653 14.853 0 20.505l20.296 20.296c2.827 2.827 6.54 4.24 10.253 4.24s7.426-1.414 10.253-4.24l20.296-20.296c5.653-5.653 5.653-14.852 0-20.506l-20.296-20.295A14.394 14.394 0 00136 271.306zm0 54.385l-19.589-19.589L136 286.513l19.589 19.589zm229.747 10.961A14.455 14.455 0 00376 340.89a14.46 14.46 0 0010.254-4.239l20.296-20.296c5.652-5.653 5.652-14.852 0-20.506l-20.297-20.296c-5.654-5.652-14.853-5.653-20.507 0L345.45 295.85c-5.652 5.654-5.652 14.853 0 20.505zM376 286.513l19.589 19.589L376 325.692l-19.589-19.59zm-178.051 26.839l22.747 39.399a14.54 14.54 0 0012.557 7.25h45.494c5.163 0 9.975-2.778 12.558-7.25l22.745-39.397a14.534 14.534 0 00.001-14.501l-22.747-39.4a14.544 14.544 0 00-12.557-7.249h-45.494a14.54 14.54 0 00-12.557 7.25l-22.747 39.399a14.538 14.538 0 000 14.499zm35.593-46.149h44.917l22.457 38.899-22.457 38.899h-44.917l-22.458-38.899zM512 162.591c0-20.747-16.879-37.625-37.625-37.625-20.747 0-37.626 16.879-37.626 37.625 0 3.596.518 7.072 1.464 10.368l-104.208 54.467-49.893-89.813 25.465-25.465a14.406 14.406 0 004.248-10.254c0-3.873-1.509-7.515-4.247-10.253l-43.326-43.326a14.404 14.404 0 00-10.253-4.247 14.401 14.401 0 00-10.253 4.247L202.42 91.641a14.404 14.404 0 00-4.247 10.253c0 3.874 1.508 7.515 4.247 10.253l22.868 22.868-20.788 31.179a7.5 7.5 0 002.08 10.401c3.412 2.275 8.083 1.397 10.401-2.08l19.125-28.684 9.641 9.641a14.452 14.452 0 0010.252 4.24c3.712 0 7.427-1.414 10.254-4.24l6.828-6.828 51.362 92.457c1.994 3.594 6.486 4.864 10.03 3.005l110.679-57.849a37.809 37.809 0 0015.151 11.219l-37.027 197.479h-63.799c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h86.034c11.849 0 21.488 9.639 21.488 21.488s-9.64 21.488-21.488 21.488H66.488c-11.849 0-21.488-9.64-21.488-21.488s9.64-21.488 21.488-21.488h257.989c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H88.724L51.696 197.477a37.774 37.774 0 0014.007-9.875l96.516 56.336c3.375 1.973 7.799 1.017 10.021-2.317l25.34-38.006a7.5 7.5 0 00-12.481-8.321l-21.42 32.127-90.42-52.778a37.453 37.453 0 001.991-12.052c0-20.747-16.879-37.625-37.625-37.625S0 141.845 0 162.591c0 20.519 16.512 37.243 36.945 37.608l36.517 194.757h-6.974c-20.12 0-36.488 16.368-36.488 36.488s16.369 36.488 36.488 36.488h379.023c20.12 0 36.488-16.369 36.488-36.488s-16.368-36.488-36.488-36.488h-6.975L475.054 200.2c20.433-.365 36.946-17.09 36.946-37.609zm-256-18.078l-42.619-42.619L256 59.275l42.618 42.619zM15 162.591c0-12.476 10.15-22.625 22.625-22.625s22.625 10.15 22.625 22.625-10.15 22.625-22.625 22.625S15 175.067 15 162.591zm436.749 0c0-12.476 10.15-22.625 22.626-22.625S497 150.116 497 162.591s-10.149 22.625-22.625 22.625-22.626-10.149-22.626-22.625z\"></path>\n    </svg>\n  );\n}\n","export function GarbageIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7f3f1\"\n        d=\"M199.02 408.89h-19.67a5 5 0 01-5-5V290.5a5 5 0 015-5h19.67a5 5 0 015 5v113.4a5 5 0 01-5 5z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M411.84 215.02c-1.39-9.14-9.04-16.98-18.13-18.6-9.15-1.62-18.34 3.41-23.99 10.73a5.25 5.25 0 01-8.34 0c-5.64-7.32-14.84-12.35-23.98-10.72-9.1 1.61-16.75 9.45-18.13 18.59-.94 6.17.79 12.55 3.94 17.94 5.86 10.03 16.25 15.4 23.54 24.12h37.6c7.3-8.72 17.68-14.1 23.55-24.12 3.14-5.39 4.87-11.77 3.94-17.94z\"\n      ></path>\n      <path\n        fill=\"#e9a52d\"\n        d=\"M365.55 245.72c-39.32 0-71.2 55.63-71.2 91.73s31.88 65.38 71.2 65.38 71.2-29.27 71.2-65.37-31.88-91.74-71.2-91.74z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M388.03 251.79c18.94 19.47 31.4 49.66 31.4 72.23 0 36.11-31.88 65.38-71.2 65.38-13.4 0-25.92-3.4-36.62-9.3 13.05 13.9 32.37 22.73 53.94 22.73 39.32 0 71.2-29.27 71.2-65.38 0-28.89-20.42-70.28-48.72-85.66z\"\n      ></path>\n      <path\n        fill=\"#5ea570\"\n        d=\"M104.99 268.48a18.95 18.95 0 00-19.37-9.33c-7.57 1.33-13.3 7.84-15.62 15.13a4.34 4.34 0 01-6.49 2.36c-6.46-4.09-15.04-5.4-21.7-1.55a18.95 18.95 0 00-8.83 19.6c1.02 5.07 4.17 9.54 8.15 12.84 7.4 6.14 17 7.38 25.13 12.1l29.26-10.65c3.2-8.85 9.76-15.97 11.48-25.43.93-5.08.46-10.53-2.01-15.07z\"\n      ></path>\n      <path\n        fill=\"#6dc17d\"\n        d=\"M78.8 308.56c-36.94 13.45-47.87 76.62-35.52 110.55s52.31 50.54 89.26 37.1 56.89-51.86 44.54-85.8-61.33-75.3-98.28-61.85z\"\n      ></path>\n      <path\n        fill=\"#a87c72\"\n        d=\"M476.3 403.63a4.19 4.19 0 01-3.12-4.88 51.27 51.27 0 00-64.43-59.42 6.9 6.9 0 01-7.18-2.2 98.46 98.46 0 00-75.29-34.88 98.29 98.29 0 00-65.88 25.21 6.26 6.26 0 01-6.31 1.21 78.15 78.15 0 00-26.5-4.6 78.24 78.24 0 00-61.63 29.96 3.86 3.86 0 01-5.7.43 42.62 42.62 0 00-65.02 7.93 5.7 5.7 0 01-5.62 2.56 48.62 48.62 0 00-54.36 35.59 6.8 6.8 0 01-4.1 4.56A37.38 37.38 0 007.5 439.87v23.96a5 5 0 005 5h487a5 5 0 005-5v-23.96a37.36 37.36 0 00-28.2-36.24z\"\n      ></path>\n      <path\n        fill=\"#9a695e\"\n        d=\"M476.3 403.63a4.19 4.19 0 01-3.12-4.88 51.27 51.27 0 00-62.74-59.88 51.28 51.28 0 0137.74 59.88 4.19 4.19 0 003.12 4.88 37.36 37.36 0 0128.2 36.24v23.95a5 5 0 01-5 5h25a5 5 0 005-5v-23.95a37.36 37.36 0 00-28.2-36.24z\"\n      ></path>\n      <path\n        fill=\"#de5791\"\n        d=\"M249.31 269.6l8.26 22.67 33.77-12.3-8.26-22.67a7.59 7.59 0 00-9.72-4.53l-19.51 7.1a7.59 7.59 0 00-4.54 9.72z\"\n      ></path>\n      <path\n        fill=\"#91dafa\"\n        d=\"M318.11 322.21c-1.78-4.88-.66-10.16 2.5-14.23a7.77 7.77 0 001.04-7.4l-4.74-13.04a15.85 15.85 0 00-20.32-9.48l-44.28 16.12a15.85 15.85 0 00-9.47 20.32l4.74 13.03a7.77 7.77 0 005.57 5c5.03 1.1 9.27 4.42 11.05 9.3s.66 10.16-2.49 14.23a7.77 7.77 0 00-1.05 7.4l23.96 65.84 74.07-26.96-23.96-65.83a7.77 7.77 0 00-5.57-5c-5.02-1.09-9.27-4.41-11.05-9.3z\"\n      ></path>\n      <path\n        fill=\"#6cbff8\"\n        d=\"M334.73 336.5a7.77 7.77 0 00-5.57-5c-5.02-1.08-9.27-4.4-11.05-9.29s-.66-10.16 2.5-14.23a7.77 7.77 0 001.04-7.4l-4.74-13.04a15.85 15.85 0 00-20.32-9.48l-18.14 6.6c7.97-2.9 16.86 1.42 19.86 9.65l4.74 13.03c.9 2.5.61 5.3-.95 7.38-3.03 4.02-4.06 9.27-2.28 14.15s5.94 8.24 10.84 9.37a7.84 7.84 0 015.47 5.04l23.96 65.83 18.6-6.77z\"\n      ></path>\n      <path\n        fill=\"#a87c72\"\n        d=\"M410.44 432.03a26.44 26.44 0 00-31.2-26 4.75 4.75 0 01-5.44-3.55 45.62 45.62 0 00-82.3-13.59 5.38 5.38 0 01-7.04 1.77 26.45 26.45 0 00-39.09 23.23v35h165.07z\"\n      ></path>\n      <path d=\"M481.06 397.2a58.85 58.85 0 00-36.92-63.4 95.22 95.22 0 00-3.21-19.66 7.5 7.5 0 00-14.5 3.86 86.2 86.2 0 012.36 12.12 58.59 58.59 0 00-21.72 1.9 106.05 106.05 0 00-79.55-37.26l-3.56-9.8a23.39 23.39 0 00-1.78-3.78c10.27-14.3 25.77-27.96 43.37-27.96 20.13 0 37.28 17.5 47.81 34.63a7.5 7.5 0 0012.78-7.85c-7.31-11.9-15.79-21.52-24.9-28.52 4.77-4.14 9.53-8.59 13.13-14.74 4.27-7.3 6-15.42 4.89-22.85-1.86-12.24-12.06-22.69-24.24-24.85-10.3-1.84-21.6 2.6-29.47 11.4-7.86-8.8-19.16-13.24-29.45-11.4-12.2 2.16-22.4 12.61-24.24 24.85-1.13 7.42.6 15.53 4.87 22.85 3.6 6.17 8.39 10.62 13.18 14.76a98.34 98.34 0 00-19.11 19.84 23.28 23.28 0 00-14.95-.9l-5.72-15.7a15.1 15.1 0 00-19.34-9.03l-19.5 7.1c-3.8 1.38-6.82 4.15-8.52 7.8s-1.88 7.76-.5 11.54l5.71 15.72a23.15 23.15 0 00-11.41 11.33 23.19 23.19 0 00-.81 17.75 86.77 86.77 0 00-24.24 1.11v-27.55c0-6.9-5.6-12.5-12.5-12.5h-19.67c-6.9 0-12.5 5.6-12.5 12.5v48.47c-10.1-12.15-22.8-22.8-36.02-30.04a88.17 88.17 0 00-22.46-8.8c2.46-4.44 4.95-9.42 6-15.24 1.32-7.17.33-14.28-2.8-20.02a26.28 26.28 0 00-27.25-13.12c-8.7 1.53-16.15 7.8-20.12 16.7-8.7-4.2-18.62-4.22-26.14.14-9.33 5.41-14.56 17-12.43 27.56 1.28 6.39 5.09 12.47 10.7 17.14 4.57 3.79 9.7 6 14.43 7.82a85.38 85.38 0 00-10.06 17.51c-6.65 15.35-10.08 33.6-9.74 51.62a55.84 55.84 0 00-2.85 8A44.63 44.63 0 000 439.86v23.96c0 6.9 5.6 12.5 12.5 12.5h86.87a7.5 7.5 0 100-15H15v-21.46a29.71 29.71 0 0118.93-27.8 14.34 14.34 0 008.58-9.61 37.14 37.14 0 012.81-7.53 41.14 41.14 0 0143.2-22.56 13.26 13.26 0 0013.02-5.9 35.04 35.04 0 0129.52-16.08 35 35 0 0124.05 9.52 11.39 11.39 0 0016.74-1.24 71 71 0 0170.12-25.62 15.01 15.01 0 009.6 6.81c2.71.59 4.75 2.24 5.58 4.54.84 2.29.34 4.86-1.37 7.06a15.35 15.35 0 00-2.17 14.58l5.9 16.22a34 34 0 00-21.64 31.63v15.45a7.5 7.5 0 1015 0V413.9a18.97 18.97 0 0128-16.65 12.92 12.92 0 0016.9-4.23 38.02 38.02 0 0131.87-17.23 38.08 38.08 0 0136.9 28.57 12.3 12.3 0 0014.04 9.05 18.96 18.96 0 0122.36 18.63v3a7.5 7.5 0 1015 0v-3a33.97 33.97 0 00-37.54-33.75 53.03 53.03 0 00-26.77-31.78l-11.86-32.57a15.17 15.17 0 00-11.02-9.75c-2.72-.6-4.76-2.25-5.6-4.54-.83-2.29-.33-4.86 1.36-7.05.68-.87 1.25-1.82 1.71-2.82a91.08 91.08 0 0167.62 32.2 14.41 14.41 0 0014.99 4.57 43.82 43.82 0 0155 50.7 11.68 11.68 0 008.63 13.66A29.82 29.82 0 01497 439.87v21.46H134.37a7.5 7.5 0 100 15H499.5c6.9 0 12.5-5.6 12.5-12.5v-23.96a44.8 44.8 0 00-30.94-42.67zM196.52 293v29.35a84.97 84.97 0 00-14.67 7.38V293zm-156.19.2a11.54 11.54 0 015.25-11.62c4.23-2.45 10.03-1.06 13.93 1.42a11.8 11.8 0 0010.41 1.1 11.78 11.78 0 007.23-7.55c1.4-4.37 4.95-9.17 9.76-10.01a11.54 11.54 0 0111.5 5.52c1.48 2.73 1.91 6.33 1.21 10.15-.78 4.32-3.09 8.4-5.53 12.73-.65 1.15-1.3 2.33-1.95 3.53-5.53.2-10.85 1.2-15.9 3.04a51.38 51.38 0 00-14.1 7.9c-5.99-2.38-11.98-4.13-16.22-7.65-3-2.48-4.98-5.52-5.59-8.55zm49.24 64.17a56.06 56.06 0 00-42.29 11.77c4.45-28.7 19.1-48.08 34.08-53.53 19.2-6.99 44.04 4.24 63.06 21.59a50.24 50.24 0 00-13.36-1.81 49.97 49.97 0 00-41.49 21.98zm240.12-128.2c-2.55-4.36-3.62-8.98-3-13.03.9-5.97 6.07-11.27 12.03-12.33 5.67-1 12.23 2.1 16.72 7.92 2.44 3.17 6.13 4.98 10.11 4.98s7.67-1.81 10.1-4.98c4.5-5.82 11.07-8.92 16.74-7.91 5.95 1.05 11.13 6.35 12.03 12.32.61 4.04-.46 8.67-3 13.04-3.18 5.42-8.47 9.61-13.66 14.1a53.19 53.19 0 00-22.21-5.06 53.04 53.04 0 00-22.18 5.08c-5.13-4.43-10.52-8.7-13.68-14.13zm-73.28 37.74l19.51-7.1c.05-.02.1 0 .12.06l5.68 15.62-19.67 7.16-5.69-15.62c-.01-.04.01-.1.05-.12zm71.1 71.9c.02.02.12.1.17.26l8.03 22.06a52.98 52.98 0 00-49.4 22.06 34 34 0 00-11.62-3.11l-6.99-19.19c-.05-.15-.03-.27-.06-.24 4.85-6.27 6.2-14.26 3.61-21.38-2.59-7.13-8.76-12.4-16.44-14.05a.58.58 0 01-.18-.26l-4.74-13.03a8.3 8.3 0 01.27-6.4 8.28 8.28 0 014.72-4.3l44.27-16.12a8.37 8.37 0 0110.71 5l4.75 13.03.02.11c0 .06 0 .11.02.16-4.84 6.27-6.18 14.26-3.59 21.37a22.3 22.3 0 0016.45 14.04zM167.72 146.83a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.74-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.42c6.81 4.61 7.4 15.66 5.08 23.97-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.89 16.8-6.1 20.03 1.17 34.5 9.25 40.79zm83.85 0a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.74-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.43c6.8 4.6 7.4 15.65 5.08 23.96-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.9 16.8-6.09 20.03 1.18 34.5 9.26 40.79zm83.85 0a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.73-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.42c6.81 4.61 7.4 15.66 5.08 23.97-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.89 16.8-6.1 20.03 1.17 34.5 9.25 40.79z\"></path>\n    </svg>\n  );\n}\n","export function PanicIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M104.478 214.588v136.94c0 83.889 67.555 152.93 151.444 152.972 83.719.042 151.6-67.813 151.6-151.522v-138.39c0-5.579-4.523-10.101-10.101-10.101H114.579c-5.578-.001-10.101 4.522-10.101 10.101z\"\n      ></path>\n      <path\n        fill=\"#ffbd86\"\n        d=\"M367.652 204.486v148.492c0 76.921-57.32 140.449-131.576 150.214 6.52.857 13.169 1.308 19.924 1.308 83.683 0 151.522-67.839 151.522-151.522v-138.39c0-5.579-4.523-10.101-10.101-10.101h-29.769z\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M422.674 352.978h-15.152v-90.913h15.152c25.105 0 45.457 20.352 45.457 45.457 0 25.104-20.352 45.456-45.457 45.456zm-333.348 0h15.152v-90.913H89.326c-25.105 0-45.457 20.352-45.457 45.457 0 25.104 20.352 45.456 45.457 45.456z\"\n      ></path>\n      <path\n        fill=\"#e175a5\"\n        d=\"M214.296 459.83c-6.439 0-11.097-6.041-9.6-12.304 5.543-23.196 26.409-40.442 51.304-40.442s45.761 17.246 51.304 40.442c1.497 6.263-3.161 12.304-9.6 12.304z\"\n      ></path>\n      <path\n        fill=\"#e69642\"\n        d=\"M263.442 31.701l21.77-21.166c5.797-5.636 15.511-3.033 17.713 4.746l8.27 29.215c1.574 5.56 7.287 8.859 12.889 7.442l29.436-7.445c7.838-1.982 14.949 5.129 12.967 12.967l-7.445 29.436a10.675 10.675 0 007.442 12.889l29.215 8.27c7.779 2.202 10.382 11.917 4.746 17.713l-21.166 21.77c-4.028 4.143-4.028 10.74 0 14.883l21.166 21.77c5.636 5.797 3.033 15.511-4.746 17.713l-29.215 8.27c-5.56 1.574-8.859 7.287-7.442 12.889l7.445 29.436c1.983 7.838-5.129 14.949-12.967 12.967l-29.436-7.445a10.675 10.675 0 00-12.889 7.442l-8.27 29.215c-2.202 7.779-11.917 10.382-17.713 4.746l-21.77-21.166c-4.143-4.028-10.74-4.028-14.883 0l-21.77 21.166c-5.797 5.636-15.511 3.033-17.713-4.746l-8.27-29.215c-1.574-5.56-7.287-8.859-12.889-7.442l-29.436 7.445c-7.838 1.982-14.949-5.129-12.967-12.967l7.445-29.436a10.675 10.675 0 00-7.442-12.889l-29.215-8.27c-7.779-2.202-10.382-11.917-4.746-17.713l21.166-21.77c4.028-4.143 4.028-10.74 0-14.883l-21.166-21.77c-5.636-5.797-3.033-15.511 4.746-17.713l29.215-8.27c5.56-1.574 8.859-7.287 7.442-12.889l-7.445-29.436c-1.982-7.838 5.129-14.949 12.967-12.967l29.436 7.445a10.675 10.675 0 0012.889-7.442l8.27-29.215c2.202-7.779 11.917-10.382 17.713-4.746l21.77 21.166c4.143 4.029 10.739 4.029 14.883 0z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M379.279 162.422c-4.028-4.143-4.028-10.74 0-14.883l21.166-21.77c5.636-5.797 3.033-15.511-4.746-17.713l-29.215-8.27c-5.56-1.574-8.859-7.287-7.442-12.889l7.445-29.436c1.983-7.838-5.129-14.949-12.967-12.967l-24.611 6.225c.544 5.641.831 11.357.831 17.141 0 97.488-79.03 176.518-176.518 176.518-1.885 0-3.76-.04-5.631-.098l-2.08 8.223c-1.983 7.838 5.129 14.949 12.967 12.967l29.436-7.445c5.602-1.417 11.315 1.881 12.889 7.441l8.27 29.215c2.202 7.779 11.917 10.382 17.713 4.746l21.77-21.166c4.143-4.028 10.74-4.028 14.883 0l21.77 21.166c5.797 5.636 15.511 3.033 17.713-4.746l8.27-29.215c1.574-5.56 7.287-8.859 12.889-7.441l29.436 7.445c7.838 1.982 14.949-5.129 12.967-12.967l-7.445-29.436a10.675 10.675 0 017.442-12.889l29.215-8.27c7.779-2.202 10.382-11.917 4.746-17.713z\"\n      ></path>\n      <path\n        fill=\"#f8e883\"\n        d=\"M255.691 178.223c-8.927 0-16.162-7.236-16.162-16.162V83.269c0-8.927 7.236-16.162 16.162-16.162s16.162 7.236 16.162 16.162v78.791c.001 8.927-7.235 16.163-16.162 16.163z\"\n      ></path>\n      <circle cx=\"256\" cy=\"226.71\" r=\"16.162\" fill=\"#f8e883\"></circle>\n      <path d=\"M422.674 254.564h-7.657v-39.98c0-5.531-2.57-10.468-6.573-13.697a18.416 18.416 0 001.903-4.551c1.673-6.244-.019-12.739-4.525-17.374l-21.165-21.768a3.161 3.161 0 01-.001-4.428l21.166-21.77c4.507-4.635 6.198-11.13 4.525-17.373-1.673-6.245-6.385-11.024-12.605-12.785l-29.215-8.27a3.158 3.158 0 01-2.213-3.834l7.445-29.436c1.585-6.267-.198-12.737-4.769-17.308-4.57-4.57-11.039-6.357-17.307-4.768l-29.437 7.445a3.156 3.156 0 01-3.833-2.214l-8.27-29.215c-1.761-6.22-6.54-10.931-12.784-12.605-6.244-1.672-12.739.018-17.375 4.525l-21.77 21.167a3.158 3.158 0 01-4.426 0L232.016 5.157c-4.635-4.505-11.13-6.198-17.374-4.524s-11.023 6.386-12.784 12.605l-8.27 29.216a3.166 3.166 0 01-3.833 2.214l-29.437-7.447c-6.264-1.583-12.737.198-17.307 4.769-4.571 4.571-6.354 11.042-4.769 17.308l7.445 29.436a3.158 3.158 0 01-2.213 3.834l-29.215 8.27c-6.221 1.761-10.932 6.54-12.605 12.785-1.673 6.243.019 12.738 4.524 17.373l21.166 21.769a3.161 3.161 0 01.001 4.428l-21.166 21.769c-4.507 4.635-6.198 11.13-4.525 17.374a18.4 18.4 0 001.903 4.551c-4.003 3.229-6.573 8.166-6.573 13.697v39.98h-7.657c-29.2 0-52.956 23.756-52.956 52.957 0 29.2 23.756 52.956 52.956 52.956h7.91c.827 15.085 3.74 29.88 8.706 44.096a7.5 7.5 0 007.08 5.029c.82 0 1.655-.136 2.473-.422a7.499 7.499 0 004.608-9.553c-5.389-15.427-8.12-31.612-8.12-48.107V214.585c0-1.434 1.166-2.6 2.6-2.6h9.79l19.101 5.407a3.158 3.158 0 012.213 3.834l-7.445 29.436c-1.585 6.267.198 12.738 4.769 17.309 4.571 4.57 11.039 6.352 17.307 4.767l29.437-7.445a3.157 3.157 0 013.833 2.214l8.27 29.214c1.761 6.22 6.54 10.932 12.785 12.605 6.24 1.673 12.739-.017 17.374-4.524l21.77-21.167a3.158 3.158 0 014.426 0l21.771 21.168c3.458 3.361 7.95 5.156 12.602 5.156 1.584 0 3.185-.208 4.77-.633 6.245-1.673 11.024-6.386 12.785-12.605l8.27-29.215a3.157 3.157 0 013.833-2.213l29.436 7.444c6.267 1.589 12.737-.196 17.308-4.767s6.354-11.042 4.769-17.309l-7.445-29.436a3.158 3.158 0 012.213-3.834l19.101-5.407h9.79c1.434 0 2.6 1.166 2.6 2.6v138.398c0 14.965-2.282 29.7-6.784 43.797a7.5 7.5 0 1014.288 4.562c4.219-13.212 6.667-26.926 7.314-40.865h7.838c29.2 0 52.956-23.756 52.956-52.956.001-29.199-23.755-52.956-52.955-52.956zM89.326 345.478c-20.929 0-37.956-17.027-37.956-37.956s17.027-37.957 37.956-37.957h7.652v34.809a22.413 22.413 0 00-13.235-4.351h-5.529c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h5.529a7.39 7.39 0 015.975 3.056l7.261 10.053v17.348h-7.653zm275.115-142.519c-9.534 2.699-15.099 12.339-12.67 21.945l7.445 29.436c.386 1.521-.356 2.548-.833 3.024-.477.477-1.501 1.22-3.023.832l-29.437-7.445c-9.602-2.424-19.245 3.137-21.944 12.671l-8.27 29.214c-.427 1.511-1.583 2.028-2.233 2.203-.651.174-1.911.302-3.035-.79l-21.77-21.167c-3.553-3.455-8.11-5.182-12.67-5.182-4.559 0-9.118 1.728-12.67 5.182l-21.77 21.166c-1.124 1.093-2.386.964-3.035.791-.65-.175-1.807-.692-2.233-2.203l-8.27-29.213c-2.698-9.536-12.344-15.099-21.944-12.672l-29.438 7.446c-1.519.382-2.546-.356-3.022-.833-.477-.477-1.219-1.503-.833-3.024l7.445-29.436c2.43-9.606-3.136-19.246-12.67-21.945l-29.215-8.27c-1.511-.427-2.028-1.583-2.202-2.233-.175-.65-.304-1.91.79-3.035l21.167-21.77c6.906-7.104 6.906-18.234-.001-25.339l-21.166-21.77c-1.094-1.125-.965-2.384-.791-3.034.175-.651.692-1.807 2.203-2.233l29.215-8.27c9.534-2.699 15.099-12.339 12.67-21.945l-7.445-29.436c-.386-1.521.356-2.548.833-3.024.476-.476 1.501-1.216 3.023-.834l29.437 7.447c9.602 2.424 19.245-3.136 21.944-12.671l8.27-29.215c.427-1.51 1.582-2.027 2.232-2.202.653-.173 1.91-.305 3.036.79l21.77 21.167c7.103 6.908 18.236 6.908 25.339 0l21.77-21.166c1.126-1.097 2.384-.965 3.036-.791.65.175 1.806.692 2.232 2.202l8.27 29.214c2.698 9.535 12.342 15.101 21.944 12.671l29.437-7.445c1.518-.388 2.547.357 3.023.833.477.477 1.219 1.503.833 3.024L351.77 85.06c-2.43 9.606 3.136 19.246 12.67 21.945l29.215 8.27c1.511.427 2.028 1.582 2.203 2.233.174.65.303 1.909-.791 3.034L373.9 142.313c-6.906 7.104-6.906 18.234.001 25.339l21.166 21.769c1.094 1.125.965 2.385.79 3.035-.174.65-.691 1.807-2.202 2.233zm58.233 142.519h-7.652V328.13l7.262-10.054a7.386 7.386 0 015.974-3.055h5.529c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-5.529a22.413 22.413 0 00-13.235 4.351v-34.809h7.652c20.929 0 37.956 17.028 37.956 37.957 0 20.931-17.027 37.958-37.957 37.958zm-32.862 79.036a7.5 7.5 0 00-10.292 2.563c-12.592 20.942-30.428 38.472-51.58 50.695C306.17 490.352 281.296 497 256.003 497h-.079c-49.319-.027-94.684-25.219-121.353-67.388a7.5 7.5 0 10-12.677 8.017c29.432 46.537 79.534 74.34 134.022 74.37h.087c27.923 0 55.395-7.345 79.442-21.241 23.346-13.491 43.033-32.838 56.931-55.953a7.5 7.5 0 00-2.564-10.291z\"></path>\n      <path d=\"M197.401 445.782c-1.259 5.267-.064 10.716 3.277 14.949a17.249 17.249 0 0013.618 6.599h83.406a17.249 17.249 0 0013.618-6.599c3.342-4.233 4.536-9.682 3.277-14.948-6.5-27.202-30.596-46.199-58.599-46.199-28.001 0-52.097 18.998-58.597 46.198zm102.607 3.489a2.492 2.492 0 01-.463 2.169c-.32.407-.9.892-1.843.892h-83.406a2.272 2.272 0 01-1.843-.892 2.493 2.493 0 01-.463-2.17c4.88-20.423 22.976-34.686 44.008-34.686s39.13 14.263 44.01 34.687zm45.579-96.293c0-16.03-13.042-29.072-29.073-29.072-16.03 0-29.072 13.042-29.072 29.072s13.042 29.072 29.072 29.072c16.032 0 29.073-13.042 29.073-29.072zm-43.144 0c0-7.76 6.312-14.072 14.072-14.072s14.073 6.312 14.073 14.072-6.313 14.072-14.073 14.072-14.072-6.312-14.072-14.072zm-106.958-29.072c-16.031 0-29.073 13.042-29.073 29.072s13.042 29.072 29.073 29.072c16.03 0 29.072-13.042 29.072-29.072s-13.042-29.072-29.072-29.072zm0 43.144c-7.76 0-14.073-6.312-14.073-14.072s6.313-14.072 14.073-14.072 14.072 6.312 14.072 14.072-6.312 14.072-14.072 14.072zm60.205-181.325c13.046 0 23.659-10.618 23.659-23.67v-22.109c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v22.109c0 4.78-3.885 8.67-8.659 8.67-4.775 0-8.66-3.89-8.66-8.67V83.266c0-4.775 3.885-8.66 8.66-8.66 4.774 0 8.659 3.885 8.659 8.66v21.68c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-21.68c0-13.046-10.613-23.66-23.659-23.66s-23.66 10.614-23.66 23.66v78.789c.001 13.052 10.615 23.67 23.66 23.67zm.31 17.323c-13.048 0-23.663 10.615-23.663 23.662 0 13.048 10.615 23.663 23.663 23.663s23.663-10.615 23.663-23.663c0-13.047-10.615-23.662-23.663-23.662zm0 32.324c-4.776 0-8.663-3.887-8.663-8.663s3.887-8.662 8.663-8.662 8.663 3.886 8.663 8.662c0 4.777-3.887 8.663-8.663 8.663z\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","export function WarningSignIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#ceddf4\" d=\"M224.9 380.11h62.19v124.38H224.9V380.11z\"></path>\n      <path\n        fill=\"#b1caef\"\n        d=\"M224.9 380.11v20.02h17.14c8.29 0 15.02 6.72 15.02 15.02v89.34h30.03V380.11H224.9z\"\n      ></path>\n      <path\n        fill=\"#ffcd05\"\n        d=\"M97.48 380.11c-21.71 0-41.74-11.8-52.26-30.79a59.749 59.749 0 011.59-60.63L205.33 35.06C216.32 17.48 235.26 6.98 256 6.98s39.68 10.5 50.67 28.08L465.19 288.7a59.749 59.749 0 011.59 60.63c-10.53 18.99-30.55 30.79-52.26 30.79H97.48z\"\n      ></path>\n      <path\n        fill=\"#faa019\"\n        d=\"M465.19 288.69L306.67 35.06C295.68 17.48 276.74 6.98 256 6.98c-6.38 0-12.59.99-18.45 2.88 13.19 4.25 24.61 13.03 32.22 25.2L428.29 288.7a59.749 59.749 0 011.59 60.63c-10.52 18.99-30.55 30.79-52.26 30.79h36.91c21.71 0 41.74-11.8 52.26-30.79a59.749 59.749 0 00-1.59-60.63z\"\n      ></path>\n      <path\n        fill=\"#555a6e\"\n        d=\"M256 241.28c-6.47 0-11.9-4.85-12.64-11.28l-12.25-107.12c-.86-7.55 5.04-14.17 12.64-14.17h24.51c7.6 0 13.5 6.62 12.64 14.17L268.65 230c-.73 6.43-6.17 11.28-12.64 11.28z\"\n      ></path>\n      <circle cx=\"256\" cy=\"287.46\" r=\"19.88\" fill=\"#555a6e\"></circle>\n      <path d=\"M471.55 284.72l-64.36-102.99c-2.2-3.52-6.83-4.59-10.35-2.39s-4.59 6.83-2.39 10.35l64.36 102.99c21.1 33.74-4.2 79.93-44.3 79.93H97.47c-39.79 0-65.56-45.92-44.3-79.93L211.69 39.04c19.91-31.83 68.58-32.04 88.61 0l76.81 122.91a7.508 7.508 0 0010.35 2.39 7.508 7.508 0 002.39-10.35L313.04 31.08c-25.91-41.44-88.17-41.43-114.08 0L40.45 284.72c-27.49 43.96 5.19 102.9 57.03 102.9H217.4v116.87c0 4.15 3.36 7.51 7.51 7.51h62.18c4.15 0 7.51-3.36 7.51-7.51v-41.17c0-4.15-3.36-7.51-7.51-7.51s-7.51 3.36-7.51 7.51v33.67h-47.17V387.63h47.17v42.97c0 4.15 3.36 7.51 7.51 7.51s7.51-3.36 7.51-7.51v-42.97h119.93c51.83 0 84.51-58.95 57.03-102.9z\"></path>\n      <path d=\"M125.03 236.82a7.508 7.508 0 00-2.39-10.35 7.508 7.508 0 00-10.35 2.39L67 301.31c-14.7 23.51 2.73 54.97 30.46 54.97h317.05c27.73 0 45.16-31.47 30.46-54.97L286.46 47.68c-13.85-22.16-47.07-22.15-60.92 0l-95.88 153.4a7.508 7.508 0 002.39 10.35 7.508 7.508 0 0010.35-2.39l95.87-153.4c8.06-12.89 27.4-12.9 35.46 0l158.52 253.63c9.05 14.48-2.8 32-17.73 32H97.47c-14.92 0-26.78-17.52-17.73-32l45.29-72.46z\"></path>\n      <path d=\"M268.25 101.21h-24.51c-13.43 1.51-20.13 9.02-20.1 22.53l12.25 107.12c1.17 10.22 9.81 17.93 20.1 17.93s18.93-7.71 20.1-17.93l12.25-107.12c1.68-9.15-4.96-23.48-20.1-22.53zm5.18 20.82l-12.25 107.12a5.215 5.215 0 01-10.36 0l-12.25-107.12c0-3.48 1.72-5.42 5.18-5.81h24.51c3.46.39 5.19 2.32 5.18 5.81zM256 260.06c-15.1 0-27.39 12.29-27.39 27.39s12.29 27.39 27.39 27.39 27.39-12.29 27.39-27.39c0-15.1-12.29-27.39-27.39-27.39zm0 39.77c-6.82 0-12.38-5.55-12.38-12.38s5.55-12.38 12.38-12.38 12.38 5.55 12.38 12.38-5.55 12.38-12.38 12.38z\"></path>\n    </svg>\n  );\n}\n"],"names":["unknownText","pt","en","Achievements","players","achievements","reference","colorScheme","title","titleProps","size","className","clsx","getAnimationClass","length","contained","map","achievement","index","type","icon","achievementObj","player","playerId","li","getAnimation","duration","delay","id","avatarId","name","Boolean","description","content","String","value","shape","Container","children","contentProps","spaceProps","level","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","PointsHighlight","iconSize","GainedPoint","gainedPoint","order","isPositive","isNegative","color","GainedPoints","gainedPoints","gainedPointsDescriptions","points","Array","isArray","RankingBoard","ranking","hideGainedPoints","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useMeasure","ref","height","maxPoints","useMemo","Math","max","scores","newScore","seconds","useCountdown","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","opacity","CrownFilled","hPosition","top","undefined","StepRankingWrapper","subtitle","useTemporarilyHidePlayersBar","appearance","useGameAppearance","scheme","CaretUpOutlined","RoundAnnouncement","round","onPressButton","buttonText","time","unskippable","circleColor","primaryColor","translate","useLanguage","circleStyle","borderColor","src","roundTitlePt","roundTitleEn","alt","current","onClick","disabled","custom","SlideShowControls","config","disableControls","barColor","nextButtonProps","slideDuration","totalDuration","timeLeft","isRunning","pause","resume","disableControlsFlag","isFirstGalleryRunThrough","expectedSlideIndex","min","floor","slideIndex","setSlideIndex","slots","fill","e","i","width","calculateProgress","backgroundColor","s","SlideShow","leftClassName","rightClassName","SlideShowLabel","props","SlideShowBubbleValue","winner","extra","getContrastColor","MessageFilled","SlideShowPlayersList","playersIds","selectedPlayersNames","getPlayerNamesFromIds","join","A","Group","SlideShowNoWins","Text","GarbageIcon","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","SINAIS_DE_ALERTA_ACTIONS","sinaisDeAlertaTimer","require","SinaisDeAlertaTimerSound","useGlobalLocalStorage","volume","useAudio","autoPlay","loop","audio","controls","getTitle","cards","subjectId","descriptorId","language","text","WarningSignBackgroundMask","xmlns","viewBox","x","y","rx","ry","transform","stroke","strokeMiterlimit","strokeWidth","StepDraw","user","onSubmitDrawing","startDrawingTimer","announcement","gameLanguage","timeLimit","lines","setLines","isTimesUp","setTimesUp","drawing","JSON","stringify","start","useMock","mockDrawing","currentSubjectId","currentDescriptorId","header","PanicIcon","background","padding","mask","showControls","PhaseDrawing","state","meta","useStep","step","goToNextStep","setStep","useUser","setStartDrawingTimer","request","useGameActionRequest","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDrawingAPIRequest","DrawingIcon","currentRound","withoutTimer","onClose","phase","allowedPhase","PHASES","SINAIS_DE_ALERTA","DRAWING","EvaluationRules","GalleryRules","ScoringRules","checkType","cardId","includes","checkIsSubject","checkIsDescriptor","WarningDrawing","EvaluationAllDrawings","drawings","onSelect","subjectGuesses","descriptorGuesses","activeItem","canvasSize","subject","descriptor","isFullyGuessed","active","activeClass","CheckMarkIcon","code","EvaluationAllSubjects","subjectsIds","matchedItems","SpaceContainer","hideHeader","EvaluationAllDescriptors","descriptorsIds","StepEvaluate","onSubmitGuesses","isLoading","useLoading","canvasWidth","useCardWidth","gap","minWidth","maxWidth","setCanvasSize","userId","getDefaultSubjects","getDefaultDescriptors","setActiveItem","setSubjectGuesses","setDescriptorGuesses","result","Object","values","forEach","isComplete","every","activateItem","entryId","activeType","entryType","prev","resetGuesses","randomSelection","usedSubjects","availableSubjects","shuffle","filter","subjectVotes","keys","pop","usedDescriptors","availableDescriptors","descriptorVotes","useGuessing","choseRandomly","setChoseRandomly","onGuessForMe","descriptors","subjects","fullWidth","ClearOutlined","ThunderboltOutlined","guesses","prepareGuesses","CloudUploadOutlined","PhaseEvaluation","onSuccess","useOnSubmitGuessesAPIRequest","EvaluateIcon","EVALUATION","GalleryWindowCredits","artist","GalleryWindowGuesses","artistColor","galleryEntry","entries","playersSay","playerStayEntry","isSubjectCorrect","isDescriptorCorrect","score","subjectCorrect","descriptorCorrect","correctness","Number","count","subjectName","keyboard","descriptorName","align","StarIcon","GalleryWindowResult","artistScore","Paragraph","StepGallery","gallery","slideShowConfig","playerArtist","artistId","currentColor","getAvatarColorById","StepRanking","onGoBack","PhaseGallery","goToPreviousStep","useSlideShow","GALLERY","WarningSignIcon","reset","FinalGalleryItem","playerColor","vertical","percent","accuracy","strokeColor","PhaseGameOver","announcementIcon","CrownIcon","achievementsReference","getActiveComponent","LoadingPage","DEFAULT","LOBBY","PhaseLobby","RULES","PhaseRules","SETUP","PhaseSetup","GAME_OVER","PageError","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","options","setIsFirstGalleryRunThrough","d","ClockIcon","cx","cy","r"],"sourceRoot":""}