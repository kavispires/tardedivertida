{"version":3,"file":"static/js/8349.df6567d2.chunk.js","mappings":"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","sources":["components/icons/TrophyIcon.tsx","components/metrics/PointsHighlight.tsx","components/points/StarPoints.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","components/ribbons/Ribbon.tsx","components/ribbons/PlayerRibbon.tsx","components/ribbons/RibbonGroup.tsx","components/slide-show/SlideShowControls.tsx","components/slide-show/SlideShow.tsx","hooks/useSlideShow.ts","hooks/useVotingMatch.ts"],"sourcesContent":["export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","import { StarIcon } from 'components/icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { StarFilled } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype StarPointsProps = {\n  keyPrefix: string;\n  quantity?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  hideText?: boolean;\n};\n\nexport const StarPoints = ({ keyPrefix, quantity, className, hideText }: StarPointsProps) => {\n  if (!quantity) {\n    return <span />;\n  }\n\n  const isNegative = quantity < 0;\n  const num = Math.abs(quantity);\n\n  const StarsArray = Array.from({ length: num }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n\n  return (\n    <span className={clsx('star-points', isNegative && 'star-points--negative', className)}>\n      {isNegative ? '-' : '+'} <span className=\"star-points__stars\">{StarsArray}</span>\n      {!hideText && (\n        <>\n          <Translate pt=\"ponto\" en=\"point\" />\n          {num > 1 ? 's' : ''}\n        </>\n      )}\n    </span>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass, getColorFromLetter } from 'utils/helpers';\n\ntype RibbonProps = {\n  label: string;\n  position?: 'absolute' | 'static';\n};\n\nexport function Ribbon({ label, position = 'absolute' }: RibbonProps): JSX.Element {\n  return (\n    <div className={clsx('ribbon', `ribbon--${position}`)}>\n      <div\n        className={clsx(\n          'ribbon__content',\n          `ribbon__content--${label}`,\n          `color-background--${getColorFromLetter(label)}`,\n          getAnimationClass('bounceIn')\n        )}\n      >\n        {label}\n      </div>\n    </div>\n  );\n}\n","import { Tooltip } from 'antd';\nimport clsx from 'clsx';\n// Utils\nimport { getAnimationClass, getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\n\ntype RibbonProps = {\n  player: GamePlayer;\n  position?: 'absolute' | 'static';\n};\n\nexport function PlayerRibbon({ player, position = 'absolute' }: RibbonProps): JSX.Element {\n  return (\n    <div className={clsx('ribbon', `ribbon--${position}`)}>\n      <div\n        className={clsx('ribbon__content', getAnimationClass('bounceIn'))}\n        style={{ backgroundColor: getAvatarColorById(player.avatarId) }}\n      >\n        <Tooltip title={player.name}>\n          <Avatar id={player.avatarId} size=\"small\" />\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n","import { PlayerRibbon } from './PlayerRibbon';\nimport { Ribbon } from './Ribbon';\n\ntype RibbonGroupProps = {\n  labels: string[] | GamePlayer[];\n};\n\nexport function RibbonGroup({ labels }: RibbonGroupProps) {\n  return (\n    <div className=\"ribbon-group ribbon--absolute\">\n      {labels.length > 0 &&\n        labels.map((label) =>\n          typeof labels[0] === 'string' ? (\n            <Ribbon\n              key={label as string}\n              label={label.length > 0 ? label.charAt(label.length - 1) : label}\n              position=\"static\"\n            />\n          ) : (\n            <PlayerRibbon player={label as GamePlayer} position=\"static\" />\n          )\n        )}\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Components\nimport { Translate } from 'components/language';\n\ntype SlideShowControlsProps = {\n  length: number;\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  disableControls: boolean;\n  barColor: string;\n  windowDuration: number;\n};\n\nexport function SlideShowControls({\n  length,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  disableControls,\n  barColor = 'gray',\n  windowDuration = 10,\n}: SlideShowControlsProps) {\n  const { timeLeft, isRunning, pause, resume } = useCountdown({\n    duration: windowDuration * length,\n    autoStart: true,\n    onExpire: () => setStep(2),\n  });\n\n  // Automatically go to the next window every {windowDuration} seconds\n  useEffect(() => {\n    if (timeLeft < windowDuration * length && timeLeft > 0 && timeLeft % windowDuration === 0) {\n      setActiveIndex((s: number) => Math.min(s + 1, length - 1));\n    }\n  }, [timeLeft, setActiveIndex, length, windowDuration]);\n\n  const goToPreviousStep = () => {\n    setActiveIndex((s: number) => Math.max(s - 1, 0));\n  };\n\n  const goToNextStep = () => {\n    setActiveIndex((s: number) => Math.min(s + 1, length - 1));\n  };\n\n  return (\n    <div className=\"slide-show__controls\">\n      <div className=\"slide-show__controls-timer-bar\">\n        <div className=\"slide-show__controls-timer-bar-base\">\n          {Array(length)\n            .fill('')\n            .map((e, i) => {\n              return (\n                <div\n                  key={`control-timer-bar-${e + i}`}\n                  className=\"slide-show__controls-timer-bar-node\"\n                  style={{ width: `${99 / length}%` }}\n                >\n                  {e}\n                </div>\n              );\n            })}\n        </div>\n        <span\n          className=\"slide-show__controls-timer-bar-pill\"\n          style={{\n            width: `${Math.abs((windowDuration * timeLeft) / length - 100)}%`,\n            backgroundColor: barColor,\n          }}\n        ></span>\n      </div>\n\n      {!disableControls && (\n        <Space>\n          <Button\n            size=\"large\"\n            icon={<StepBackwardOutlined />}\n            onClick={goToPreviousStep}\n            disabled={disableControls || activeIndex === 0}\n          >\n            <Translate pt=\"Anterior\" en=\"Previous\" />\n          </Button>\n          <Button\n            size=\"large\"\n            icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n            onClick={isRunning ? pause : resume}\n          />\n          <Button\n            size=\"large\"\n            onClick={goToNextStep}\n            disabled={disableControls || activeIndex === length - 1}\n          >\n            <Translate pt=\"Próximo\" en=\"Next\" /> <StepForwardOutlined />\n          </Button>\n          <Button\n            size=\"large\"\n            onClick={() => setStep(2)}\n            icon={<TrophyOutlined />}\n            disabled={disableControls}\n          >\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        </Space>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { SlideShowControls } from './SlideShowControls';\n\ntype SlideShowProps = {\n  players: GamePlayers;\n  children: [ReactNode, ReactNode];\n  length: number;\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  disableControls: boolean;\n  barColor: string;\n  windowDuration: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  leftClassName?: string;\n  rightClassName?: string;\n};\n\n/**\n * Display Slick show with a left and right sides with full navigation controls\n * @param props\n * @returns\n */\nexport function SlideShow({\n  children,\n  length,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  disableControls,\n  barColor,\n  windowDuration = 10,\n  className = '',\n  leftClassName = '',\n  rightClassName = '',\n}: SlideShowProps) {\n  return (\n    <div className={clsx('slide-show', className)}>\n      <div className={clsx('slide-show__left', leftClassName)} id=\"gallery-left\">\n        {children[0]}\n      </div>\n      <div className={clsx('slide-show__right', rightClassName)} id=\"gallery-right\">\n        {children[1]}\n      </div>\n      <SlideShowControls\n        length={length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={disableControls}\n        barColor={barColor}\n        windowDuration={windowDuration}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\n/**\n * Controls slide show\n * @param length\n */\nexport function useSlideShow(length: number): {\n  activeIndex: number;\n  setActiveIndex: React.Dispatch<React.SetStateAction<number>>;\n  isFirstGalleryRunThrough: boolean;\n  setIsFirstGalleryRunThrough: React.Dispatch<React.SetStateAction<boolean>>;\n} {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [isFirstGalleryRunThrough, setIsFirstGalleryRunThrough] = useState(true);\n\n  useEffect(() => {\n    if (isFirstGalleryRunThrough && activeIndex === length - 1) {\n      setIsFirstGalleryRunThrough(false);\n    }\n  }, [isFirstGalleryRunThrough, activeIndex, length]);\n\n  return {\n    activeIndex,\n    setActiveIndex,\n    isFirstGalleryRunThrough,\n    setIsFirstGalleryRunThrough,\n  };\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { SEPARATOR } from 'utils/constants';\n\n/**\n * Delete duplicated votes on the 'value' side of the votes object\n * @param votes\n * @param target\n */\nconst deleteDuplicate = (votes: PlainObject, target: string) => {\n  const votesArray = Object.entries(votes);\n  const duplicateIndex = votesArray.findIndex((el) => el[1] === target);\n  if (duplicateIndex > -1) {\n    const duplicateKey = votesArray[duplicateIndex][0];\n    delete votes[duplicateKey];\n  }\n};\n\ntype Votes = {\n  [key: string]: string;\n};\n\n/**\n * Keeps track of an object with votes following the schema:\n * {<typeSEPARATORid...>: <typeSEPARATORid...>\n * @param keyType the type of the entry that will work as the key of the voting object\n * @param uniqueOnly Indicates if it is allow to voting duplicates\n * @param completeCount\n * @returns\n */\nexport function useVotingMatch(\n  keyType: string,\n  allowDuplicates: boolean = true,\n  completeCount?: number,\n  initialState: Votes = {}\n): {\n  votes: Votes;\n  setVotes: React.Dispatch<any>;\n  activeItem: string;\n  activateItem: (entryId: string) => void;\n  isVotingComplete: boolean;\n  resetVoting: (newInitialState: Votes) => void;\n  getEntryId: (arr: string[]) => string;\n  isItemActive: (entryId: string) => boolean;\n} {\n  const [votes, setVotes]: [Votes, React.Dispatch<any>] = useState({ ...initialState });\n  const [activeItem, setActiveItem]: [string, React.Dispatch<any>] = useState('');\n  const [isVotingComplete, setIsVotingComplete]: [boolean, React.Dispatch<any>] = useState(false);\n\n  const activateItem = useCallback(\n    (entryId: string) => {\n      // When new Item is already the active item, deselect it\n      if (entryId === activeItem) {\n        return setActiveItem('');\n      }\n\n      const [type] = entryId.split(SEPARATOR);\n\n      // When no active item or type of new item is the same as active item, set it\n      if (!activeItem || activeItem.startsWith(type)) {\n        return setActiveItem(entryId);\n      }\n\n      // When new item type is a key\n      if (type === keyType) {\n        setVotes((prevVotes: Votes) => {\n          const copy = { ...prevVotes };\n          // Find and clear any previous vote if uniqueOnly\n          if (!allowDuplicates) {\n            deleteDuplicate(copy, activeItem);\n          }\n\n          return {\n            ...copy,\n            [entryId]: activeItem,\n          };\n        });\n        return setActiveItem('');\n      }\n\n      // When new item is a value\n      setVotes((prevVotes: Votes) => {\n        const copy = { ...prevVotes };\n        // Find and clear any previous vote if uniqueOnly\n        if (!allowDuplicates) {\n          deleteDuplicate(copy, entryId);\n        }\n\n        return {\n          ...copy,\n          [activeItem]: entryId,\n        };\n      });\n\n      return setActiveItem('');\n    },\n    [activeItem, keyType, allowDuplicates]\n  );\n\n  const resetVoting = (newInitialState: Votes) => {\n    setVotes(newInitialState ?? initialState);\n    setActiveItem('');\n  };\n\n  const isItemActive = (item: string) => activeItem === item;\n\n  const getEntryId = (arr: string[]): string => arr.join(SEPARATOR);\n\n  useEffect(() => {\n    if (completeCount) {\n      setIsVotingComplete(Object.keys(votes).length === completeCount);\n    }\n  }, [completeCount, votes]);\n\n  return {\n    votes,\n    setVotes,\n    activeItem,\n    activateItem,\n    isVotingComplete,\n    resetVoting,\n    getEntryId,\n    isItemActive,\n  };\n}\n"],"names":["TrophyIcon","props","xmlns","viewBox","fill","d","cx","cy","r","PointsHighlight","children","type","iconSize","className","icon","StarPoints","keyPrefix","quantity","hideText","isNegative","num","Math","abs","StarsArray","Array","from","length","_","i","StarFilled","clsx","pt","en","GainedPoint","gainedPoint","order","description","isPositive","title","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","isArray","map","index","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","hPosition","id","top","CrownFilled","avatarId","name","undefined","StepRankingWrapper","subtitle","useTemporarilyHidePlayersBar","CaretUpOutlined","Ribbon","label","getColorFromLetter","getAnimationClass","PlayerRibbon","player","backgroundColor","getAvatarColorById","size","RibbonGroup","labels","charAt","SlideShowControls","activeIndex","setActiveIndex","setStep","disableControls","barColor","windowDuration","timeLeft","isRunning","pause","resume","s","min","e","width","StepBackwardOutlined","onClick","disabled","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","SlideShow","leftClassName","rightClassName","useSlideShow","isFirstGalleryRunThrough","setIsFirstGalleryRunThrough","deleteDuplicate","votes","target","votesArray","Object","entries","duplicateIndex","findIndex","el","useVotingMatch","keyType","allowDuplicates","completeCount","initialState","setVotes","activeItem","setActiveItem","isVotingComplete","setIsVotingComplete","activateItem","useCallback","entryId","split","SEPARATOR","startsWith","prevVotes","copy","resetVoting","newInitialState","isItemActive","item","getEntryId","arr","join","keys"],"sourceRoot":""}