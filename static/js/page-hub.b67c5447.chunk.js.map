{"version":3,"file":"static/js/page-hub.b67c5447.chunk.js","mappings":"4LAOO,SAASA,IACd,OAA4CC,EAAAA,EAAAA,IAAe,kBAA3D,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,MAAO,CACLC,SAAAA,EAAAA,GACAF,eAAAA,EACAG,kBAPwB,WACxBF,GAAkB,SAACG,GAAD,OAAQA,CAAR,GACnB,EAOF,C,wGChBM,SAASC,IACd,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,CACd,CAAEC,MAAO,OAAQC,MAAO,IAAKC,SAAuB,MAAbP,GACvC,CAAEK,MAAO,MAAOC,MAAO,OAAQC,SAAuB,SAAbP,GACzC,CAAEK,MAAO,QAASC,MAAO,aAAcC,SAAuB,eAAbP,GACjD,CAAEK,MAAO,SAAUC,MAAO,cAAeC,SAAuB,gBAAbP,GACnD,CAAEK,MAAO,UAAWC,MAAO,eAAgBC,SAAuB,iBAAbP,GACrD,CAAEK,MAAO,YAAaC,MAAO,iBAAkBC,SAAuB,mBAAbP,GACzD,CAAEK,MAAO,aAAcC,MAAO,kBAAmBC,SAAuB,oBAAbP,GAC3D,CAAEK,MAAO,WAAYC,MAAO,YAAaC,SAAuB,cAAbP,IAOrD,OACE,SAAC,IAAD,CACEI,QAASA,EACTI,aAAcR,EACdS,SARe,SAACC,GAClBR,EAASQ,EACV,EAOGC,cAAUC,EACVC,qBAAiBD,GAGtB,CCnBM,SAASE,EAAT,GAAgE,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAC3C,OACE,mBAAQC,UAAU,aAAlB,UACE,iBAAKA,UAAU,sBAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,kBAAMA,UAAU,oBAAhB,UAAqCH,EAArC,QACA,iBAAMG,UAAU,uBAAhB,SAAwCF,QAE1C,iBAAKE,UAAU,oBAAf,WACE,SAAC,IAAD,CAAOA,UAAU,0BAAjB,SAA4CD,KAC5C,SAAClB,EAAD,WAKT,C,0gBCPKoB,EAAwB,SAACC,EAA4BC,GACzD,IAAMC,EAAMC,KAAKD,MACXE,EAAcF,EAAM,MACpBG,EAAeC,OAAOC,QAAP,OAAeP,QAAf,IAAeA,EAAAA,EAAiB,CAAC,GAAGQ,QAAO,SAACC,EAAD,GAAyC,IAAD,eAApBC,EAAoB,KAAfC,EAAe,KAItG,OAHIA,EAAYP,IACdK,EAAIC,GAAOC,GAENF,CACR,GAAE,CAAC,GACJ,OAAO,UACJG,EAAAA,IADH,kBAEOP,GAFP,cAGKJ,EAAQC,IAGd,EAMM,SAASW,EAAT,GAA2E,IAAhDC,EAA+C,EAA/CA,SAC1BhC,GAAWC,EAAAA,EAAAA,MACTH,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAiCmC,EAAAA,EAAAA,KAAjC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAAgCC,EAAAA,EAAAA,KAAxBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UACVC,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAA2CE,EAAAA,EAAAA,KAA3C,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAmCC,EAAAA,EAAAA,WAAS,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,MAArC,eAAOK,GAAP,KAAeC,GAAf,KACA,IAAsB3D,EAAAA,EAAAA,IAAe,UAA5B4D,IAAT,gBACA,IAAwB5D,EAAAA,EAAAA,IAAe,YAA9B6D,IAAT,gBACA,IAA4B7D,EAAAA,EAAAA,IAAe,gBAAlC8D,IAAT,gBACA,IAA8BT,EAAAA,EAAAA,UAAS,CAAC,GAAxC,iBAAO1C,GAAP,MAAgBoD,GAAhB,OAEAC,EAAAA,EAAAA,YAAU,WACJrB,EAAM9B,OAAS6C,IACjBO,EAAAA,GAAAA,KAAA,+BAAqCtB,EAAM9B,OAE9C,GAAE,CAAC8B,EAAOe,KAEX,IAAMQ,IAAeC,EAAAA,EAAAA,cAAY,WAC/BZ,GAAc,EACf,GAAE,IASGa,GAAU,mCAAG,sGAEfpB,EAAU,UAAU,GACpBS,GAAW,GAHI,SAIqBY,EAAAA,GAAAA,WAAqB,CACvDC,SAAU7B,EAAS6B,SACnBxB,SAAAA,EACAnC,QAAAA,KAPa,QAIT4D,EAJS,QASFC,KAAKd,SAChBC,GAAUY,EAASC,KAAKd,QACxBE,GAAU,MACVC,GAAY,IACZC,GAAgB,IAChBV,EAAgB1B,EAAsByB,EAAgBZ,EAAAA,IAAkBgC,EAASC,KAAKd,SAChFe,EAAUC,OAAOC,SAASC,KAAKC,MAAMtE,GAAU,GACrDqC,EAAgB,GAAD,OAAI6B,EAAJ,YAAeF,EAASC,KAAKd,UAhB/B,gDAmBfoB,EAAAA,EAAAA,MAAmB,CACjBb,QAASlB,EACP,sDACA,+DACAD,GAEFiC,YAAaC,KAAKC,UAAU,KAAEhB,SAC9BiB,UAAW,eAEbC,QAAQC,MAAR,MACA7B,GAAc,GA7BC,yBA+BfE,GAAW,GACXT,EAAU,UAAU,GAhCL,4EAAH,qDA8ChB,OACE,iCACE,SAAC,IAAD,CAAQqC,KAAK,UAAUC,QAAS,kBAAM/B,GAAc,EAApB,EAA2BgC,OAAK,EAAhE,UACE,SAAC,KAAD,CAAWC,GAAG,QAAQC,GAAG,aAE1BnC,IACC,SAAC,IAAD,CACEhC,MAAK,UAAKyB,EAAU,oBAAqB,qBAApC,aAA6DN,EAASnB,MAAMwB,IACjF4C,KAAMpC,EACNqC,SAAUzB,GACV0B,KApBc,WAChBlC,GACFjD,EAAS,IAAD,OAAKiD,KAEbO,EAAAA,GAAAA,KACElB,EAAU,iDAA4C,uCAG3D,EAaO8C,cAAe,CAAE/E,SAAUgF,SAASpC,KACpCqC,cAAc,EANhB,UAQE,iCACE,SAAC,IAAD,CACEC,IAAKvD,EAASnB,MAAMwB,GACpBmD,IAAG,UAAKC,EAAAA,GAAAA,SAAL,OAA0BzD,EAAS6B,SAAnC,YAA+CxB,EAA/C,QACHqD,SAAQ,UAAKD,EAAAA,GAAAA,QAAL,qBAAoCpD,EAApC,QACRrB,UAAU,mBAGZ,SAAC2E,EAAD,CACEzF,QAAS8B,EAAS9B,QAClBG,SAAU0C,GAAasC,QAAQpC,IAC/B2C,gBA9EY,SAAChE,EAAaxB,GACpCkD,IAAW,SAAC1D,GAAD,eAAC,UACPA,GADM,cAERgC,EAAMxB,GAFE,GAIZ,EA0EWyF,gBAAiB3F,MAGnB,SAAC,IAAD,IAEC6C,IACC,iCACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAWgC,GAAG,iCAA8BC,GAAG,yCAEjD,SAAC,KAAD,CAASxB,QAASlB,EAAU,aAAc,iBAAkBwD,QAAM,OAIrE9D,EAAS+D,QAAQC,WAAW,WAC3B,SAAC,IAAD,CACEpB,KAAK,UACLqB,UAAQ,EACRzC,SACE,SAAC,KAAD,CACEuB,GAAG,6CACHC,GAAG,0DAMVhD,EAAS+D,QAAQC,WAAW,UAC3B,SAAC,IAAD,CACEpB,KAAK,UACLqB,UAAQ,EACRzC,SACE,SAAC,KAAD,CACEuB,GAAG,kDACHC,GAAG,wDAMVK,QAAQpC,KACP,4BACE,UAAC,KAAD,CAAOjC,UAAU,SAAjB,WACE,SAAC,KAAD,CAAW+D,GAAG,oBAAoBC,GAAG,qBADvC,KAC+D/B,OAE/D,SAAC,KAAD,WACE,SAAC,KAAD,CACE8B,GAAG,8DACHC,GAAG,qDAKT,SAAC,IAAD,CAAOhE,UAAU,kBAAkBkF,MAAM,SAAzC,UACE,SAAC,IAAD,CAAQtB,KAAK,UAAUuB,KAAK,QAAQ9F,SAAU0C,EAAW8B,QAASlB,GAAlE,UACE,SAAC,KAAD,CAAWoB,GAAG,aAAaC,GAAG,2BAS/C,CAaD,SAASW,EAAT,GAAyF,IAAtEzF,EAAqE,EAArEA,QAASG,EAA4D,EAA5DA,SAAUuF,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,gBACrD,OAAOR,QAAQnF,IACb,iBAAKc,UAAU,4BAAf,WACE,SAAC,UAAD,CAAkBoF,MAAO,EAAGpF,UAAU,mCAAtC,UACE,SAAC,KAAD,CAAW+D,GAAG,gBAAUC,GAAG,eAG5B9E,EAASmG,KAAI,SAACC,EAAQC,GAAT,eACZ,UAAC,cAAD,CAAqDvF,UAAU,oCAA/D,WACE,iBAAMA,UAAU,mCAAhB,SAAoDsF,EAAOnG,SAC3D,iBACEa,WAAWwF,EAAAA,EAAAA,GACT,kCACCX,EAAgBS,EAAO1E,MAAQ,uCAHpC,0BAMG0E,QANH,IAMGA,OANH,EAMGA,EAAQG,WANX,QAMkB,MAElB,SAAC,IAAD,CAAQpG,SAAUA,EAAUE,SAAU,SAACmG,GAAD,OAAOd,EAAgBU,EAAO1E,IAAK8E,EAAnC,KACtC,iBACE1F,WAAWwF,EAAAA,EAAAA,GACT,gCACAX,EAAgBS,EAAO1E,MAAQ,uCAHnC,0BAMG0E,QANH,IAMGA,OANH,EAMGA,EAAQK,UANX,QAMiB,OAjBnB,iBAAqCL,EAAOnG,OADhC,QAwBhB,gBAAKa,UAAU,kEAAf,UACE,SAAC,SAAD,WACE,SAAC,KAAD,CAAW+D,GAAG,8CAAqCC,GAAG,iDAI7D,C,0BCvPK4B,EAAkB,SAACb,GACvB,GAAIA,EAAQc,SAAS,OACnB,MAAO,UAGT,GAAId,EAAQc,SAAS,SACnB,MAAO,UAGT,GAAId,EAAQc,SAAS,QACnB,MAAO,UAGT,IAAMC,EAAQC,OAAOhB,EAAQ3B,MAAM,KAAK,IAExC,OAAI4C,MAAMF,GACD,UAGK,IAAVA,EACK,UAGK,IAAVA,EACK,UAGK,IAAVA,GAIAA,GAAS,EAHJ,UAOF,SACR,EAMM,SAASG,EAAT,GAA4C,IAAD,IAAvBC,EAAuB,EAAvBA,KACzB,GAAgC9E,EAAAA,EAAAA,KAAxBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAEZ6E,GAAWC,EAAAA,EAAAA,IAA6BF,GAE9C,OACE,UAAC,IAAD,CAEElG,UAAU,YACVqG,OACE,SAAC,WAAD,CAAcC,KAAMJ,EAAKnB,QAASwB,MAAOX,EAAgBM,EAAKnB,SAA9D,UACE,SAAC,IAAD,CACER,IAAK2B,EAAKrG,MAAMwB,GAChBmD,IAAG,UAAKC,EAAAA,GAAAA,SAAL,OAA0ByB,EAAKrD,SAA/B,YAA2CxB,EAA3C,QACHqD,SAAQ,UAAKD,EAAAA,GAAAA,QAAL,qBAAoCpD,EAApC,YARhB,WAaE,gBAAKrB,UAAU,sBAAf,UACE,UAAC,IAAD,CAAOwG,UAAU,WAAjB,WACE,SAAC,SAAD,CACE3G,OACE,kBAAMG,UAAU,mBAAmBH,MAAOqG,EAAKrG,MAAMwB,GAArD,UACG3C,EAAAA,IAAQ,WAAQwH,EAAKO,SAAb,KADX,IACsCP,EAAKrG,MAAMwB,MAGnDiC,YAAW,UAAKhC,EAAU,aAAc,YAA7B,YAA4C4E,EAAKQ,QACzDtD,MAAM,IACNuD,UACAC,KAAK,QAGV,SAAC,SAAD,CAAW5G,UAAU,yBAAyBsD,YAAa4C,EAAKW,QAAQxF,KAEvEgD,SAAQ,UAAA6B,EAAKY,aAAL,mBAAazF,UAAb,eAAwB0F,QAAS,KACxC,SAAC,KAAD,CACE/F,SAAUkF,EACVc,YAAa,CAAE7B,KAAM,QAASnF,UAAW,+BAI7C,SAACiH,EAAA,EAAD,CACEC,MAAI,EACJ/B,KAAM,CAAC,EAAG,GACVgC,MAAO,CAAEC,QAAS,QAClBX,SAAUP,EAAKO,SACfY,KAAMnB,EAAKmB,aAKjB,iBAAKrH,UAAU,qBAAf,UACGkG,EAAKC,WACJ,SAAC,SAAD,CACE7C,aACE,iCACE,SAACgE,EAAA,EAAD,IADF,IAC2BnB,EAASoB,IADpC,UACgDpB,EAASqB,IADzD,cACyErB,EAASsB,MADlF,cAON,SAAC,IAAD,CAASzH,UAAU,wBAEnB,UAAC,IAAD,CAAOwG,UAAU,WAAjB,WACE,SAAC,SAAD,CACElD,YAAahC,EAAU,QAAD,OACZ4E,EAAKwB,YAAYH,IADL,YACYrB,EAAKwB,YAAYF,IAD7B,4BAEbtB,EAAKwB,YAAYH,IAFJ,YAEWrB,EAAKwB,YAAYF,IAF5B,gBAMxB,SAAC,SAAD,CACExH,UAAU,0BACVsD,YAAahC,EAAU,cAAD,OACN4E,EAAKwB,YAAYC,MAAQ,IADnB,iCAERzB,EAAKwB,YAAYC,MAAQ,IAFjB,gBAMxB,SAAC,SAAD,CACE3H,UAAU,mDACVsD,YAAahC,EAAU,yBAAD,QACKsG,EAAAA,EAAAA,IAAoB1B,EAAKwB,YAAYG,cAD1C,4BAEAD,EAAAA,EAAAA,IAAoB1B,EAAKwB,YAAYG,qBAK/D,gBAAKV,MAAO,CAAEW,UAAW,QAAzB,SACGzD,QAAQ6B,EAAK6B,UAAU1G,MAAc,SAACN,EAAD,CAAiBC,SAAUkF,WApFhEA,EAAKrD,SAyFf,C,qCC7IM,SAASmF,KACd,IAAQtJ,GAAaJ,EAAAA,EAAAA,KAAbI,SACR,GAAwBkD,EAAAA,EAAAA,WAAS,GAAjC,eAAOqG,EAAP,KAAaC,EAAb,KAEMC,EAAKC,gBACLC,EAA2B3J,GAAYuE,OAAOC,SAASoF,WAAaH,EAC1E,EAA2ClF,OAAOC,SAA1CqF,EAAR,EAAQA,KAAMzJ,EAAd,EAAcA,SAAU0J,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,SACxBC,EAAU,UAAGP,EAAH,YAASI,GAAT,OAAgBzJ,EAAhB,YAA4B0J,GAAOG,QAAQ,KAAM,KAC3DC,EAAW,UAAMH,EAAN,aAAmBC,GAkBpC,OAhBAG,EAAAA,EAAAA,IAAc,YACPZ,GAAQvJ,GAAY2J,GACvBS,EAAAA,EAAAA,QAAc,CACZjJ,MAAO,wBACPkJ,MAAM,SAACC,EAAA,EAAD,IACNC,QAAS,mEACTC,OAAQ,gBACRC,WAAY,oBACZhF,KAAM,WACJ+D,GAAQ,GACRjF,OAAOC,SAASC,KAAOyF,CACxB,GAGN,IAEIlK,GAGH,8BACG2J,IACC,SAAC,IAAD,CACE7F,SACE,mGACmE,KACjE,SAAC,IAAD,CAAQW,KAAMyF,EAAahF,KAAK,OAAhC,8BAKJA,KAAK,UACLqB,UAAQ,EACRmE,QAAM,OAhBQ,uBAqBvB,C,8DCjDOC,GAAgBC,GAAAA,EAAAA,YAOjB,SAASC,GAAT,GAAwF,IAArEC,EAAoE,EAApEA,kBAAmBC,EAAiD,EAAjDA,cAAeC,EAAkC,EAAlCA,iBACpDC,EAAwB,SAAC/I,EAAaxB,GAC1CsK,GAAiB,SAACE,GAAD,eAAC,UACbA,GADY,cAEdhJ,EAAMxB,GAFQ,GAIlB,EAED,OACE,iBAAKY,UAAU,cAAf,WACE,SAAC6J,GAAA,EAAD,IADF,IACsBL,EADtB,IAC0C,KACxC,iBAAKxJ,UAAU,qBAAf,WACE,wCACA,SAAC,KAAD,CACEuH,IAAK,EACLC,IAAK,GACLrC,KAAK,QACLnF,UAAU,4BACVT,SAAU,SAACH,GAAD,OAAWuK,EAAsB,UAAD,OAAYvK,QAAZ,IAAYA,EAAAA,EAAS,EAArD,QAGd,iBAAKY,UAAU,qBAAf,WACE,iDACA,SAAC,KAAD,CAAUT,SAAU,SAACmG,GAAD,aAAOiE,EAAsB,kBAAmB5D,OAAM,UAACL,EAAEoE,cAAH,aAAC,EAAUC,SAAjE,QAEtB,iBAAK/J,UAAU,qBAAf,WACE,0CACA,SAAC,KAAD,CAAUT,SAAU,SAACmG,GAAD,aAAOiE,EAAsB,WAAY5D,OAAM,UAACL,EAAEoE,cAAH,aAAC,EAAUC,SAA1D,QAEtB,iBAAK/J,UAAU,qBAAf,WACE,yCACA,SAAC,KAAD,CACEuH,IAAK,GACLyC,KAAM,GACN7E,KAAK,QACLnF,UAAU,4BACVT,SAAU,SAACH,GAAD,OAAWuK,EAAsB,WAAD,OAAavK,QAAb,IAAaA,EAAAA,EAAS,EAAtD,QAGd,iBAAKY,UAAU,qBAAf,WACE,qCACA,SAACiK,GAAD,CAAe7K,WAAOM,EAAWwK,mBAAoBT,SAI5D,CAED,SAASQ,GAAT,GAA4D,IAAnC7K,EAAkC,EAAlCA,MAAO8K,EAA2B,EAA3BA,mBACtBC,GAAkB/I,EAAAA,EAAAA,KAAlB+I,cAeFC,GAAgCC,EAAAA,EAAAA,UACpC,kBACE7J,OAAO8J,OACL9J,OAAO+J,KAAKC,EAAAA,IAAU9J,QAAO,SAACC,EAAU8J,GACtC,IAAMC,EAASF,EAAAA,GAASC,GAcxB,YAb0B/K,IAAtBiB,EAAI+J,EAAOC,SACbhK,EAAI+J,EAAOC,OAAS,CAClB9K,OAAO+K,EAAAA,GAAAA,YAAWF,EAAOC,OACzBvL,MAAOsL,EAAOC,MACdE,SAAU,KAIdlK,EAAI+J,EAAOC,OAAOE,SAASC,KAAK,CAC9BjL,OAAO+K,EAAAA,GAAAA,YAAWT,EAAcO,EAAOvL,QACvCC,MAAM,GAAD,OAAKsL,EAAOC,OAAZ,OAAoBI,EAAAA,IAApB,OAAgCN,KAGhC9J,CACR,GAAE,CAAC,GAlBR,GAoBA,CAACwJ,IAGH,OACE,SAAC,KAAD,CACEC,SAAUA,EACVhL,MAAOA,EACPG,SAzCa,SAAC8H,GAChB6C,EACE7C,EASH,EA+BG2D,eAAe,EACfC,oBAAqB5B,GACrB6B,YAAY,mBACZ/F,KAAK,QACLgC,MAAO,CACLgE,MAAO,OACPC,SAAU,UAIjB,CCkGD,OAxLA,YACEC,EAAAA,EAAAA,GAAS,yBAET,IAAMrM,GAAWC,EAAAA,EAAAA,MACToC,GAAaD,EAAAA,EAAAA,KAAbC,SACR,GAA0BI,EAAAA,EAAAA,KAAnBC,GAAP,eACA,GAAwBnD,EAAAA,EAAAA,IAAe,YAA9B+M,GAAT,eACA,GAA+B/M,EAAAA,EAAAA,IAAe,mBAArCgN,GAAT,eACA,GAAoC3J,EAAAA,EAAAA,UAAmB,IAAvD,eAAO4J,EAAP,KAAmB/B,EAAnB,KACA,GAA0C7H,EAAAA,EAAAA,UAA2B,CAAC,GAAtE,eAAO6J,EAAP,KAAsB/B,EAAtB,MAEAb,EAAAA,EAAAA,IAAc,WACZ,IAAM6C,EAAehK,EAAgB,YACjCgK,GACFJ,EAAYI,EAEf,IAED,IAAMC,EAAS,mCAAG,wGAERC,EAAAA,EAAAA,MAFQ,OAGdL,GAAmB,GAEnBvM,EAAS,KALK,gDAOdwD,EAAAA,GAAAA,MAAc,uBAAd,MAPc,yDAAH,qDAWTqJ,GAAWxB,EAAAA,EAAAA,UACf,kBACE7J,OAAO8J,OAAOwB,EAAAA,GAAWC,QAAO,SAAC7F,GAC/B,IAAI8F,EAAS,GA8Bb,GA3BIP,EAAcQ,UAChBD,EAAOlB,KACL5E,EAAKwB,YAAYH,KAAOkE,EAAcQ,SAAW/F,EAAKwB,YAAYF,KAAOiE,EAAcQ,SAGrFR,EAAcS,UAChBF,EAAOlB,KAAKW,EAAcQ,UAAY/F,EAAKwB,YAAYC,MAGrD8D,EAAcU,iBAChBH,EAAOlB,KAAK5E,EAAKwB,YAAYG,YAAYhC,SAAS4F,EAAcQ,WAMpET,EAAWY,SAAQ,SAAC3B,GAClB,MAAwBA,EAAOrH,MAAM2H,EAAAA,IAArC,eAAOsB,EAAP,KAAiBC,EAAjB,MAEID,GAAYC,GAAiC,eAAjB,OAATC,EAAAA,SAAS,IAATA,EAAAA,QAAA,EAAAA,EAAAA,GAAYF,KAExBC,IADTN,EAAOlB,KAAK5E,EAAKmB,KAAKxB,SAASyG,GAIlC,IAGGb,EAActF,SAAU,CAAC,IAAD,EACpBA,GAAWC,EAAAA,EAAAA,IAA6BF,EAAD,UAAOuF,EAAcQ,eAArB,QAAgC,GAEzER,EAAcQ,QAChBD,EAAOlB,KACLW,EAActF,UAAYA,EAASqG,WAAa,IAC9Cf,EAActF,UAAYA,EAASqG,WAAa,IAGpDR,EAAOlB,KAAKW,EAActF,UAAYA,EAASoB,KAAOkE,EAActF,UAAYA,EAASqB,IAE5F,CAED,OAAOwE,EAAOS,MAAMpI,QACrB,GA9CH,GA+CA,CAACmH,EAAYC,IAGf,GAAsDpB,EAAAA,EAAAA,UAAQ,WAG5D,OAFuBwB,EAASa,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9M,MAAMwB,GAAYuL,EAAE/M,MAAMwB,GAAY,GAAK,CAAxD,IAEfX,QACpB,SAACC,EAAUuF,GAUT,OATIA,EAAK6B,UAAU1G,GACb,CAAC,QAAS,OAAOwE,SAASK,EAAKnB,UAAYmB,EAAKnB,QAAQC,WAAW,QACrErE,EAAIkM,SAAS/B,KAAK5E,GAElBvF,EAAImM,eAAehC,KAAK5E,GAG1BvF,EAAIoM,gBAAgBjC,KAAK5E,GAEpBvF,CACR,GACD,CACEmM,eAAgB,GAChBD,SAAU,GACVE,gBAAiB,IAGtB,GAAE,CAAClB,EAAUxK,IAtBNyL,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,gBAAiBF,EAAzC,EAAyCA,SAwBzC,OACE,UAAC,IAAD,CAAQ7M,UAAU,aAAlB,WACE,SAACJ,EAAA,EAAD,CACEC,OACE,iCACE,SAACmN,EAAA,EAAD,IADF,UAIFlN,UAAU,SAAC,KAAD,CAAWiE,GAAG,oCAAiCC,GAAG,2BAC5DjE,MAAO,EACL,SAAC,KAAD,GAAoB,oBACpB,SAAC,IAAD,CACEF,OAAO,SAAC,KAAD,CAAWkE,GAAG,eAAeC,GAAG,kBACvCiJ,UAAWtB,EAFb,UAKE,SAAC,IAAD,CAAQuB,QAAM,EAACC,OAAK,EAAqBhI,KAAK,QAA9C,mBAAyB,kBAFrB,qBASV,SAAC6C,GAAD,KAEA,SAACuB,GAAD,CACEE,cAAeA,EACfC,iBAAkBA,EAClBF,kBAAmBsD,EAAe/F,UAGpC,UAAC,YAAD,CAAgB/G,UAAU,YAAYoN,GAAG,iBAAzC,UACG1O,EAAAA,KACC,iCACE,SAAC,UAAD,CAAkB0G,MAAO,EAAzB,UACE,SAAC,KAAD,CAAWrB,GAAG,qBAAqBC,GAAG,yBAExC,SAAC,IAAD,CAAOmB,KAAM,CAAC,EAAG,IAAK+B,MAAI,EAAChC,MAAM,QAAQlF,UAAU,uBAAnD,SACG6M,EAASxH,KAAI,SAACa,EAAgBX,GAAjB,OACZ,SAACU,EAAD,CAA4CC,KAAMA,GAAlD,UAAkBA,EAAKO,SAAvB,YAAmClB,GADvB,OAIhB,SAAC,IAAD,QAGJ,SAAC,UAAD,CAAkBH,MAAO,EAAzB,UACE,SAAC,KAAD,CAAWrB,GAAG,iBAAcC,GAAG,iBAEjC,SAAC,IAAD,CAAOmB,KAAM,CAAC,EAAG,IAAK+B,MAAI,EAAChC,MAAM,QAAQlF,UAAU,uBAAnD,SACG8M,EAAezH,KAAI,SAACa,EAAgBX,GAAjB,OAClB,SAACU,EAAD,CAA4CC,KAAMA,GAAlD,UAAkBA,EAAKO,SAAvB,YAAmClB,GADjB,OAItB,SAAC,IAAD,KACE7G,EAAAA,KACA,iCACE,SAAC,UAAD,CAAkB0G,MAAO,EAAzB,UACE,SAAC,KAAD,CAAWrB,GAAG,qBAAqBC,GAAG,yBAExC,SAAC,IAAD,CAAOmB,KAAM,CAAC,EAAG,IAAK+B,MAAI,EAAChC,MAAM,QAAQlF,UAAU,uBAAnD,SACG6M,EAASxH,KAAI,SAACa,EAAgBX,GAAjB,OACZ,SAACU,EAAD,CAA4CC,KAAMA,GAAlD,UAAkBA,EAAKO,SAAvB,YAAmClB,GADvB,OAIhB,SAAC,IAAD,QAGJ,SAAC,UAAD,CAAkBH,MAAO,EAAzB,UACE,SAAC,KAAD,CAAWrB,GAAG,WAAWC,GAAG,mBAE9B,SAAC,IAAD,CAAOmB,KAAM,CAAC,EAAG,IAAK+B,MAAI,EAAChC,MAAM,QAAQlF,UAAU,uBAAnD,SACG+M,EAAgB1H,KAAI,SAACa,EAAgBX,GAAjB,OACnB,SAACU,EAAD,CAA4CC,KAAMA,GAAlD,UAAkBA,EAAKO,SAAvB,YAAmClB,GADhB,WAO9B,C,2qBClNY8H,EAAW,CACtBC,UAAUC,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,YACnCC,WAAWF,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,aACpCE,iBAAiBH,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,mBAC1CG,UAAUJ,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,aAGxB5K,EAAY,CACvBD,YAAY4K,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,cACrCI,UAAUL,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,YACnCK,oBAAoBN,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,uBAGlCM,EAAgB,CAC3BC,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,yBAG5BQ,EAA2B,CACtCD,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,oCAG5BS,EAA6B,CACxCF,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,sCAG5BU,EAAuB,CAClCH,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,+BAG5BW,EAAwB,CACnCJ,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,gCAG5BY,EAAuB,CAClCL,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,gCAG5Ba,EAAyB,CACpCN,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,qCAG5Bc,EAAsB,CACjCP,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,+BAG5Be,EAAqB,CAChCR,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,8BAG5BgB,EAAqB,CAChCT,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,4BAG5BiB,EAAsB,CACjCV,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,+BAG5BkB,EAAsB,CACjCX,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,8BAG5BmB,EAAoB,CAC/BZ,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,4BAG5BoB,EAAqB,CAChCb,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,8BAG5BqB,EAAuB,CAClCd,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,gCAG5BsB,EAAwB,CACnCf,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,iCAG5BuB,EAAiB,CAC5BhB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,yBAG5BwB,EAA0B,CACrCjB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,kCAG5ByB,EAAuB,CAClClB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,gCAG5B0B,EAAqB,CAChCnB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,8BAG5B2B,EAAqB,CAChCpB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,6BAG5B4B,EAAc,CACzBrB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,wBAG5B6B,EAAsB,CACjCtB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,8BAG5B8B,EAAkB,CAC7BvB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,yB","sources":["hooks/useDevFeatures.ts","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","pages/Hub/components/CreateGameModal.tsx","pages/Hub/components/GameCard.tsx","pages/Hub/components/DevEmulatorAlert.tsx","pages/Hub/components/Filters.tsx","pages/Hub/Hub.tsx","services/adapters.ts"],"sourcesContent":["import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return (\n    <Segmented\n      options={options}\n      defaultValue={pathname}\n      onChange={onNavigate}\n      onResize={undefined}\n      onResizeCapture={undefined}\n    />\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\">{extra}</Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { Image, Modal, message, Button, notification, Divider, Typography, Switch, Space, Alert } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: PlainObject, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId]);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameName: gameInfo.gameName,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n              className=\"round-corners\"\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {gameInfo.version.startsWith('alpha') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em alpha, não o jogue\"\n                    en=\"This game is still in alpha and shouldn't be played\"\n                  />\n                }\n              />\n            )}\n\n            {gameInfo.version.startsWith('beta') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em beta, prossiga com cuidado\"\n                    en=\"This game is in beta and bugs might be everywhere\"\n                  />\n                }\n              />\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: {\n    label: string;\n    key: string;\n    on?: string;\n    off?: string;\n  }[];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options, disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n\n      {options!.map((option, index) => (\n        <Typography.Paragraph key={`option-${option.label}`} className=\"create-game-modal-options__option\">\n          <span className=\"create-game-modal-options__label\">{option.label}</span>\n          <span\n            className={clsx(\n              'create-game-modal-options__off',\n              !selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.off ?? ''}\n          </span>\n          <Switch disabled={disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n          <span\n            className={clsx(\n              'create-game-modal-options__on',\n              selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.on ?? ''}\n          </span>\n        </Typography.Paragraph>\n      ))}\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Card, Image, Divider, Badge, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv, truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\nimport { GameTags } from 'components/general/GameTags';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('dev')) {\n    return '#6cb3f6';\n  }\n\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  const major = Number(version.split('.')[0]);\n\n  if (isNaN(major)) {\n    return '#96A0A3';\n  }\n\n  if (major === 0) {\n    return '#F9D859';\n  }\n\n  if (major === 1) {\n    return '#72D984';\n  }\n\n  if (major === 2) {\n    return '#7CBD51';\n  }\n\n  if (major >= 3) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n};\n\nexport function GameCard({ game }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  const duration = calculateGameAverageDuration(game);\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Space direction=\"vertical\">\n          <Card.Meta\n            title={\n              <span className=\"game-card__title\" title={game.title[language]}>\n                {isDevEnv && `[${game.gameCode}]`} {game.title[language]}\n              </span>\n            }\n            description={`${translate('Baseado em', 'Based on')} ${game.basedOn\n              .split('')\n              .reverse()\n              .join('')}`}\n          />\n\n          <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n\n          {Boolean(game.rules?.[language]?.length > 1) && (\n            <RulesModal\n              gameInfo={game}\n              buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n            />\n          )}\n\n          <GameTags\n            wrap\n            size={[1, 6]}\n            style={{ display: 'flex' }}\n            gameCode={game.gameCode}\n            tags={game.tags}\n          />\n        </Space>\n      </div>\n\n      <div className=\"game-card__actions\">\n        {game.duration && (\n          <Card.Meta\n            description={\n              <>\n                <ClockCircleOutlined /> {duration.min} min - {duration.max} min (Avg: {duration.ideal} min)\n              </>\n            }\n          />\n        )}\n\n        <Divider className=\"game-card__divider\" />\n\n        <Space direction=\"vertical\">\n          <Card.Meta\n            description={translate(\n              `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n              `For ${game.playerCount.min}-${game.playerCount.max} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count\"\n            description={translate(\n              `Melhor com ${game.playerCount.best || '?'} jogadores`,\n              `Best wih ${game.playerCount.best || '?'} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count game-card__margin-bottom\"\n            description={translate(\n              `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n              `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n            )}\n          />\n        </Space>\n\n        <div style={{ marginTop: '1rem' }}>\n          {Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Alert, Button, Modal } from 'antd';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n/**\n * The emulator only properly works if using the local ip, to allow multi device testing\n * including mobile, this component will display an alert in case the current port is localhost\n */\nexport function DevEmulatorAlert() {\n  const { isDevEnv } = useDevFeatures();\n  const [stay, setStay] = useState(false);\n\n  const ip = process.env.REACT_APP_LOCAL_IP;\n  const displayDevWarningMessage = isDevEnv && window.location.hostname !== ip;\n  const { port, pathname, hash, protocol } = window.location;\n  const newPath = `${ip}:${port}${pathname}/${hash}`.replace('//', '/');\n  const emulatorUrl = `${protocol}//${newPath}`;\n\n  useEffectOnce(() => {\n    if (!stay && isDevEnv && displayDevWarningMessage) {\n      Modal.confirm({\n        title: 'Wrong Dev Environment',\n        icon: <ExclamationCircleOutlined />,\n        content: 'You are in a development environment and not using the emulator.',\n        okText: 'Switch Routes',\n        cancelText: 'Stay in Localhost',\n        onOk: () => {\n          setStay(true);\n          window.location.href = emulatorUrl;\n        },\n      });\n    }\n  });\n\n  if (!isDevEnv) return <></>;\n\n  return (\n    <>\n      {displayDevWarningMessage && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"warning\"\n          showIcon\n          banner\n        />\n      )}\n    </>\n  );\n}\n","import { FilterOutlined } from '@ant-design/icons';\nimport { Checkbox, InputNumber, TreeSelect } from 'antd';\nimport { DefaultOptionType } from 'antd/lib/select';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { capitalize } from 'lodash';\nimport { useMemo } from 'react';\nimport { SEPARATOR, TAG_DICT } from 'utils/constants';\n\nconst { SHOW_PARENT } = TreeSelect;\n\ntype FiltersProps = {\n  setTagFilters: GenericFunction;\n  setNumberFilters: GenericFunction;\n  availabilityCount: number;\n};\nexport function Filters({ availabilityCount, setTagFilters, setNumberFilters }: FiltersProps) {\n  const onNumberFiltersUpdate = (key: string, value: number) => {\n    setNumberFilters((prevState: NumberDictionary) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  return (\n    <div className=\"hub-filters\">\n      <FilterOutlined />({availabilityCount}){' '}\n      <div className=\"hub-filters__entry\">\n        <label>Players</label>\n        <InputNumber\n          min={2}\n          max={12}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('players', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Recommended with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('recommendedWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Best with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('bestWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Duration</label>\n        <InputNumber\n          min={15}\n          step={15}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('duration', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Tags</label>\n        <TagTreeSelect value={undefined} onTreeSelectChange={setTagFilters} />\n      </div>\n    </div>\n  );\n}\n\nfunction TagTreeSelect({ value, onTreeSelectChange }: any) {\n  const { dualTranslate } = useLanguage();\n\n  const onChange = (tags: string[]) => {\n    onTreeSelectChange(\n      tags\n      // .map((tag) => {\n      //   if (tag.includes(SEPARATOR)) {\n      //     return tag.split(SEPARATOR);\n      //   }\n      //   return tag;\n      // })\n      // .flat()\n    );\n  };\n\n  const treeData: DefaultOptionType[] = useMemo(\n    () =>\n      Object.values(\n        Object.keys(TAG_DICT).reduce((acc: any, tagKey: string) => {\n          const tagObj = TAG_DICT[tagKey];\n          if (acc[tagObj.group] === undefined) {\n            acc[tagObj.group] = {\n              title: capitalize(tagObj.group),\n              value: tagObj.group,\n              children: [],\n            };\n          }\n\n          acc[tagObj.group].children.push({\n            title: capitalize(dualTranslate(tagObj.label)),\n            value: `${tagObj.group}${SEPARATOR}${tagKey}`,\n          });\n\n          return acc;\n        }, {})\n      ),\n    [dualTranslate]\n  );\n\n  return (\n    <TreeSelect\n      treeData={treeData}\n      value={value}\n      onChange={onChange}\n      treeCheckable={true}\n      showCheckedStrategy={SHOW_PARENT}\n      placeholder=\"Select Game Tags\"\n      size=\"small\"\n      style={{\n        width: '100%',\n        minWidth: '400px',\n      }}\n    />\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Typography, Layout, Space, Divider, Button, message, Popconfirm } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n// API\nimport { signOut } from 'services/firebase';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Utils\nimport GAME_LIST from 'utils/info';\n// Components\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DevHeader } from 'pages/Dev/DevHeader';\nimport { DevEmulatorAlert } from './components/DevEmulatorAlert';\nimport { Filters } from './components/Filters';\nimport { SEPARATOR, TAG_RULES } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv } from 'utils/helpers';\n\n// const TAGS_BY_TAG_GROUP = Object.keys(TAG_DICT).reduce((acc: Record<string, string[]>, key) => {\n//   if (acc[TAG_DICT[key].group] === undefined) {\n//     acc[TAG_DICT[key].group] = [];\n//   }\n//   acc[TAG_DICT[key].group].push(key);\n//   return acc;\n// }, {});\n\nfunction Hub() {\n  useTitle('Hub - Tarde Divertida');\n\n  const navigate = useNavigate();\n  const { language } = useLanguage();\n  const [getLocalStorage] = useLocalStorage();\n  const [, setLanguage] = useGlobalState('language');\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [tagFilters, setTagFilters] = useState<string[]>([]);\n  const [numberFilters, setNumberFilters] = useState<NumberDictionary>({});\n\n  useEffectOnce(() => {\n    const prevLanguage = getLocalStorage('language');\n    if (prevLanguage) {\n      setLanguage(prevLanguage);\n    }\n  });\n\n  const onSignOut = async () => {\n    try {\n      await signOut();\n      setIsAuthenticated(false);\n\n      navigate('/');\n    } catch (error: any) {\n      message.error('Something went wrong', error);\n    }\n  };\n\n  const gameList = useMemo(\n    () =>\n      Object.values(GAME_LIST).filter((game) => {\n        let result = [];\n\n        // Check player count\n        if (numberFilters.players) {\n          result.push(\n            game.playerCount.min <= numberFilters.players && game.playerCount.max >= numberFilters.players\n          );\n\n          if (numberFilters.bestWith) {\n            result.push(numberFilters.players === game.playerCount.best);\n          }\n\n          if (numberFilters.recommendedWith) {\n            result.push(game.playerCount.recommended.includes(numberFilters.players));\n          }\n        }\n\n        // Check tags\n        // TODO: this does not account for tagGroups and concurrent tags\n        tagFilters.forEach((tagKey) => {\n          const [tagGroup, tag] = tagKey.split(SEPARATOR);\n\n          if (tagGroup && tag && TAG_RULES?.[tagGroup] === 'exclusive') {\n            result.push(game.tags.includes(tag));\n          } else if (tag) {\n            result.push(game.tags.includes(tag));\n          }\n        });\n\n        // Check time\n        if (numberFilters.duration) {\n          const duration = calculateGameAverageDuration(game, numberFilters.players ?? 0);\n\n          if (numberFilters.players) {\n            result.push(\n              numberFilters.duration >= duration.customTime - 10 &&\n                numberFilters.duration <= duration.customTime + 10\n            );\n          } else {\n            result.push(numberFilters.duration >= duration.min && numberFilters.duration <= duration.max);\n          }\n        }\n\n        return result.every(Boolean);\n      }),\n    [tagFilters, numberFilters]\n  );\n\n  const { availableGames, comingSoonGames, devGames } = useMemo(() => {\n    const sortedGameList = gameList.sort((a, b) => (a.title[language] > b.title[language] ? 1 : -1));\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available[language]) {\n          if (['alpha', 'dev'].includes(game.version) || game.version.startsWith('beta')) {\n            acc.devGames.push(game);\n          } else {\n            acc.availableGames.push(game);\n          }\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        devGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [gameList, language]);\n\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <Popconfirm\n            title={<Translate pt=\"Tem certeza?\" en=\"Are you sure?\" />}\n            onConfirm={onSignOut}\n            key=\"logout-button\"\n          >\n            <Button danger ghost key=\"logout-button\" size=\"small\">\n              Logout\n            </Button>\n          </Popconfirm>,\n        ]}\n      />\n\n      <DevEmulatorAlert />\n\n      <Filters\n        setTagFilters={setTagFilters}\n        setNumberFilters={setNumberFilters}\n        availabilityCount={availableGames.length}\n      />\n\n      <Layout.Content className=\"container\" id=\"main-container\">\n        {isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n              {devGames.map((game: GameInfo, index: number) => (\n                <GameCard key={`${game.gameCode}-${index}`} game={game} />\n              ))}\n            </Space>\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Disponíveis\" en=\"Available\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {availableGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n        <Divider />\n        {!isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n              {devGames.map((game: GameInfo, index: number) => (\n                <GameCard key={`${game.gameCode}-${index}`} game={game} />\n              ))}\n            </Space>\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {comingSoonGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Hub;\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\n\nexport const GAME_API = {\n  loadGame: httpsCallable(functions, 'loadGame'),\n  addPlayer: httpsCallable(functions, 'addPlayer'),\n  makePlayerReady: httpsCallable(functions, 'makePlayerReady'),\n  rateGame: httpsCallable(functions, 'rateGame'),\n};\n\nexport const ADMIN_API = {\n  createGame: httpsCallable(functions, 'createGame'),\n  lockGame: httpsCallable(functions, 'lockGame'),\n  performAdminAction: httpsCallable(functions, 'performAdminAction'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitAction: httpsCallable(functions, 'arteRuimSubmitAction'),\n};\n\nexport const CONTADORES_HISTORIAS_API = {\n  submitAction: httpsCallable(functions, 'contadoresHistoriasSubmitAction'),\n};\n\nexport const DETETIVES_IMAGINATIVOS_API = {\n  submitAction: httpsCallable(functions, 'detetivesImaginativosSubmitAction'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  submitAction: httpsCallable(functions, 'espiaoEntreNosSubmitAction'),\n};\n\nexport const GALERIA_DE_SONHOS_API = {\n  submitAction: httpsCallable(functions, 'galeriaDeSonhosSubmitAction'),\n};\n\nexport const CRIMES_HEDIONDOS_API = {\n  submitAction: httpsCallable(functions, 'crimesHediondosSubmitAction'),\n};\n\nexport const PORTA_DOS_DESESPERADOS = {\n  submitAction: httpsCallable(functions, 'portaDosDesesperadosSubmitAction'),\n};\n\nexport const LINHAS_CRUZADAS_API = {\n  submitAction: httpsCallable(functions, 'linhasCruzadasSubmitAction'),\n};\n\nexport const MENTE_COLETIVA_API = {\n  submitAction: httpsCallable(functions, 'menteColetivaSubmitAction'),\n};\n\nexport const NA_RUA_DO_MEDO_API = {\n  submitAction: httpsCallable(functions, 'naRuaDoMedoSubmitAction'),\n};\n\nexport const ONDA_TELEPATICA_API = {\n  submitAction: httpsCallable(functions, 'ondaTelepaticaSubmitAction'),\n};\n\nexport const POLEMICA_DA_VEZ_API = {\n  submitAction: httpsCallable(functions, 'polemicaDaVezSubmitAction'),\n};\n\nexport const QUEM_NAO_MATA_API = {\n  submitAction: httpsCallable(functions, 'quemNaoMataSubmitAction'),\n};\n\nexport const RETRATO_FALADO_API = {\n  submitAction: httpsCallable(functions, 'retratoFaladoSubmitAction'),\n};\n\nexport const SONHOS_PESADELOS_API = {\n  submitAction: httpsCallable(functions, 'sonhosPesadelosSubmitAction'),\n};\n\nexport const TESTEMUNHA_OCULAR_API = {\n  submitAction: httpsCallable(functions, 'testemunhaOcularSubmitAction'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitAction: httpsCallable(functions, 'ueSoIssoSubmitAction'),\n};\n\nexport const VENDAVAL_DE_PALPITE_API = {\n  submitAction: httpsCallable(functions, 'vendavalDePalpiteSubmitAction'),\n};\n\nexport const SUPER_CAMPEONATO_API = {\n  submitAction: httpsCallable(functions, 'superCampeonatoSubmitAction'),\n};\n\nexport const CRUZA_PALAVRAS_API = {\n  submitAction: httpsCallable(functions, 'cruzaPalavrasSubmitAction'),\n};\n\nexport const TREVO_DA_SORTE_API = {\n  submitAction: httpsCallable(functions, 'trevoDaSorteSubmitAction'),\n};\n\nexport const MEGAMIX_API = {\n  submitAction: httpsCallable(functions, 'megamixSubmitAction'),\n};\n\nexport const VAMOS_AO_CINEMA_API = {\n  submitAction: httpsCallable(functions, 'vamosAoCinemaSubmitAction'),\n};\n\nexport const QUEM_SOU_EU_API = {\n  submitAction: httpsCallable(functions, 'quemSouEuSubmitAction'),\n};\n"],"names":["useDevFeatures","useGlobalState","isDebugEnabled","setIsDebugEnabled","isDevEnv","toggleDevFeatures","s","DevMenu","pathname","useLocation","navigate","useNavigate","options","label","value","disabled","defaultValue","onChange","path","onResize","undefined","onResizeCapture","DevHeader","title","subTitle","extra","className","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","Object","entries","reduce","acc","key","timestamp","LATEST_GAME_IDS","CreateGameModal","gameInfo","useCopyToClipboard","state","copyToClipboard","useLanguage","language","translate","setLoader","useLoading","useLocalStorage","getLocalStorage","setLocalStorage","useState","isVisible","setVisibility","isLoading","setLoading","gameId","setGameId","setUserId","setUserName","setUserAvatarId","setOptions","useEffect","message","onCloseModal","useCallback","createGame","ADMIN_API","gameName","response","data","baseUrl","window","location","href","split","notification","description","JSON","stringify","placement","console","error","type","onClick","block","pt","en","open","onCancel","onOk","okButtonProps","Boolean","maskClosable","alt","src","PUBLIC_URL","fallback","Options","onChangeOptions","selectedOptions","margin","version","startsWith","showIcon","align","size","level","map","option","index","clsx","off","e","on","getVersionColor","includes","major","Number","isNaN","GameCard","game","duration","calculateGameAverageDuration","cover","text","color","direction","gameCode","basedOn","reverse","join","summary","rules","length","buttonProps","GameTags","wrap","style","display","tags","ClockCircleOutlined","min","max","ideal","playerCount","best","truncateRecommended","recommended","marginTop","available","DevEmulatorAlert","stay","setStay","ip","process","displayDevWarningMessage","hostname","port","hash","protocol","newPath","replace","emulatorUrl","useEffectOnce","Modal","icon","ExclamationCircleOutlined","content","okText","cancelText","banner","SHOW_PARENT","TreeSelect","Filters","availabilityCount","setTagFilters","setNumberFilters","onNumberFiltersUpdate","prevState","FilterOutlined","target","checked","step","TagTreeSelect","onTreeSelectChange","dualTranslate","treeData","useMemo","values","keys","TAG_DICT","tagKey","tagObj","group","capitalize","children","push","SEPARATOR","treeCheckable","showCheckedStrategy","placeholder","width","minWidth","useTitle","setLanguage","setIsAuthenticated","tagFilters","numberFilters","prevLanguage","onSignOut","signOut","gameList","GAME_LIST","filter","result","players","bestWith","recommendedWith","forEach","tagGroup","tag","TAG_RULES","customTime","every","sort","a","b","devGames","availableGames","comingSoonGames","DatabaseFilled","onConfirm","danger","ghost","id","GAME_API","loadGame","httpsCallable","functions","addPlayer","makePlayerReady","rateGame","lockGame","performAdminAction","ARTE_RUIM_API","submitAction","CONTADORES_HISTORIAS_API","DETETIVES_IMAGINATIVOS_API","ESPIAO_ENTRE_NOS_API","GALERIA_DE_SONHOS_API","CRIMES_HEDIONDOS_API","PORTA_DOS_DESESPERADOS","LINHAS_CRUZADAS_API","MENTE_COLETIVA_API","NA_RUA_DO_MEDO_API","ONDA_TELEPATICA_API","POLEMICA_DA_VEZ_API","QUEM_NAO_MATA_API","RETRATO_FALADO_API","SONHOS_PESADELOS_API","TESTEMUNHA_OCULAR_API","UE_SO_ISSO_API","VENDAVAL_DE_PALPITE_API","SUPER_CAMPEONATO_API","CRUZA_PALAVRAS_API","TREVO_DA_SORTE_API","MEGAMIX_API","VAMOS_AO_CINEMA_API","QUEM_SOU_EU_API"],"sourceRoot":""}