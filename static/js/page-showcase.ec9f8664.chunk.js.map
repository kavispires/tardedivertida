{"version":3,"file":"static/js/page-showcase.ec9f8664.chunk.js","mappings":"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","sources":["components/buttons/TimedButton.tsx","components/buttons/TransparentButton.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","pages/Showcase/helpers.ts","pages/Showcase/components/CustomFilterOptions.tsx","pages/Showcase/components/FilterOptions.tsx","pages/Showcase/components/FilterDrawers.tsx","pages/Showcase/components/GameDetailsContent.tsx","pages/Showcase/Showcase.tsx"],"sourcesContent":["import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// Hook and Utils\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from 'utils/helpers';\n\ninterface TimedButtonProps extends ButtonProps {\n  duration?: number;\n  onExpire?: GenericFunction;\n  showTimer?: boolean;\n}\n\nexport function TimedButton({\n  duration = 10,\n  children,\n  onExpire,\n  showTimer = true,\n  type,\n  ...props\n}: TimedButtonProps) {\n  const { minutes, seconds } = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    autoStart: true,\n    onExpire: showTimer ? onExpire : undefined,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...props} type={type}>\n      {children}\n      {Boolean(children) && ' '}\n      {showTimer && (\n        <span className={clsx(timeClass, `${timeClass}--${type}`)}>{minutes * 60 + seconds}</span>\n      )}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: any;\n  active?: boolean;\n  activeClass?: string;\n  className?: string;\n  hoverType?: 'scale' | 'sepia';\n}\n\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...props\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n","// Ant Design Resources\nimport { Collapse } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Instruction } from 'components/text';\n\ntype CollapsibleRuleProps = {\n  children: any;\n  title?: string;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  const { translate } = useLanguage();\n\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={translate('Regras', 'Rules', title)} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype PopoverRuleProps = {\n  content: any;\n  showLabel?: boolean;\n  label?: any;\n};\n\nexport function PopoverRule({ content, label, showLabel = true }: PopoverRuleProps): JSX.Element {\n  const [isActive, setActive] = useState(false);\n\n  useEffect(() => {\n    setActive(showLabel);\n  }, []); // eslint-disable-line\n\n  return (\n    <div className=\"popover-rule\">\n      <Popover placement=\"bottomLeft\" content={content} trigger=\"click\">\n        <Button\n          shape={'round'}\n          size=\"large\"\n          onMouseOver={() => setActive(true)}\n          onMouseLeave={() => setActive(showLabel ?? false)}\n        >\n          <ReadOutlined />\n          {isActive && Boolean(label) ? label : <Translate pt=\" Regras\" en=\" Rules\" />}\n        </Button>\n      </Popover>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  className?: string;\n  ruleClass?: string;\n};\n\nexport function RulesCarousel({ info, className = '', ruleClass = '' }: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules[language].map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}game-image-${info.gameName}-${language}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n","import clsx from 'clsx';\n\ntype RulesListProps = {\n  children: any;\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function RulesModal({ gameInfo }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { Typography } from 'antd';\n\ntype InstructionsProps = {\n  children: any;\n  white?: boolean;\n  className?: string;\n  contained?: boolean;\n  fullWidth?: boolean;\n};\n\n/**\n * Typography container for instructions\n * @param props\n * @returns\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype RoundsLeftInstructionProps = {\n  round: GameRound;\n};\n\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Faltam <strong>{(round?.total ?? 0) - (round?.current ?? 0)}</strong> rodadas para o jogo\n            terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{(round?.total ?? 0) - (round?.current ?? 0)}</strong> rounds left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","type TextHighlightProps = {\n  children: any;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography } from 'antd';\n\ntype TitleProps = {\n  children: any;\n  white?: boolean;\n  icon?: any;\n  className?: string;\n  level?: 1 | 2 | 3 | 4 | 5 | undefined;\n};\n\nexport const Title = ({ children, white, icon, className, level = 1 }: TitleProps) => {\n  return (\n    <Typography.Title level={level} className={clsx('title', white && 'title--white', className)}>\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","export const filterGames = (\n  list: GameInfo[],\n  filters: PlainObject,\n  language: Language,\n  setLanguage: GenericFunction\n) => {\n  return list.filter((game) => {\n    let result: boolean[] = [];\n    // Availability\n    if (doesExist(filters.availability)) {\n      const res = game.available[language] && !game.version.endsWith('alpha');\n      result.push(filters.availability ? res : !res);\n    }\n\n    // Drawing\n    evaluateTag(filters, game, 'drawing', result);\n\n    // Writing\n    evaluateTag(filters, game, 'writing', result);\n\n    // Images\n    evaluateTag(filters, game, 'images', result);\n\n    // Voting\n    evaluateTag(filters, game, 'voting', result);\n\n    // Guessing\n    evaluateTag(filters, game, 'guessing', result);\n\n    // Time\n    evaluateTag(filters, game, 'timed', result);\n\n    // Pairing\n    evaluateTag(filters, game, 'pairing', result);\n\n    // Traitor\n    evaluateTag(filters, game, 'traitor', result);\n\n    // Discussion\n    evaluateTag(filters, game, 'discussion', result);\n\n    // Type\n    evaluateCustomTag(filters, game, 'type', result);\n\n    // Rounds\n    evaluateCustomTag(filters, game, 'rounds', result);\n\n    return result.every((r) => r);\n  });\n};\n\n/**\n * Verify if a filter has an boolean value\n * @param property\n * @returns\n */\nexport const doesExist = (property: any) => property !== undefined && property !== 'any';\n\n/**\n * Verify if a tag is selected updating the result array\n * @param filters\n * @param game\n * @param tagName\n * @param result\n */\nexport const evaluateTag = (filters: PlainObject, game: GameInfo, tagName: string, result: boolean[]) => {\n  if (doesExist(filters[tagName])) {\n    const res = game.tags.includes(tagName);\n    result.push(filters[tagName] === 'on' ? res : !res);\n  }\n};\n\n/**\n * Verify is a custom tag is selected updating the result array\n */\nexport const evaluateCustomTag = (\n  filters: PlainObject,\n  game: GameInfo,\n  tagName: string,\n  result: boolean[]\n) => {\n  if (doesExist(filters[tagName])) {\n    const res = game.tags.includes(filters[tagName]);\n    result.push(res);\n  }\n};\n","// Ant Design Resources\nimport { Radio } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype CustomFilterOptionsProps = {\n  name: string;\n  value?: string | 'any';\n  onChange: GenericFunction;\n  firstOption: {\n    value: string;\n    text: DualLanguageValue;\n  };\n  secondOption: {\n    value: string;\n    text: DualLanguageValue;\n  };\n};\n\nexport function CustomFilterOptions({\n  name,\n  value = 'any',\n  firstOption,\n  secondOption,\n  onChange,\n}: CustomFilterOptionsProps) {\n  const options = [\n    { label: <Translate pt=\"Tanto faz\" en=\"Whatever\" />, value: 'any' },\n    { label: <Translate pt={firstOption.text.pt} en={firstOption.text.en} />, value: firstOption.value },\n    { label: <Translate pt={secondOption.text.pt} en={secondOption.text.en} />, value: secondOption.value },\n  ];\n\n  return (\n    <Radio.Group\n      onChange={onChange}\n      value={value}\n      className=\"showcase-filter-options\"\n      size=\"small\"\n      name={name}\n      optionType=\"button\"\n      buttonStyle={value !== 'any' ? 'solid' : 'outline'}\n      options={options}\n    />\n  );\n}\n","// Ant Design Resources\nimport { Radio } from 'antd';\n\n// Components\nimport { Translate } from 'components/language';\n\ntype FilterOptionsProps = {\n  name: string;\n  value?: 'on' | 'off' | 'any';\n  onChange: GenericFunction;\n};\n\nconst options = [\n  { label: <Translate pt=\"Tanto faz\" en=\"Whatever\" />, value: 'any' },\n  { label: <Translate pt=\"Sim\" en=\"Yes\" />, value: 'on' },\n  { label: <Translate pt=\"Não\" en=\"No\" />, value: 'off' },\n];\n\nexport function FilterOptions({ name, onChange, value = 'any' }: FilterOptionsProps) {\n  return (\n    <Radio.Group\n      onChange={onChange}\n      value={value}\n      className=\"showcase-filter-options\"\n      size=\"small\"\n      name={name}\n      optionType=\"button\"\n      buttonStyle={value !== 'any' ? 'solid' : 'outline'}\n      options={options}\n    />\n  );\n}\n","// Ant Design Resources\nimport { Button, Divider, Drawer, Space, Tooltip } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useDimensions } from 'hooks';\n// Components\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { CustomFilterOptions } from './CustomFilterOptions';\nimport { FilterOptions } from './FilterOptions';\n\ntype FiltersDrawerProps = {\n  list: GameInfo[];\n  filters: PlainObject;\n  setFilters: GenericFunction;\n  showFilters: boolean;\n  setShowFilters: GenericFunction;\n};\n\nexport function FiltersDrawer({\n  list,\n  filters,\n  setFilters,\n  showFilters,\n  setShowFilters,\n}: FiltersDrawerProps) {\n  const [width] = useDimensions('app');\n\n  const updateFilters = (e: any) => {\n    setFilters((s: PlainObject) => ({\n      ...s,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <Drawer\n      visible={showFilters}\n      title={<Translate pt={<>Filtros ({list.length} jogos)</>} en={<>Filters ({list.length} games)</>} />}\n      placement=\"left\"\n      onClose={() => setShowFilters(false)}\n      width={Math.min(width / 1.1, 600)}\n      footer={\n        <Space className=\"space-container\" align=\"center\">\n          <Button onClick={() => setFilters({})}>\n            <Translate pt=\"Limpar filtros\" en=\"Clear filters\" />\n          </Button>\n          <Button type=\"primary\" onClick={() => setShowFilters(false)}>\n            OK\n          </Button>\n        </Space>\n      }\n    >\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Idioma\" en=\"Language\" />{' '}\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Mudar língua do aplicativo, as cartas do jogo continuarão em sua língua original\"\n                en=\"Change app language, the game cards will remain in its original language\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </label>\n        <div>\n          <LanguageSwitch />\n        </div>\n      </div>\n\n      <Divider />\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Disponibilidade\" en=\"Availability\" />{' '}\n          <Tooltip\n            title={\n              <Translate pt=\"Somente jogos prontos a serem jogados\" en=\"Only games ready to be played\" />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </label>\n        <FilterOptions name=\"availability\" value={filters?.availability} onChange={updateFilters} />\n      </div>\n\n      <Divider />\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Dinâmica\" en=\"Dynamics\" />{' '}\n        </label>\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Tipo\" en=\"Type\" />{' '}\n        </label>\n        <CustomFilterOptions\n          name=\"type\"\n          onChange={updateFilters}\n          value={filters.type}\n          firstOption={{\n            value: 'competitive',\n            text: {\n              en: 'Competitive',\n              pt: 'Competitivo',\n            },\n          }}\n          secondOption={{\n            value: 'cooperative',\n            text: {\n              en: 'Cooperative',\n              pt: 'Cooperativo',\n            },\n          }}\n        />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Rodadas\" en=\"Rounds\" />{' '}\n        </label>\n        <CustomFilterOptions\n          name=\"rounds\"\n          onChange={updateFilters}\n          value={filters.rounds}\n          firstOption={{\n            value: 'turn-based',\n            text: {\n              en: 'Turn Based',\n              pt: 'Cada vez um',\n            },\n          }}\n          secondOption={{\n            value: 'same-time',\n            text: {\n              en: 'At the same time',\n              pt: 'Todos juntos',\n            },\n          }}\n        />\n      </div>\n\n      <Divider />\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Mecânica\" en=\"Mechanics\" />{' '}\n        </label>\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"De desenhar\" en=\"Drawing\" />{' '}\n        </label>\n        <FilterOptions name=\"drawing\" value={filters?.drawing} onChange={updateFilters} />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"De escrever\" en=\"Writing\" />{' '}\n        </label>\n        <FilterOptions name=\"writing\" value={filters?.writing} onChange={updateFilters} />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Com cartas imagens\" en=\"With images\" />{' '}\n        </label>\n        <FilterOptions name=\"images\" value={filters?.images} onChange={updateFilters} />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"De adivinhar\" en=\"With guessing\" />{' '}\n        </label>\n        <FilterOptions name=\"guessing\" value={filters?.guessing} onChange={updateFilters} />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Com votação\" en=\"With voting\" />{' '}\n        </label>\n        <FilterOptions name=\"voting\" value={filters?.voting} onChange={updateFilters} />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Com tempo\" en=\"Timed\" />{' '}\n        </label>\n        <FilterOptions name=\"timed\" value={filters?.timed} onChange={updateFilters} />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Fazer Pares\" en=\"Matching\" />{' '}\n        </label>\n        <FilterOptions name=\"pairing\" value={filters?.pairing} onChange={updateFilters} />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Com inimigo\" en=\"With a traitor\" />{' '}\n        </label>\n        <FilterOptions name=\"traitor\" value={filters?.traitor} onChange={updateFilters} />\n      </div>\n\n      <div className=\"showcase-filter-entry\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"De discussão\" en=\"With discussion\" />{' '}\n        </label>\n        <FilterOptions name=\"discussion\" value={filters?.discussion} onChange={updateFilters} />\n      </div>\n    </Drawer>\n  );\n}\n","// Ant Design Resources\nimport { Card, Divider, Image, Space, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Utils\nimport { PUBLIC_URL, TAG_DICT } from 'utils/constants';\n// Components\nimport { RulesModal } from 'components/rules';\n\nexport function GameDetailsContent({ game }: { game: GameInfo }) {\n  const { language, translate } = useLanguage();\n  return (\n    <>\n      <Image\n        alt={game.title[language]}\n        src={`${PUBLIC_URL.EXAMPLES}game-example-${game.gameName}.png`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve-${language}.jpg`}\n      />\n      <Card.Meta style={{ marginTop: '8px' }} description={game.summary[language]} />\n\n      <Card.Meta\n        style={{ marginTop: '8px' }}\n        description={translate(\n          `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n          `For ${game.playerCount.min}-${game.playerCount.max} players`\n        )}\n      />\n\n      <Divider />\n\n      <Card.Meta\n        description={translate(\n          `Recomendado jogar com ${game.playerCount.recommended}`,\n          `Recommended with ${game.playerCount.recommended}`\n        )}\n      />\n\n      <Space wrap size={[1, 6]} prefixCls={game.gameName} style={{ display: 'flex', marginTop: '12px' }}>\n        {game.tags.map((tag) => (\n          <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n            {language === 'pt' ? TAG_DICT[tag]?.label : tag}\n          </Tag>\n        ))}\n      </Space>\n\n      <Space style={{ marginTop: '12px' }}>\n        {Boolean(game.rules?.[language]?.length > 1) && <RulesModal gameInfo={game} />}\n      </Space>\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// Ant Design Resources\nimport { Avatar, Image, Layout, Modal, Space } from 'antd';\nimport { FilterFilled } from '@ant-design/icons';\n// Hooks\nimport { useDimensions, useGlobalState, useLanguage } from 'hooks';\n// Utils\nimport gameList from 'assets/data/games.json';\nimport { PUBLIC_URL } from 'utils/constants';\nimport { getAnimationClass } from 'utils/helpers';\nimport { filterGames } from './helpers';\n// Components\nimport { FiltersDrawer } from './components/FilterDrawers';\nimport { GameDetailsContent } from './components/GameDetailsContent';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\nconst GAMES: {\n  [key: string]: GameInfo;\n} = gameList;\n\nconst GAME_LIST: GameInfo[] = Object.values(gameList);\n\nfunction Showcase() {\n  const { language } = useLanguage();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [width] = useDimensions('app');\n  const [, setLanguage] = useGlobalState('language');\n\n  const [showFilters, setShowFilters] = useState(false);\n  const [showModal, setShowModal] = useState('');\n  const [filters, setFilters] = useState<PlainObject>({ availability: 'true' });\n\n  const [list, setList] = useState<GameInfo[]>([]);\n\n  // Load query params\n  useEffect(() => {\n    const searchAsObject = Object.fromEntries(new URLSearchParams(searchParams));\n    if (Object.keys(searchAsObject).length > 0) {\n      const parsedQP = Object.entries(searchAsObject).reduce((acc: StringDictionary, [key, value]) => {\n        if (value === 'off' || value === 'on') {\n          acc[key] = value;\n        }\n        if (key === 'language' && value === 'en') {\n          setLanguage('en');\n        }\n        return acc;\n      }, {});\n\n      setFilters(parsedQP);\n    }\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    setList(filterGames(GAME_LIST, filters, language, setLanguage));\n    let queryString = Object.keys(filters)\n      .filter((key) => filters[key] !== 'any')\n      .map((key) => `${key}=${filters[key]}`)\n      .join('&');\n    if (language !== 'pt') {\n      queryString += `&language=${language}`;\n    }\n    setSearchParams(queryString);\n  }, [filters, language, setSearchParams, setLanguage]);\n\n  return (\n    <Layout.Content className=\"showcase\">\n      <ul className=\"showcase-list\" style={{ gridTemplateColumns: `repeat(${width > 450 ? 4 : 2}, 1fr)` }}>\n        <li className={clsx('showcase-entry showcase-entry--title', getAnimationClass('zoomIn'))}>\n          <TransparentButton\n            onClick={() => setShowFilters(true)}\n            className=\"showcase-image-button\"\n            hoverType=\"sepia\"\n          >\n            <h1 className=\"showcase-title\">\n              <Translate pt=\"Vitrine\" en=\"Showcase\" />\n            </h1>\n            <Space className=\"space-container showcase-menu\" align=\"center\">\n              <Avatar icon={<FilterFilled />} shape=\"circle\" size=\"small\" />\n            </Space>\n          </TransparentButton>\n        </li>\n\n        {orderBy(list, `title.${language}`).map((game, index) => {\n          return (\n            <li\n              key={game.gameCode}\n              className={clsx('showcase-entry', getAnimationClass('zoomIn', index + 0.3))}\n            >\n              <TransparentButton\n                onClick={() => setShowModal(game.gameCode)}\n                className=\"showcase-image-button\"\n                hoverType=\"sepia\"\n              >\n                <Image\n                  alt={game.title[language]}\n                  src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}-${language}.jpg`}\n                  fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve-${language}.jpg`}\n                  className=\"showcase-image\"\n                  preview={false}\n                />\n                <span className=\"showcase-popular-name\">{game.popularName[language]}</span>\n              </TransparentButton>\n            </li>\n          );\n        })}\n      </ul>\n\n      <FiltersDrawer\n        list={list}\n        filters={filters}\n        setFilters={setFilters}\n        showFilters={showFilters}\n        setShowFilters={setShowFilters}\n      />\n\n      {Boolean(GAMES?.[showModal]) && (\n        <Modal\n          visible={Boolean(showModal)}\n          onOk={() => setShowModal('')}\n          onCancel={() => setShowModal('')}\n          title={GAMES[showModal].title[language]}\n          centered\n        >\n          <GameDetailsContent game={GAMES[showModal]} />\n        </Modal>\n      )}\n    </Layout.Content>\n  );\n}\n\nexport default Showcase;\n"],"names":["TimedButton","duration","children","onExpire","showTimer","type","props","useTimer","expiryTimestamp","inNSeconds","autoStart","undefined","minutes","seconds","timeClass","Boolean","className","clsx","TransparentButton","active","activeClass","hoverType","CollapsibleRule","title","translate","useLanguage","contained","ghost","header","PopoverRule","content","label","showLabel","useState","isActive","setActive","useEffect","placement","trigger","shape","size","onMouseOver","onMouseLeave","ReadOutlined","pt","en","RulesCarousel","info","ruleClass","language","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","autoplay","autoplaySpeed","arrows","rules","map","rule","index","src","PUBLIC_URL","gameName","fallback","alt","RulesList","RulesModal","gameInfo","isVisible","setVisibility","onCloseModal","onClick","icon","visible","onCancel","footer","Instruction","white","fullWidth","baseClass","RoundsLeftInstruction","round","total","current","TextHighlight","Title","level","doesExist","property","evaluateTag","filters","game","tagName","result","res","tags","includes","push","evaluateCustomTag","CustomFilterOptions","name","value","firstOption","secondOption","onChange","options","text","optionType","buttonStyle","FilterOptions","FiltersDrawer","list","setFilters","showFilters","setShowFilters","useDimensions","width","updateFilters","e","s","target","length","onClose","Math","min","align","InfoCircleOutlined","availability","rounds","drawing","writing","images","guessing","voting","timed","pairing","traitor","discussion","GameDetailsContent","style","marginTop","description","summary","playerCount","max","recommended","wrap","prefixCls","display","tag","color","TAG_DICT","gameCode","GAMES","gameList","GAME_LIST","Object","values","useSearchParams","searchParams","setSearchParams","useGlobalState","setLanguage","showModal","setShowModal","setList","searchAsObject","fromEntries","URLSearchParams","keys","parsedQP","entries","reduce","acc","key","filter","available","version","endsWith","every","r","filterGames","queryString","join","gridTemplateColumns","getAnimationClass","FilterFilled","orderBy","preview","popularName","onOk","centered"],"sourceRoot":""}