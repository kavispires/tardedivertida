{"version":3,"file":"static/js/megamix.62bb1225.chunk.js","mappings":"sNAIMA,EAAgBC,EAAQ,OAEvB,SAASC,IACd,OAAiBC,EAAAA,EAAAA,IAAe,UAAzBC,GAAP,eACA,GAA4BC,EAAAA,EAAAA,GAAS,CACnCC,IAAKN,EACLO,UAAU,EACVC,MAAM,IAHR,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OAJAC,EAAAA,EAAAA,YAAU,WACRD,EAASN,OAAOA,EACjB,GAAE,CAACA,KAEG,8BAAGK,GACX,C,kHChBKG,EAAUX,EAAQ,OAEjB,SAASY,IACd,OAAiBV,EAAAA,EAAAA,IAAe,UAAzBC,GAAP,eACA,GAA4BC,EAAAA,EAAAA,GAAS,CACnCC,IAAKM,EACLL,UAAU,IAFZ,eAAOE,EAAP,KAAgBC,EAAhB,KAUA,OAJAC,EAAAA,EAAAA,YAAU,WACRD,EAASN,OAAOA,EACjB,GAAE,CAACA,KAEG,8BAAGK,GACX,C,mMCPYK,EAAgB,WAC3B,OAAoCX,EAAAA,EAAAA,IAAe,cAAnD,eAAOY,EAAP,KAAmBC,EAAnB,KAEA,OACE,SAAC,KAAD,CACEC,KAAK,UACLC,SAAU,EACVC,MAAM,SAACC,EAAA,EAAD,IACNC,MAAOC,EACPC,SACE,iBAAKC,UAAU,iBAAf,WACE,gBAAKA,UAAU,wBAAf,SAAwCF,KACxC,SAAC,IAAD,CACEE,UAAU,yBACVC,MAAK,OAAEV,QAAF,IAAEA,EAAAA,EAAc,IACrBW,IAAK,IACLC,IAAK,IACLC,KAAM,GACNC,SAAUb,QAMrB,EAEKM,GAAY,SAAC,KAAD,CAAWQ,GAAG,oBAAoBC,GAAG,aCS1CC,EAAY,SAAC,GAOH,IAAD,QANpBC,QAAAA,OAMoB,MANV,GAMU,MALpBT,UAAAA,OAKoB,MALR,GAKQ,MAJpBU,MAAAA,OAIoB,MAJZ,IAIY,EAHpBC,EAGoB,EAHpBA,OAGoB,IAFpBC,YAAAA,OAEoB,MAFN,SAEM,MADpBC,QAAAA,OACoB,MADV,cACU,EACdC,EAAaC,KAAKC,MAAMP,GACxBQ,EAA8BH,EAlDfI,KAAI,SAACC,GAExB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGC,EAAI,EAAGA,EAAIH,EAAQI,OAAQF,GAAK,EAAGC,GAAK,EAClDH,EAAQE,EAAI,IAAMF,EAAQG,EAAI,KAChCF,GAAI,WAAQD,EAAQE,GAAhB,YAAsBF,EAAQG,GAA9B,aAAqCH,EAAQE,EAAI,GAAjD,YAAuDF,EAAQG,EAAI,KAI3E,OAAOF,CACR,IA2CKI,EAAiB,oBACrB,CACEC,MAAO,EACPC,OAAQ,EACRC,MAAO,UAJY,aACrB,EAIIf,UALiB,QAKD,EAEtB,OACE,iBACEgB,MAAM,6BACNf,QAASA,EACTgB,SAAS,SACT7B,UAAWA,EACX8B,MAAO,CAAEpB,MAAM,GAAD,OAAKA,EAAL,MAAgBC,OAAO,GAAD,OAAKA,GAAUD,EAAf,OALtC,WAOE,oBACCO,EAAMC,KAAI,SAACE,EAAMW,GAAP,OACT,iBAEEC,EAAGZ,EACHa,KAAK,OACLC,OAAO,OACPtB,YAAaY,EACbW,cAAc,QACdC,eAAe,QACfC,iBAAiB,MARnB,UACU5B,EADV,YACqBsB,GAFZ,MAchB,E,4ECxCYO,EAAgB,SAAC,GASH,IAAD,IARxBC,EAQwB,EARxBA,MACAC,EAOwB,EAPxBA,SAOwB,IANxBxC,UAAAA,OAMwB,MANZ,GAMY,MALxByC,aAAAA,OAKwB,aAJxB7B,YAAAA,OAIwB,MAJV,SAIU,MAHxBF,MAAAA,OAGwB,MAHhB,IAGgB,EAFxBC,EAEwB,EAFxBA,OAEwB,IADxB+B,mBAAAA,OACwB,SACxB,GAA4CC,EAAAA,EAAAA,UAAuB,IAAnE,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAYC,EAAAA,EAAAA,SAAO,GAKnBC,EAAe,WACnBF,EAAUG,SAAU,CACrB,EAKKC,EAAc,WAClBJ,EAAUG,SAAU,EACpBJ,EAAkB,GACnB,EAEKM,EAAY,SAACC,GACjBJ,IACA,IAAMK,EAAMD,EAAEE,OAAOC,WAAWC,qBAChChB,EAAS,GAAD,eAAKD,GAAL,CAAY,CAACkB,KAAKC,MAAML,EAAIhC,GAAIoC,KAAKC,MAAML,EAAI/B,MACxD,EAEKqC,EAAa,SAACP,GAElB,IACMQ,EADQR,EAAEE,OAAOC,WACHC,qBACdnC,EAAIoC,KAAKC,MAAME,EAAMvC,GACrBC,EAAImC,KAAKC,MAAME,EAAMtC,GAEvBuC,EAAgBtB,EAAMA,EAAMhB,OAAS,GACzCsC,EAAgBA,EAAcC,OAAO,CAACzC,EAAI,GAAKC,EAAI,KAGnDiB,EAAMwB,OAAOxB,EAAMhB,OAAS,EAAG,EAAGsC,GAClCrB,EAASD,EAAMuB,SAChB,EAMKE,EAAkB,SAACZ,GACvBD,EAAUC,EACX,EAMKa,EAAkB,SAACb,GAEvB,GAAKN,EAAUG,QAAf,CAGA,IACMW,EADQR,EAAEE,OAAOC,WACHC,qBAChBU,EAAW3B,EAAMA,EAAMhB,OAAS,GAEpC2C,EAAWA,EAASJ,OAAO,CAACL,KAAKC,MAAME,EAAMvC,GAAIoC,KAAKC,MAAME,EAAMtC,KAGlEiB,EAAMwB,OAAOxB,EAAMhB,OAAS,EAAG,EAAG2C,GAClC1B,EAASD,EAAMuB,SATd,CAUF,EAEKK,EAAgB,SAACf,GACjBN,EAAUG,UACZC,IAEAS,EAAWP,GAEd,EAMKgB,EAAsB,WAC1BlB,GACD,EAMKmB,EAAwB,WAC5BrB,GACD,EAuDKxB,EAAiB,oBACrB,CACEC,MAAO,EACPC,OAAQ,EACRC,MAAO,UAJY,aACrB,EAIIf,UALiB,QAKD,EAEtB,OACE,UAAC,IAAD,CAAO0D,UAAU,WAAWC,MAAM,SAAlC,WACE,SAAC,KAAD,CACE7D,MAAOA,EACPC,OAAQA,GAAUD,EAClB8D,YAAaR,EACbS,YAAaR,EACbS,UAAWP,EACXQ,aAAcX,EACdY,YAAaX,EACbY,WAAYV,EACZW,aAnEmB,SAAC1B,GACpBN,EAAUG,UACZU,EAAWP,GAEX2B,OAAOC,SAASC,iBAAiB,UAAWb,GAC5CW,OAAOC,SAASC,iBAAiB,WAAYb,GAC7CW,OAAOC,SAASC,iBAAiB,YAAaZ,GAC9CU,OAAOC,SAASC,iBAAiB,aAAcZ,GAElD,EA2DKa,aArDmB,SAAC9B,GACpBN,EAAUG,SACZE,EAAUC,GAEZ2B,OAAOC,SAASG,oBAAoB,UAAWf,GAC/CW,OAAOC,SAASG,oBAAoB,WAAYf,GAChDW,OAAOC,SAASG,oBAAoB,YAAad,GACjDU,OAAOC,SAASG,oBAAoB,aAAcd,EACnD,EA8CKrE,WAAWoF,EAAAA,EAAAA,GAAK,iBAAkBpF,GAClC8B,MAAO,CAAEpB,MAAM,GAAD,OAAKA,EAAL,MAAgBC,OAAO,GAAD,OAAKA,GAAUD,EAAf,OACpCgC,mBAAoBA,EACpB2C,GAAG,iBAdL,UAgBE,SAAC,KAAD,UACG9C,EAAMrB,KAAI,SAACoE,EAAMC,GAAP,OACT,SAAC,KAAD,CAEEC,OAAQF,EACRpD,OAAO,UACPtB,YAAaY,EACbiE,QAAS,GACTC,QAAQ,QACRC,yBAAyB,eANpBJ,EAFE,QAad9C,IACC,UAAC,IAAD,YACE,UAAC,KAAD,CAAQmD,QA/DD,WACb,IAAMC,GAAS,OAAOtD,GAChBuD,GAAkB,OAAOlD,GACzBsB,EAAmC2B,EAAUE,MAC/C7B,IACF4B,EAAmBE,KAAK9B,GACxB1B,EAASqD,GACThD,EAAkBiD,GAErB,EAsDgCG,SAA2B,IAAjB1D,EAAMhB,OAAzC,WACE,SAAC2E,EAAA,EAAD,KACA,SAAC,KAAD,CAAW5F,GAAG,WAAWC,GAAG,aAE9B,UAAC,KAAD,CAAQqF,QAxDD,WACb,IAAMC,GAAS,OAAOtD,GAChBuD,GAAkB,OAAOlD,GACzBuD,EAAeL,EAAmBC,MACpCI,IACFN,EAAUG,KAAKG,GACf3D,EAASqD,GACThD,EAAkBiD,GAErB,EA+CgCG,SAAoC,IAA1BrD,EAAerB,OAAlD,WACE,SAAC2E,EAAA,EAAD,KACA,SAAC,KAAD,CAAW5F,GAAG,UAAUC,GAAG,aAE7B,UAAC,KAAD,CAAQqF,QAzEA,kBAAMpD,EAAS,GAAf,EAyEkByD,SAA2B,IAAjB1D,EAAMhB,OAA1C,WACE,SAAC6E,EAAA,EAAD,KACA,SAAC,KAAD,CAAW9F,GAAG,SAASC,GAAG,kBAMrC,C,+JCzNM,SAAS8F,EAAT,GAAoG,IAA3EC,EAA0E,EAA1EA,KAAMC,EAAoE,EAApEA,aAAcC,EAAsD,EAAtDA,UAAWxG,EAA2C,EAA3CA,UAAWyG,EAAgC,EAAhCA,SAChEC,GAAkBC,EAAAA,EAAAA,KAAlBD,cACAE,GAAoBC,EAAAA,EAAAA,KAApBD,gBACFE,GAAUC,EAAAA,EAAAA,GAAa,OAEvBC,EAAYJ,EAAgBJ,EAAUnB,IAEtC4B,EAAWT,EAAUnB,GAAG6B,QAAQ,KAAM,KAE5C,OACE,SAAC,KAAD,CAA0BC,OAAQX,EAAUnB,GAA5C,UACE,iBAAKrF,WAAWoF,EAAAA,EAAAA,GAAK,iBAAkBpF,GAAY8B,MAAO,CAAEpB,MAAM,GAAD,OAAK4F,EAAL,OAAjE,WACIG,IACA,iBAAMzG,UAAU,uBAAhB,UACE,SAAC,KAAD,UAAgBwG,EAAUY,SAG7Bb,IACC,gBACEzH,IAAG,UAAKuI,EAAAA,GAAAA,QAAL,sBAAqCd,EAArC,QACHvG,UAAU,0BACVsH,IAAI,YACJxF,MAAO,CAAEpB,MAAM,GAAD,OAAK4F,EAAL,UAGlB,SAAC,IAAD,CACExH,IAAG,UAAKgI,GAAL,OAAeG,EAAf,QACHvG,MAAO4F,EACPtG,WAAWoF,EAAAA,EAAAA,GAAK,wBAAyB4B,GAAa,+BACtDO,SAAQ,UAAKF,EAAAA,GAAAA,QAAL,mBACRC,IAAKZ,EAAcF,EAAUY,MAC7BI,SAAS,EACTC,MAAOf,EAAcF,EAAUY,YAKxC,C,oJCtCM,SAASM,EAAT,GAOiB,IANtBC,EAMqB,EANrBA,KACAC,EAKqB,EALrBA,UACAC,EAIqB,EAJrBA,YAIqB,IAHrBL,QAAAA,OAGqB,aAFrBM,WAAAA,OAEqB,aADrB9H,UAAAA,OACqB,MADT,GACS,EACb0G,GAAkBC,EAAAA,EAAAA,KAAlBD,cACAqB,GAAmBC,EAAAA,EAAAA,KAAnBD,eACR,OACE,SAAC,KAAD,CAA0BZ,OAAQQ,EAAKtC,GAAvC,UACE,iBACErF,WAAWoF,EAAAA,EAAAA,GAAK,kBAAmB0C,GAAc,4BAA6B9H,GAC9E8B,MAAO+F,GAAeC,EAAa,CAAEG,YAAa,QAASC,gBAAiBL,GAAgB,CAAC,EAF/F,WAIE,SAAC,IAAD,CAAS9H,QAAS2G,EAAciB,EAAKP,MAAMe,cAA3C,UACE,SAAC,IAAD,CACEnI,UAAU,wBACVoI,MAAqB,WAAdT,EAAKlI,KAAoB,WAAa,UAC7CqC,MAAO,CAAEuG,SAAS,GAAD,OAAKT,EAAY,GAAjB,OAHnB,UAKE,0BAAOG,EAAiBJ,EAAKtC,IAAK,SAAC,KAAD,UAAgBsC,EAAKP,cAG3D,SAAC,KAAD,CAAW/B,GAAIsC,EAAKtC,GAAIuC,UAAWA,EAAW5H,UAAU,yBAAyBwH,QAASA,QAIjG,C,uECtDM,SAASc,EAAT,GAAkF,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,eAC5C,OACE,kBAAMxI,UAAU,gDAAhB,WACE,iBAAMA,UAAU,8BAAhB,SAA+CuI,EAASE,UACxD,iBAAMzI,UAAU,8BAAhB,gBAA+CwI,QAA/C,IAA+CA,EAAAA,EAAkBD,EAASG,UAC1E,iBAAM1I,UAAU,8BAAhB,SAA+CuI,EAASI,WAG7D,C,mQCFM,SAASC,EAAT,GAAsG,IAA/EC,EAA8E,EAA9EA,eAA8E,IAA9DpG,aAAAA,OAA8D,SAAzCmF,EAAyC,EAAzCA,UAAckB,GAA2B,YAC1G,GAAoDnK,EAAAA,EAAAA,IAAe,sBAAnE,eAAOoK,EAAP,KAA2BC,EAA3B,KACMC,GAAmBC,EAAAA,EAAAA,GAAa,EAAG,CAAEC,IAAK,GAAId,SAAU,OAE9De,EAAAA,EAAAA,IAAc,WACuB,eAA/BP,EAAeQ,aACjBL,EAAsBH,EAAeQ,YAExC,IAED,IAKMC,EAAY,eAClB,OACE,UAAC,KAAD,gBAAOhF,UAAU,WAAWC,MAAM,UAAauE,GAA/C,eACE,SAAC,KAAD,CACEzD,GAAIwD,EAAexD,GACnBuC,UAAWA,GAAaqB,EACxBjJ,WAAWoF,EAAAA,EAAAA,GACTkE,EACA,UAAuCA,EAAhB,aAAvBP,EAAA,gCAGHtG,IACC,UAAC,KAAD,CAAQmD,QAjBc,WAE1BoD,EAD8C,aAAvBD,EAAoC,aAAe,WAE3E,EAcK,UAC0B,aAAvBA,GAAoC,SAACQ,EAAA,EAAD,KAA0B,SAACC,EAAA,EAAD,KAC/D,SAAC,KAAD,CAAWlJ,GAAG,QAAQC,GAAG,iBAKlC,C,kFC1CM,SAASkJ,EAAT,GAAuG,IAAlFC,EAAiF,EAAjFA,MAAOC,EAA0E,EAA1EA,cAAeC,EAA2D,EAA3DA,cAAeC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,YAC5E,OACE,iBAAK9J,UAAU,aAAf,WACE,gBACEA,WAAWoF,EAAAA,EAAAA,GAAK,qBAAsBuE,GAAiB,gCACvD7H,MAAO,CAAEoG,iBAAkByB,GAAiBG,EAAcA,EAAc,4BAF1E,SAIGJ,EAAMf,UAGT,gBACE3I,WAAWoF,EAAAA,EAAAA,GAAK,qBAAsBwE,GAAiB,gCACvD9H,MAAO,CAAEoG,iBAAkB0B,GAAiBC,EAAcA,EAAc,4BAF1E,SAIGH,EAAMjB,WAId,C,iHCxBKsB,EAAcC,IAqBPC,EAAkB,SAAC,GAA2E,IAAzExK,EAAwE,EAAxEA,KAAMyK,EAAkE,EAAlEA,KAAkE,IAA5DC,WAAAA,OAA4D,MAA/C,GAA+C,MAA3CnK,UAAAA,OAA2C,MAA/B,GAA+B,EAClGsJ,EAAY,oBAElB,OACE,iBAAKtJ,WAAWoF,EAAAA,EAAAA,GAAKkE,EAAD,UAAeA,EAAf,aAA6B7J,GAAQO,GAAzD,WACE,kBAAMA,UAAS,UAAKsJ,EAAL,YAAf,UACY,aAAT7J,GACC,SAAC,KAAD,CAAWa,GAAG,sBAAmBC,GAAG,qBAEpC,SAAC,KAAD,CAAWD,GAAG,sBAAmBC,GAAG,oBAE5B,aAATd,EAAsB,gBAAQ,oBAEjC,gBAAKO,UAAS,UAAKsJ,EAAL,aAAd,UACE,SAACS,EAAD,CACE/J,UAAS,UAAKsJ,EAAL,UACTc,oBAAoBhF,EAAAA,EAAAA,GAAK,GAAD,OAAIkE,EAAJ,8BAAoCA,EAApC,6BAAkE7J,IAC1F4K,YAAaF,EACbG,YAAY,EACZC,gBAAiBL,QAK1B,C,6FC9BM,SAASM,EAAT,GAAsE,IAA/CC,EAA8C,EAA9CA,QAAS/J,EAAqC,EAArCA,MAAO+F,EAA8B,EAA9BA,SAC5C,OACE,iBAAKzG,UAAU,eAAe8B,MAAO,CAAEpB,MAAM,GAAD,OAAKA,EAAL,OAA5C,WACE,SAAC,KAAD,CAAW2E,GAAIoF,EAAQpF,GAAIrF,UAAU,sBAAsB4H,UAAWlH,EAAO8G,SAAS,KACpFf,IACA,gBAAKzG,UAAU,qBAAf,UACE,SAAC,KAAD,UAAgByK,EAAQrD,WAKjC,C,6FCTYsD,EAAO,SAAC,GAWH,IAVhBC,EAUe,EAVfA,SAUe,IATfC,OAAAA,OASe,MATN,QASM,EARfC,EAQe,EARfA,OAQe,IAPfzC,MAAAA,OAOe,MAPP,OAOO,MANf9B,KAAAA,OAMe,MANR,SAMQ,MALfwE,YAAAA,OAKe,aAJf9K,UAAAA,OAIe,MAJH,GAIG,MAHf+K,gBAAAA,OAGe,MAHG,GAGH,MAFfC,gBAAAA,OAEe,MAFG,GAEH,MADfC,WAAAA,OACe,SACT3B,EAAY,OAEZ4B,EAAUJ,GACZK,EAAAA,EAAAA,IACsB,kBAAbR,EACHA,EAAS,GAAGxC,cACD,UAAXyC,EACAA,EAAO,GAAGzC,cACV,KAENC,EAEJ,OACE,iBAAKpI,WAAWoF,EAAAA,EAAAA,GAAKkE,EAAD,UAAeA,EAAf,aAA6BhD,GAAQtG,GAAzD,WACIiL,IACA,iBACEjL,WAAWoF,EAAAA,EAAAA,GAAK,GAAD,OAAIkE,EAAJ,wCAA8C4B,GAAWH,GACxEjJ,MAAOsG,EAAMgD,WAAW,KAAO,CAAElD,gBAAiBE,GAAU,CAAC,EAF/D,SAIGwC,KAGL,iBAAM5K,UAAS,UAAKsJ,EAAL,UAAf,SAAwCqB,IACvCE,IAAU,iBAAM7K,WAAWoF,EAAAA,EAAAA,GAAK,GAAD,OAAIkE,EAAJ,YAAyB0B,GAA9C,SAAiEH,MAGjF,C,kFC3CM,SAASQ,EAAT,GAAwE,IAAnDC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,UAAWvL,EAA6B,EAA7BA,UAC/C,OACE,iBAAKa,QAAQ,cAAcb,WAAWoF,EAAAA,EAAAA,GAAK,aAAcpF,GAAzD,WACE,iBACEgC,EAAE,+KACFC,KAAK,aAEP,0BAAeZ,EAAE,KAAKC,EAAE,KAAKZ,MAAM,MAAMC,OAAO,MAAhD,UACE,yBAAM2K,OAGR,0BAAejK,EAAE,MAAMC,EAAE,KAAKZ,MAAM,MAAMC,OAAO,MAAjD,UACE,yBAAM4K,OAER,iBAAMvJ,EAAE,+BAA+BC,KAAK,WAGjD,C,uECbM,SAASuJ,EAAT,GAAgF,IAA3Db,EAA0D,EAA1DA,SAAUjK,EAAgD,EAAhDA,MAAOqB,EAAyC,EAAzCA,MAAyC,IAAlC/B,UAAAA,OAAkC,MAAtB,GAAsB,EACpF,OACE,iBACE4B,MAAM,6BACN6J,WAAW,+BACX5K,QAAQ,kBACRiB,MAAO4J,QAAQhL,GAAS,CAAEA,MAAM,GAAD,OAAKA,EAAL,OAAmB,CAAC,EACnDV,UAAWA,EALb,WAOE,6BACE,4BAAgBqF,GAAG,IAAIsG,GAAG,SAASC,GAAG,SAASC,GAAG,QAAQC,GAAG,QAAQC,cAAc,iBAAnF,WACE,iBAAMC,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,IAAIC,UAAU,gBAE7B,4BAAgB5G,GAAG,IAAIsG,GAAG,SAASC,GAAG,SAASC,GAAG,QAAQC,GAAG,QAAQC,cAAc,iBAAnF,WACE,iBAAMC,OAAO,IAAIC,UAAU,aAC3B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,OAAOC,UAAU,gBAEhC,2BAAgB5G,GAAG,IAAIsG,GAAG,SAASC,GAAG,SAASC,GAAG,QAAQC,GAAG,OAAOI,UAAU,QAC9E,4BAAgB7G,GAAG,IAAIsG,GAAG,QAAQC,GAAG,SAASC,GAAG,QAAQC,GAAG,QAAQC,cAAc,iBAAlF,WACE,iBAAMC,OAAO,IAAIC,UAAU,aAC3B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,IAAIC,UAAU,gBAE7B,2BAAgB5G,GAAG,IAAIsG,GAAG,SAASC,GAAG,SAASC,GAAG,OAAOC,GAAG,IAAII,UAAU,QAC1E,4BAAgB7G,GAAG,IAAIsG,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,GAAG,QAAQC,cAAc,iBAApF,WACE,iBAAMC,OAAO,IAAIC,UAAU,aAC3B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,IAAIC,UAAU,gBAE7B,4BAAgB5G,GAAG,IAAIsG,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,cAAc,iBAArF,WACE,iBAAMC,OAAO,IAAIC,UAAU,aAC3B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,OAAOC,UAAU,aAC9B,iBAAMD,OAAO,OAAOC,UAAU,gBAEhC,2BAAgB5G,GAAG,IAAIsG,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAASC,GAAG,SAASI,UAAU,QACzE,4BAAgB7G,GAAG,IAAIsG,GAAG,QAAQC,GAAG,SAASC,GAAG,QAAQC,GAAG,QAAQC,cAAc,iBAAlF,WACE,iBAAMC,OAAO,IAAIC,UAAU,aAC3B,iBAAMD,OAAO,IAAIC,UAAU,gBAE7B,2BAAgB5G,GAAG,IAAIsG,GAAG,QAAQC,GAAG,QAAQC,GAAG,SAASC,GAAG,SAASI,UAAU,QAC/E,2BACE7G,GAAG,IACHsG,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,GAAG,SACHI,UAAU,QAEZ,4BAAgB7G,GAAG,IAAIsG,GAAG,QAAQC,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,cAAc,iBAApF,WACE,iBAAMC,OAAO,IAAIC,UAAU,aAC3B,iBAAMD,OAAO,IAAIC,UAAU,mBAG/B,eAAGnK,MAAO,CAAEqK,UAAW,WAAvB,WACE,iBACElK,KAAK,UACLD,EAAE,mHAEJ,iBACEA,EAAE,mDACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,SAEV,iBAAMpK,KAAK,UAAUD,EAAE,oCACvB,iBACEA,EAAE,gCACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBACEpK,KAAK,UACLD,EAAE,0FAEJ,iBAAMC,KAAK,UAAUD,EAAE,mCACvB,iBACEA,EAAE,gDACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBAAMpK,KAAK,UAAUD,EAAE,wDACvB,iBACEA,EAAE,mEACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,SAEV,iBAAMpK,KAAK,UAAUD,EAAE,iEACvB,iBAAMC,KAAK,UAAUD,EAAE,yDACvB,iBACEA,EAAE,sEACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,SAEV,iBAAMpK,KAAK,UAAUD,EAAE,yEACvB,iBAAMC,KAAK,UAAUD,EAAE,2DACvB,iBACEC,KAAK,UACLD,EAAE,kEACFqK,QAAQ,SAEV,iBACErK,EAAE,kDACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBAAMpK,KAAK,UAAUD,EAAE,wBACvB,iBACEA,EAAE,gFACFF,MAAO,CAAEsK,aAAc,WACvBnK,KAAK,OACLoK,QAAQ,UAEV,iBACEpK,KAAK,UACLD,EAAE,gGAEJ,iBACEA,EAAE,kDACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBACEpK,KAAK,UACLD,EAAE,mKAEJ,iBACEA,EAAE,kDACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBAAMpK,KAAK,UAAUD,EAAE,kDACvB,iBACEA,EAAE,iDACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBACEpK,KAAK,UACLD,EAAE,8JAEJ,iBACEA,EAAE,8CACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBAAMpK,KAAK,UAAUD,EAAE,gDACvB,iBAAMC,KAAK,UAAUD,EAAE,qCACvB,iBAAMC,KAAK,UAAUD,EAAE,qCACvB,iBACEA,EAAE,2FACFF,MAAO,CAAEsK,aAAc,WACvBnK,KAAK,OACLoK,QAAQ,UAEV,iBACErK,EAAE,iEACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBAAMpK,KAAK,UAAUD,EAAE,uDACvB,iBACEA,EAAE,mDACFF,MAAO,CAAEsK,aAAc,WACvBnK,KAAK,OACLoK,QAAQ,UAEV,iBACErK,EAAE,mEACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBAAMpK,KAAK,UAAUD,EAAE,2DACvB,iBACEA,EAAE,oDACFF,MAAO,CAAEsK,aAAc,WACvBnK,KAAK,OACLoK,QAAQ,UAEV,iBAAMpK,KAAK,UAAUD,EAAE,uCACvB,iBACEA,EAAE,kDACFF,MAAO,CAAEsK,aAAc,WACvBnK,KAAK,OACLoK,QAAQ,UAEV,iBACErK,EAAE,kEACFF,MAAO,CAAEsK,aAAc,WACvBnK,KAAK,OACLoK,QAAQ,UAEV,iBACErK,EAAE,wFACFF,MAAO,CAAEsK,aAAc,YACvBnK,KAAK,UACLoK,QAAQ,UAEV,iBACEpK,KAAK,UACLC,OAAO,UACPG,iBAAiB,KACjBL,EAAE,4BACFqK,QAAQ,UAGV,0BAAehL,EAAE,KAAKC,EAAE,KAAKZ,MAAM,MAAMC,OAAO,MAAhD,SACGgK,OAIM,IAAV5I,IACC,iBACEE,KAAK,UACLD,EAAE,6GAGK,IAAVD,IACC,iBACEE,KAAK,UACLD,EAAE,0SAGK,IAAVD,IACC,iBACEE,KAAK,UACLD,EAAE,mPAGK,IAAVD,IACC,iBACEE,KAAK,UACLD,EAAE,0KAGK,IAAVD,IACC,iBACEE,KAAK,UACLD,EAAE,gFAGK,IAAVD,IACC,iBAAME,KAAK,UAAUD,EAAE,kEAEd,IAAVD,IACC,iBACEE,KAAK,UACLD,EAAE,oRAKX,C,4HCxQM,SAASsK,EAAT,GAAoE,IAA/CC,EAA8C,EAA9CA,KAAMxK,EAAwC,EAAxCA,MAAOyK,EAAiC,EAAjCA,cAC/BC,GAAa9F,EAAAA,EAAAA,KAAb8F,SACR,OACE,iBAAKzM,WAAWoF,EAAAA,EAAAA,GAAK,aAAD,sBAA8BmH,EAAK9M,OAAvD,WACE,SAAC,IAAD,CAASM,QAASwM,EAAKG,YAAYD,GAAnC,UACE,eAAIzM,UAAU,oBAAd,SAAmCuM,EAAK9E,MAAMgF,QAEhD,eAAIzM,UAAU,sBAAd,SACGuM,EAAKI,OAAOzL,KAAI,SAAC0L,EAAOrH,GACvB,IAAMsH,EAAWtH,IAAMxD,EACjB+K,OAAsBC,IAAVhL,IAAwB8K,EAC1C,OACE,yBACE,SAAC,KAAD,CACE7M,WAAWoF,EAAAA,EAAAA,GACT,qBADa,8BAEUmH,EAAK9M,MAC5BqN,GAAa,gCAEfnN,KAAMkN,GAAW,SAACG,EAAA,EAAD,CAAmBhN,UAAU,0BAAwB+M,EACtEnH,QAAS4G,EAAgB,kBAAMA,EAAc,CAAES,OAAQV,EAAKlH,GAAIpF,MAAOsF,GAA9C,EAAqD,WAAQ,EAPxF,SASGqH,EAAMH,MAVX,UAAYF,EAAKlH,GAAjB,kBAA6BE,GAchC,QAIR,C,6FC9BM,SAAS2H,EAAT,GAA4F,IAAjE7H,EAAgE,EAAhEA,GAAI8H,EAA4D,EAA5DA,cAAeC,EAA6C,EAA7CA,aAAcnN,EAA+B,EAA/BA,MACzDoN,GAAc1G,EAAAA,EAAAA,KAAd0G,UACR,OACE,iBACEzL,MAAM,6BACNf,QAAQ,aACRgB,SAAS,UACTnB,MAAM,MACNV,UAAU,mBALZ,WAOE,iBAAMiC,KAAK,OAAOD,EAAE,sCACpB,iBAAMC,KAAK,UAAUD,EAAE,uEACvB,iBAAMC,KAAK,UAAUD,EAAE,+BACvB,0BAAeX,EAAE,OAAOC,EAAE,OAAOZ,MAAM,MAAMC,OAAO,MAApD,UACE,0BACE,SAAC,IAAD,CACE2M,YAAaD,EAAU,oBAAqB,cAE5ChI,GAAIA,EACJpF,MAAOA,EACPI,SAAU8M,EACVnN,UAAU,0BACVuN,UAAU,EACVH,aAAcA,EACdI,aAAa,MACbC,UAAWN,GARN9H,QAYX,iBAAMgH,QAAQ,KAAKrK,EAAE,iCAG1B,C,8LCxCK0L,EAAc,CAAEpN,GAAI,eAAgBC,GAAI,WAEvC,SAASoN,EAAT,GAAgF,IAAxDC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,UACpD,OAA4B,IAAxBD,EAAatM,QAAqB,yBAGpC,iBAAKvB,WAAWoF,EAAAA,EAAAA,GAAK,gBAAgB2I,EAAAA,EAAAA,IAAkB,WAAvD,WACE,SAAC,KAAD,CAAOzH,KAAK,QAAQ0H,MAAO,EAA3B,UACE,SAAC,KAAD,CAAW1N,GAAG,WAAWC,GAAG,oBAE9B,eAAIP,UAAU,oBAAd,SACG6N,EAAa3M,KAAI,SAAC+M,EAAalM,GAAW,IAAD,MACxC,YAA6C+L,EAAUG,EAAYxO,aAAnE,QAA4E,CAAC,EAA7E,IAAQE,KAAAA,OAAR,MAAe,OAAf,EAA0BuO,GAA1B,YACMC,EAASP,EAAQK,EAAYG,UACnC,OACE,gBAEEpO,WAAWoF,EAAAA,EAAAA,GACT,sBACA2I,EAAAA,EAAAA,IAAkB,UAAW,CAC3BM,MAAOtM,EAAQ8L,EAAatM,OAAS,EAAIQ,EAAQ8L,EAAatM,OAAS,EAAIQ,KALjF,WASE,gBAAK/B,UAAU,qBAAf,UACE,SAAC,IAAD,CAAOqF,GAAI1F,OAEb,eAAIK,UAAU,qBAAd,UACE,SAAC,KAAD,oBAAgBkO,EAAezG,aAA/B,QAAwCiG,OAE1C,gBAAK1N,UAAU,sBAAf,UACE,SAAC,KAAD,CAAQqF,GAAI8I,EAAOG,cAErB,gBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,OAC1CsE,QAAQwC,EAAexB,eACtB,gBAAK1M,UAAU,2BAAf,UACE,SAAC,IAAD,CACED,SACE,iCACE,SAAC,KAAD,oBAAgBmO,EAAexB,mBAA/B,QAA8CgB,IADhD,KAEGO,EAAYhO,MAFf,OAFJ,UAQE,SAAC,KAAD,CAAQN,MAAM,SAAC,IAAD,IAA4B4O,MAAM,SAAS9O,KAAK,OAAO6G,KAAK,gBA7BlF,sBACsB2H,EAAYxO,MAkCrC,QAIR,C,wQCtDM,SAAS+O,EAAT,GAQa,IAPlB/G,EAOiB,EAPjBA,MACAkD,EAMiB,EANjBA,SACA3K,EAKiB,EALjBA,UACAyO,EAIiB,EAJjBA,UACAC,EAGiB,EAHjBA,WACAC,EAEiB,EAFjBA,uBACGC,GACc,YACjB,SAA4DF,QAA5D,IAA4DA,EAAAA,EAAc,CAAC,EAA3E,IAAQV,MAAAA,OAAR,MAAgB,EAAhB,MAAmB1H,KAAAA,OAAnB,MAA0B,WAA1B,EAAyCuI,GAAzC,YAEA,SAKIF,QALJ,IAKIA,EAAAA,EAA0B,CAAC,EAJlBG,EADb,EACE9O,UADF,IAEE+O,KAAAA,OAFF,aAGEzK,UAAW0K,OAHb,MAGiC,aAHjC,EAIKC,GAJL,YAOA,OACE,UAAC,KAAD,gBAAO3K,UAAU,WAAWtE,WAAWoF,EAAAA,EAAAA,GAAK,oBAAqBpF,IAAgB4O,GAAjF,eACE,SAAC,MAAD,gBAAOZ,MAAOA,EAAO1H,KAAMA,GAAUuI,GAArC,aACGpH,MAGH,SAAC,KAAD,gBACEnD,UAAW0K,EACXD,KAAMA,EACN/O,WAAWoF,EAAAA,EAAAA,GACT,8BACAqJ,GAAa,yCACbK,IAEEG,GARN,aAUGtE,QAIR,C,iTCtCM,SAASuE,EAAT,GAA0E,IAA/C/H,EAA8C,EAA9CA,OAA8C,IAAtCgI,MAAAA,OAAsC,SAC9E,GAAqDtI,EAAAA,EAAAA,KAA7CuI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,cAAezI,EAAjC,EAAiCA,gBAEjC,OAAOyI,GACL,SAAC,IAAD,CACEC,UAAU,MACV7H,OACE,SAAC,KAAD,CACEnH,GAAG,2EACHC,GAAG,4DALT,UASE,SAAC,KAAD,CAAQ4O,MAAOA,EAAOvJ,QAAS,kBAAMwJ,EAASjI,EAAf,EAAwBb,KAAK,QAAQtG,UAAU,oBAA9E,SACG4G,EAAgBO,IACf,iCACE,SAACoI,EAAA,EAAD,IADF,KACkB,SAAC,KAAD,CAAWjP,GAAG,YAAYC,GAAG,cAG/C,iCACE,SAACiP,EAAA,EAAD,IADF,KAC2B,SAAC,KAAD,CAAWlP,GAAG,QAAQC,GAAG,iBAM1D,uBAEH,C,4FCnBM,SAASkP,EAAT,GAO4B,IANjCtI,EAMgC,EANhCA,OACAwD,EAKgC,EALhCA,SAKgC,IAJhC3K,UAAAA,OAIgC,MAJpB,GAIoB,MAHhCN,SAAAA,OAGgC,MAHrB,SAGqB,MAFhCyP,MAAAA,OAEgC,SAD7BO,GAC6B,YAChC,OACE,iCAAK1P,WAAWoF,EAAAA,EAAAA,GAAK,8BAA+BpF,IAAgB0P,GAApE,cACgB,QAAbhQ,IAAsB,SAAC,EAAD,CAAiByH,OAAQA,EAAQgI,MAAOA,IAC9DxE,EACa,WAAbjL,IAAyB,SAAC,EAAD,CAAiByH,OAAQA,EAAQgI,MAAOA,OAGvE,C,+FCEYQ,EAAY,SAAC,GAQH,IAPrBtK,EAOoB,EAPpBA,GAOoB,IANpBuC,UAAAA,OAMoB,MANR,IAMQ,MALpB5H,UAAAA,OAKoB,MALR,GAKQ,MAJpBwH,QAAAA,OAIoB,aAHpBoI,eAAAA,OAGoB,MAHH,GAGG,MAFpBC,cAAAA,OAEoB,MAFJ,MAEI,MADpBC,OAAAA,OACoB,SACZlJ,GAAoBC,EAAAA,EAAAA,KAApBD,gBACFE,GAAUC,EAAAA,EAAAA,GAAa,OAEvBuC,EAAY,aAEZyG,EAAY,sBAAkB1K,EAAGA,EAAG9D,OAAS,IAE7C0F,EAAW5B,EAAG6B,QAAQ,KAAM,KAE5BF,EAAYJ,EAAgBvB,GAE5B2K,EAAmC,mBAAZxI,EAAwB,CAAC,EAAIA,EAE1D,OACE,gBACExH,WAAWoF,EAAAA,EAAAA,GACTkE,EACAtC,GAAS,UAAOsC,EAAP,UACTwG,GAAM,UAAOxG,EAAP,YACNtJ,GAEF8B,MAAO,CAAEnB,OAAQmP,EAAM,UAAMlI,EAAN,WAAsBmF,GAP/C,UASE,SAAC,IAAD,CACErM,MAAOkH,EACP9I,IAAG,UAAKgI,EAAL,YAAgBG,EAAhB,YAA4B4I,GAC/BvC,aAAa,SAAC,IAAD,CAAO9F,SAAS,EAAO1I,IAAKwO,EAAa5M,MAAOkH,IAC7DL,SAAQ,UAAKF,EAAAA,GAAAA,OAAL,OAAwB0I,EAAxB,QACRvI,UACER,IAAcQ,KAAd,kBAGSwI,GAHT,IAIMC,eAAe7K,EAAAA,EAAAA,GAAK,GAAD,OAAIkE,EAAJ,yBAA+B0G,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAeC,eACjEnR,IAAK4M,QAAQkE,GAAR,UACE9I,EADF,YACa8I,EAAe1I,QAAQ,KAAM,KAD1C,YACkD2I,GADlD,OAEDG,QAFC,IAEDA,OAFC,EAEDA,EAAelR,SAMlC,E,SC9FYoR,EAAgB,SAAC,GAA0D,IAAD,IAAvD7K,GAAAA,OAAuD,MAAlD,eAAkD,EAA/BqK,GAA+B,YACrF,OAAO,SAAC,GAAD,QAAWrK,GAAIA,GAAQqK,GAC/B,E,iDCiDM,SAASS,EAAT,GAWmB,IAVxB9K,EAUuB,EAVvBA,GACAsF,EASuB,EATvBA,SASuB,IARvB3K,UAAAA,OAQuB,MARX,GAQW,MAPvBoQ,eAAAA,OAOuB,MAPN,MAOM,MANvBC,KAAAA,OAMuB,SALvB1Q,EAKuB,EALvBA,KACAiG,EAIuB,EAJvBA,QAIuB,IAHvBK,SAAAA,OAGuB,SAFvBqK,EAEuB,EAFvBA,WAEuB,IADvBC,YAAAA,OACuB,MADT,CAAC,EACQ,EACjBC,EAA2B,QAAnBJ,EAERK,EAAa,OAAG9Q,QAAH,IAAGA,EAAAA,EAAS6Q,GAAQ,SAACE,EAAA,EAAD,KAAyB,SAACC,EAAA,EAAD,IAE7CC,EAAwCL,EAAnDvQ,UAA+B6Q,GAAvC,OAA2DN,EAA3D,GAEMO,EAASlL,GACb,UAAC,MAAD,gBACE2I,MAAM,QACNjI,KAAK,QACL6I,MAAOkB,EACPrQ,WAAWoF,EAAAA,EAAAA,GACT,4BACAiL,GAAQ,kCACRA,GAAI,0CAAuCD,GAC3CQ,GAEFhL,QAAS,kBAAMA,EAAQP,EAAd,EACTY,SAAUA,GACN4K,GAZN,cAcGJ,EAdH,OAeGH,QAfH,IAeGA,EAAAA,GAAc,SAAC,KAAD,CAAWhQ,GAAG,aAAaC,GAAG,WAC5CkQ,OAGH,wBAGF,OACE,gBAAKzQ,WAAWoF,EAAAA,EAAAA,GAAK,oBAAqBpF,GAA1C,UACE,UAAC,EAAD,CAA0BmH,OAAQ9B,EAAI3F,SAA6B,WAAnB0Q,EAA8B,MAAQ,SAAtF,WACE,SAAC,IAAD,UAAY/K,KACZ,iBAAKrF,UAAU,+BAAf,UACGwQ,GAASM,EACTnG,GACC6F,GAASM,SAKpB,C,qCCpCM,SAASC,EAAT,GAeiB,IAAD,IAdrBC,KAAAA,OAcqB,MAdd,GAcc,EAbrBC,EAaqB,EAbrBA,aACAC,EAYqB,EAZrBA,iBACAC,EAWqB,EAXrBA,iBAWqB,IAVrBnR,UAAAA,OAUqB,MAVT,GAUS,MATrBoR,kBAAAA,OASqB,MATD,GASC,MARrBC,UAAAA,OAQqB,MART,EAQS,EAPrBC,EAOqB,EAPrBA,SAOqB,IANrBC,YAAAA,OAMqB,MANP,GAMO,MALrBC,qBAAAA,OAKqB,aAJrBC,cAAAA,OAIqB,MAJL,CAAC,EAII,MAHrBC,cAAAA,OAGqB,MAHL,GAGK,MAFrBlK,QAAAA,OAEqB,SADrBmK,EACqB,EADrBA,kBAGA,GAAkCC,EAAAA,EAAAA,GAA2BnO,KAAKtD,IAAIkR,EAAW,GAAI,CACnFQ,SAAUN,IADZ,eAAO3J,EAAP,KAAkBkK,EAAlB,KAIA,OACE,SAAC,iBAAD,CAAoBtK,QAASmK,EAA7B,UACE,gBAAK3R,WAAWoF,EAAAA,EAAAA,GAAK,kBAAmBpF,GAAY+R,IAAKD,EAAzD,SACGd,EAAK9P,KAAI,SAACiG,EAAQpF,GACjB,OACE,gBAEE/B,WAAWoF,EAAAA,EAAAA,GACT,mCACA2I,EAAAA,EAAAA,IAAkB,YAAa,CAC7BM,MAAOtM,KALb,UASE,SAAC,EAAD,CACE6D,QAASqL,EACT5L,GAAI8B,EACJoJ,YAAa,CAAEvQ,UAAWoR,GAC1BzR,KAAMwR,EACNb,WAAYY,EACZjL,SAAUuL,EANZ,UAQE,SAAC,EAAD,CACEnM,GAAI8B,EACJS,UAAW0J,GAAY1J,EACvB5H,WAAWoF,EAAAA,EAAAA,GAAKqM,EAActK,IAAW,4BAA6BuK,GACtElK,QAASA,OArBf,eACeL,GAyBlB,OAIR,CCxHM,SAAS6K,EAAT,GAAoE,IAApChB,EAAmC,EAAnCA,KACrC,OAAKA,GAEH,gBAAKhR,UAAU,0BAAf,SACGgR,EAAK9P,KAAI,SAACiG,GAAD,OACR,SAAC,EAAD,CAAW9B,GAAI8B,EAAQS,UAAW,EAA8BJ,SAAS,GAAzE,mBAAsDL,GAD9C,OAHI,mBAQnB,CCCM,SAAS8K,EAAT,GAMyB,IAL9BrM,EAK6B,EAL7BA,QACAuB,EAI6B,EAJ7BA,OACA+K,EAG6B,EAH7BA,YACAC,EAE6B,EAF7BA,cAE6B,IAD7BrK,WAAAA,OAC6B,SAC7B,OACE,UAAC,KAAD,CACEyG,MAAM,QACNjI,KAAK,QACL6I,OAAQrH,EACR9H,UAAU,2BACV4F,QAAS,kBAAMA,EAAQuB,EAAd,EALX,WAOE,SAACwJ,EAAA,EAAD,IACC7I,GACC,SAAC,KAAD,CAAWxH,GAAG,YAAYC,GAAG,WAAW6R,OAAQD,KAEhD,SAAC,KAAD,CAAW7R,GAAG,aAAaC,GAAG,SAAS6R,OAAQF,KAEjD,SAACvB,EAAA,EAAD,MAGL,C,6FCvCM,SAAS0B,EAAT,GAAiF,IAAxD1H,EAAuD,EAAvDA,SAAUlL,EAA6C,EAA7CA,KAAM6S,EAAuC,EAAvCA,SAAUtS,EAA6B,EAA7BA,UACxD,OACE,SAAC,IAAD,CAAiBL,MAAM,SAAC,IAAD,IAAoBF,KAAMA,EAAM6S,SAAUA,EAAUtS,UAAWA,EAAtF,SACG2K,GAGN,C,6FCyBM,SAAS4H,EAAT,GAOmB,IANxB5H,EAMuB,EANvBA,SACAhL,EAKuB,EALvBA,KACAF,EAIuB,EAJvBA,KACAO,EAGuB,EAHvBA,UAGuB,IAFvBsS,SAAAA,OAEuB,MAFZ,QAEY,MADvBE,cAAAA,OACuB,MADP,QACO,EACvB,OACE,kBAAMxS,WAAWoF,EAAAA,EAAAA,GAAK,mBAAoB3F,GAAI,4BAAyBA,GAAQO,GAA/E,UACqB,WAAlBwS,IACC,iCACE,SAAC,IAAD,CAAYlM,KAAMgM,EAAU3S,KAAMA,IAAS,OAG9CgL,EACkB,UAAlB6H,IACC,gCACG,KACD,SAAC,IAAD,CAAYlM,KAAMgM,EAAU3S,KAAMA,SAK3C,C,6FCvDM,SAAS8S,EAAT,GAAoF,IAAxD9H,EAAuD,EAAvDA,SAAUlL,EAA6C,EAA7CA,KAAM6S,EAAuC,EAAvCA,SAAUtS,EAA6B,EAA7BA,UAC3D,OACE,SAAC,IAAD,CAAiBL,MAAM,SAAC,IAAD,IAAiBF,KAAMA,EAAM6S,SAAUA,EAAUtS,UAAWA,EAAnF,SACG2K,GAGN,C,6FCNM,SAAS+H,EAAT,GAAmF,IAAxD/H,EAAuD,EAAvDA,SAAUlL,EAA6C,EAA7CA,KAAM6S,EAAuC,EAAvCA,SAAUtS,EAA6B,EAA7BA,UAC1D,OACE,SAAC,IAAD,CAAiBL,MAAM,SAAC,IAAD,IAAcF,KAAMA,EAAM6S,SAAUA,EAAUtS,UAAWA,EAAhF,SACG2K,GAGN,C,6FCNM,SAASgI,EAAT,GAAiF,IAAxDhI,EAAuD,EAAvDA,SAAUlL,EAA6C,EAA7CA,KAAM6S,EAAuC,EAAvCA,SAAUtS,EAA6B,EAA7BA,UACxD,OACE,SAAC,IAAD,CAAiBL,MAAM,SAAC,IAAD,IAAeF,KAAMA,EAAM6S,SAAUA,EAAUtS,UAAWA,EAAjF,SACG2K,GAGN,C,sPCeD,SAASiI,EAAT,GAA0F,IAAnEC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,MAAOpG,EAA8C,EAA9CA,YACnCqG,EAAaF,EAAc,EAC3BG,EAAaH,EAAc,EACjC,OACE,eACE7S,WAAWoF,EAAAA,EAAAA,GACT,8BACA2N,GAAc,oCACdC,GAAc,qCAHD,uCAImBF,IALpC,UAQE,UAAC,IAAD,CACErL,MAAK,OAAEiF,QAAF,IAAEA,EAAAA,GAAe,SAAC,KAAD,CAAWpM,GAAG,gBAAgBC,GAAG,kBACvD6H,MAAO2K,EAAa,OAASC,EAAa,MAAQ,OAFpD,UAIGD,EAAa,IAAM,GACnBF,MAIR,CAQD,SAASI,EAAT,GAIoC,IAHlCC,EAGiC,EAHjCA,aACA9E,EAEiC,EAFjCA,SAEiC,IADjC+E,yBAAAA,OACiC,MADN,GACM,EAC3B3N,EAAS4N,MAAMC,QAAQH,GAAgBA,EAAe,CAACA,GAC7D,OACE,eAAIlT,UAAU,oCAAd,SACGwF,EAAOtE,KAAI,SAAC2R,EAAa9Q,GAAd,OACV,SAAC6Q,EAAD,CAEEC,YAAaA,EACbC,MAAO/Q,EACP2K,YAAayG,EAAyBpR,IAJxC,uBACuBqM,EADvB,YACmCrM,GAFzB,KAUjB,CAUM,SAASuR,EAAT,GAM6B,IALlC1F,EAKiC,EALjCA,QACA2F,EAIiC,EAJjCA,QACAJ,EAGiC,EAHjCA,yBAGiC,IAFjCK,iBAAAA,OAEiC,aADjCnF,MAAAA,OACiC,MADzB,EACyB,EACjC,GAAsC1L,EAAAA,EAAAA,UAAS,GAA/C,eAAO8Q,EAAP,KAAoBC,EAApB,KACA,GAA0C/Q,EAAAA,EAAAA,UAAsB,IAAhE,eAAOgR,EAAP,KAAsBC,EAAtB,KACA,GAA4BjR,EAAAA,EAAAA,UAAS,GAArC,eAAOkR,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,KAA1B,eAAOhC,EAAP,KAAcpR,EAAd,KAAcA,OAERqT,GAAYC,EAAAA,EAAAA,UAAQ,kBAAMxQ,KAAKtD,IAAL,MAAAsD,MAAI,OAAQ8P,EAAQrS,KAAI,SAACgT,GAAD,OAAYA,EAAOC,QAAnB,KAA9B,GAA6D,CAACZ,IAEhFa,GAAYC,EAAAA,EAAAA,GAAa,CAC/BC,SAAU,EAAIjG,EACdkG,WAAW,EACXC,SAAU,WACRV,EAAU,GACVJ,EAAe,EAChB,IANKU,QA6DR,OAnDAhL,EAAAA,EAAAA,IAAc,WACZ,IAAMqL,EAAyB,CAAC,EAC5BC,EAAe,EACfC,EAAa,EAEXC,GAAuBC,EAAAA,EAAAA,SAAQtB,EAAS,CAAC,WAAY,QAAS,CAAC,OAAQ,QAAQuB,QACnF,SAACC,EAAkBnI,EAAO7K,GAQxB,OAPAgT,EAAInI,EAAMwB,UAAYrM,GAEH,IAAf4S,GAAoB/H,EAAMuH,SAAWQ,KACvCA,EAAa/H,EAAMuH,SACnBO,GAAgB,GAElBD,EAAU7H,EAAMwB,UAAY,CAAC,EAAGsG,GACzBK,CACR,GACD,CAAC,GAGGC,GAAsBH,EAAAA,EAAAA,SAAQtB,EAAS,CAAC,gBAAiB,QAAS,CAAC,OAAQ,QAGjFmB,EAAe,EACfC,EAAa,EAEb,IAAMM,EAAiCD,EAAoB9T,KAAI,SAAC0L,EAAO7K,GACrE,IAAMmT,GAAQ,UAAQtI,GAUtB,OARAsI,EAASpC,MAAQ,CAAC/Q,EAAO6S,EAAqBM,EAAS9G,WACvD8G,EAASxV,SAAW+U,EAAUS,EAAS9G,WAEpB,IAAfuG,GAAoB/H,EAAMuI,cAAgBR,KAC5CA,EAAa/H,EAAMuI,cACnBT,GAAgB,GAElBQ,EAASxV,SAAS,GAAKgV,EAChBQ,CACR,IAEDtB,EAAiBqB,EAClB,KAGD9V,EAAAA,EAAAA,YAAU,WACJiV,IAAY,EAAI/F,EAClBqF,EAAe,GACNU,IAAY,EAAI/F,GACzBqF,EAAe,EAElB,GAAE,CAACU,EAAS/F,KAGX,iBACErO,WAAWoF,EAAAA,EAAAA,GACT,gBACAgP,EAAU,GAAK,wBACH,IAAZA,IAAiBrG,EAAAA,EAAAA,IAAkB,WAErCjM,MAAO,CAAEnB,OAAO,GAAD,QAAM8C,KAAKtD,IAAI,GAAIQ,GAAU,GAAKgT,EAAcpS,OAAhD,OANjB,WAQE,iBACEvB,UAAU,qBACVqF,GAAG,0BACHvD,MAAO,CAAEuK,QAAS,GAClB0F,IAAKA,EAJP,WAME,gBAAK/R,UAAU,4BAAf,UACE,SAACoV,EAAA,EAAD,CAAapV,UAAU,iCAEzB,gBAAKA,UAAU,+BAAf,iBACA,iBAAKA,UAAU,6BAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,KAAD,CAAQqF,GAAG,SAEb,gBAAKrF,UAAU,sBAAf,6BAEF,SAAC,IAAD,CAASyH,OAAO,SAAC,KAAD,CAAWnH,GAAG,oBAAoBC,GAAG,oBAAsB6H,MAAM,OAAjF,UACE,gBAAKpI,UAAU,6BAAf,kBAGF,SAACiT,EAAD,CAAcC,aAAc,EAAG9E,SAAS,OAExC,SAAC,IAAD,CAAS3G,MAAM,QAAQW,MAAM,OAA7B,UACE,iBAAMpI,UAAU,mCAAhB,oBAIH2T,EAAczS,KAAI,SAAC0L,EAAO7K,GAAW,IAAD,IAC3BqM,EAAqExB,EAArEwB,SAAU+F,EAA2DvH,EAA3DuH,SAAUgB,EAAiDvI,EAAjDuI,cAAejC,EAAkCtG,EAAlCsG,aAAcJ,EAAoBlG,EAApBkG,MAAOpT,EAAakN,EAAblN,SAC1D2V,GAAa5R,KAAKtD,IAAI,GAAIQ,GAAU,IAAxB,UAA8BmS,EAAMe,UAApC,QAA+C,GAEjE,OACE,iBACE7T,UAAS,iDAA4C+B,GAGrDD,MAAO,CAAEwT,IAAI,GAAD,OAAKD,EAAL,OAJd,WAME,gBAAKrV,UAAU,4BAAf,SACGmU,EAAW,GAAKH,IAAcG,GAAYV,GAAe,IACxD,SAAC2B,EAAA,EAAD,CAAapV,UAAU,iCAG3B,iBAAKA,UAAU,+BAAf,wBAAgDN,EAASmU,UAAzD,QAAoE,OACpE,iBAAK7T,UAAU,6BAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,KAAD,CAAQqF,GAAIuI,EAAQQ,GAAUE,cAEhC,gBAAKtO,UAAU,sBAAf,SAAsC4N,EAAQQ,GAAUhH,WAE1D,SAAC,IAAD,CAASK,OAAO,SAAC,KAAD,CAAWnH,GAAG,oBAAoBC,GAAG,oBAAsB6H,MAAM,OAAjF,UACE,gBAAKpI,UAAU,6BAAf,SAA6CmV,OAE7C3B,GAAoBC,GAAe,QAAsB1G,IAAjBmG,IACxC,SAACD,EAAD,CACEC,aAAcA,EACd9E,SAAUA,EACV+E,yBAA0BA,IAG7BM,GAAe,IACd,SAAC,IAAD,CAAShM,MAAM,QAAQW,MAAM,OAA7B,UACE,iBAAMpI,UAAU,mCAAhB,SAAoDmU,QA9B1D,kBAEkB/F,GAiCrB,MAGN,C,+CC9LM,SAASmH,EAAT,GAQsB,IAP3B3H,EAO0B,EAP1BA,QACA2F,EAM0B,EAN1BA,QACAJ,EAK0B,EAL1BA,yBACAxI,EAI0B,EAJ1BA,SACAlD,EAG0B,EAH1BA,MACA+N,EAE0B,EAF1BA,SACAC,EAC0B,EAD1BA,MAIA,OAFAC,EAAAA,EAAAA,MAGE,UAAC,IAAD,YACE,SAAC,KAAD,CAAOD,MAAOA,EAAd,gBAAsBhO,QAAtB,IAAsBA,EAAAA,EAAS,YAE9B+N,GAED,SAAClC,EAAD,CAAc1F,QAASA,EAAS2F,QAASA,EAASJ,yBAA0BA,KAC5E,UAAC,KAAD,CAAanT,UAAU,iDAAvB,WACE,SAAC2V,EAAA,EAAD,KACA,SAAC,KAAD,CACErV,GAAG,iFACHC,GAAG,0DAEL,SAACoV,EAAA,EAAD,OAGDhL,IAGN,C,mJC/DM,SAASiL,EAAT,GAAmG,IAA3EjL,EAA0E,EAA1EA,SAA0E,IAAhErG,UAAAA,OAAgE,MAApD,OAAoD,EAA5CuR,EAA4C,EAA5CA,OAAQvP,EAAoC,EAApCA,KAASoJ,GAA2B,YACjGpG,EAAY,gBAClB,OACE,kCACMoG,GADN,IAEE1P,WAAWoF,EAAAA,EAAAA,GACTkE,EADa,UAEVA,EAFU,aAEIhF,GACjBuR,GAAM,UAAOvM,EAAP,YACNhD,GAAI,UAAOgD,EAAP,aAAqBhD,IAN7B,SASGqE,IAGN,C,yOCpBKmL,GAAeC,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,uB,eCHvC,SAASC,EAAsBC,GAA6C,IAAD,EAA1BC,EAA0B,uDAAH,EACvEC,EAAI,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAME,YAAT,aAAG,EAAaD,EAAe,IAGzChX,EAAAA,EAAAA,YAAU,WACR,GAAIiX,EAAM,CACR,IAAMC,EAAarR,SAASsR,eAAe,OACvCD,IACW,MAATD,EACFC,EAAWE,UAAUC,IAAI,kBAEzBH,EAAWE,UAAUE,OAAO,kBAGjC,CACD,OAAO,WACL,IAAMJ,EAAarR,SAASsR,eAAe,OACjC,OAAVD,QAAU,IAAVA,GAAAA,EAAYE,UAAUE,OAAO,iBAC9B,CACF,GAAE,CAACL,GACL,CClBM,IAuEMM,EAAiB,SAACC,GAC7B,MAAO,CACLC,EAAE,GAAD,OAAKD,EAAO,GAAGlO,OAAf,YAAyBkO,EAAO,GAAGhO,QACpCkO,EAAE,GAAD,OAAKF,EAAO,GAAGlO,OAAf,YAAyBkO,EAAO,GAAGhO,QACpCmO,EAAE,GAAD,OAAKH,EAAO,GAAGlO,OAAf,YAAyBkO,EAAO,GAAGhO,QACpCoO,EAAE,GAAD,OAAKJ,EAAO,GAAGlO,OAAf,YAAyBkO,EAAO,GAAGhO,QAEvC,E,mXC9CYqO,GAAY,SAAC,GAA+B,IAAD,IAA5BC,EAA4B,EAA5BA,MACpBC,EAAa,oBACjB,CACE,YAAaC,EAAAA,EACb,yBAA0BC,EAAAA,EAC1B,uBAAwBC,EAAAA,EACxB,mBAAoBC,EAAAA,EACpB,iBAAkBC,EAAAA,EAClB,yBAA0BC,EAAAA,EAC1B,yBAA0BC,EAAAA,EAC1B,mBAAoBC,EAAAA,EACpB,mBAAoBC,EAAAA,EACpB,oBAAqBC,EAAAA,EACrB,oBAAqBC,EAAAA,EACrB,wBAAyBC,EAAAA,EACzB,oBAAqBC,EAAAA,EACrB,wBAAyBC,EAAAA,EACzB,iBAAkBC,EAAAA,EAClB,oBAAqBC,EAAAA,EACrB,iBAAkBC,EAAAA,EAClB,kBAAmBC,GAAAA,EACnB,mBAAoBC,EAAAA,EACpB,kBAAmBC,EAAAA,EACnB,yBAA0BC,EAAAA,EAC1B,gBAAiBC,EAAAA,EACjB,cAAeC,EAAAA,EACf,iBAAkBC,EAAAA,EAClB,mBAAoBC,EAAAA,EACpB,oBAAqBC,EAAAA,EACrB,aAAcC,EAAAA,EACd,aAAcC,EAAAA,EACd,kBAAmBC,EAAAA,UA9BJ,aACjB,EA8BI9B,EAAM+B,aA/BO,QA+BEC,EAAAA,EAErB,OAAO,UAAC/B,EAAD,GACR,ECzEYgC,GAA4C,CACvD,YAAa,CACX5Y,GAAI,yBACJC,GAAI,oBAEN,yBAA0B,CACxBD,GAAI,kCACJC,GAAI,uBAEN,uBAAwB,CACtBD,GAAI,6BACJC,GAAI,gBAEN,mBAAoB,CAClBD,GAAI,mBACJC,GAAI,mBAEN,iBAAkB,CAChBD,GAAI,iBACJC,GAAI,eAEN,yBAA0B,CACxBD,GAAI,yBACJC,GAAI,oBAEN,yBAA0B,CACxBD,GAAI,wBACJC,GAAI,uBAEN,mBAAoB,CAClBD,GAAI,yBACJC,GAAI,iBAEN,mBAAoB,CAClBD,GAAI,mBACJC,GAAI,gBAEN,oBAAqB,CACnBD,GAAI,oBACJC,GAAI,iBAEN,oBAAqB,CACnBD,GAAI,oBACJC,GAAI,oBAEN,wBAAyB,CACvBD,GAAI,cACJC,GAAI,aAEN,oBAAqB,CACnBD,GAAI,kBACJC,GAAI,iBAEN,wBAAyB,CACvBD,GAAI,mBACJC,GAAI,kBAEN,iBAAkB,CAChBD,GAAI,iBACJC,GAAI,aAEN,iBAAkB,CAChBD,GAAI,iBACJC,GAAI,eAEN,oBAAqB,CACnBD,GAAI,oBACJC,GAAI,iBAEN,kBAAmB,CACjBD,GAAI,uBACJC,GAAI,oBAEN,mBAAoB,CAClBD,GAAI,mBACJC,GAAI,iBAEN,kBAAmB,CACjBD,GAAI,qBACJC,GAAI,mBAEN,yBAA0B,CACxBD,GAAI,yBACJC,GAAI,iBAEN,iBAAkB,CAChBD,GAAI,4BACJC,GAAI,kBAEN,gBAAiB,CACfD,GAAI,0BACJC,GAAI,mBAEN,cAAe,CACbD,GAAI,eACJC,GAAI,aAEN,mBAAoB,CAClBD,GAAI,mBACJC,GAAI,yBAEN,aAAc,CACZD,GAAI,gBACJC,GAAI,mBAEN,oBAAqB,CACnBD,GAAI,oBACJC,GAAI,eAEN,aAAc,CACZD,GAAI,qBACJC,GAAI,cAEN,kBAAmB,CACjBD,GAAI,mBACJC,GAAI,iBAIK4Y,GAAkD,CAC7D,YAAa,CACX7Y,GAAI,wCACJC,GAAI,eAEN,yBAA0B,CACxBD,GAAI,yBACJC,GAAI,6BAEN,uBAAwB,CACtBD,GAAI,wBACJC,GAAI,mBAEN,mBAAoB,CAClBD,GAAI,oBACJC,GAAI,oBAEN,iBAAkB,CAChBD,GAAI,uCACJC,GAAI,oCAEN,yBAA0B,CACxBD,GAAI,mCACJC,GAAI,kCAEN,yBAA0B,CACxBD,GAAI,qCACJC,GAAI,6BAEN,mBAAoB,CAClBD,GAAI,wBACJC,GAAI,iBAEN,mBAAoB,CAClBD,GAAI,yCACJC,GAAI,uCAEN,oBAAqB,CACnBD,GAAI,sCACJC,GAAI,iCAEN,oBAAqB,CACnBD,GAAI,4BACJC,GAAI,6BAEN,wBAAyB,CACvBD,GAAI,oCACJC,GAAI,+BAEN,oBAAqB,CACnBD,GAAI,oCACJC,GAAI,+BAEN,wBAAyB,CACvBD,GAAI,wCACJC,GAAI,oCAEN,iBAAkB,CAChBD,GAAI,uBACJC,GAAI,kBAEN,iBAAkB,CAChBD,GAAI,6BACJC,GAAI,mBAEN,oBAAqB,CACnBD,GAAI,6BACJC,GAAI,yBAEN,kBAAmB,CACjBD,GAAI,0CACJC,GAAI,qCAEN,mBAAoB,CAClBD,GAAI,yBACJC,GAAI,gCAEN,kBAAmB,CACjBD,GAAI,+BACJC,GAAI,wBAEN,yBAA0B,CACxBD,GAAI,gCACJC,GAAI,0BAEN,gBAAiB,CACfD,GAAI,oBACJC,GAAI,mBAEN,cAAe,CACbD,GAAI,0BACJC,GAAI,uBAEN,iBAAkB,CAChBD,GAAI,yBACJC,GAAI,6BAEN,mBAAoB,CAClBD,GAAI,2BACJC,GAAI,6BAEN,aAAc,CACZD,GAAI,4BACJC,GAAI,2CAEN,oBAAqB,CACnBD,GAAI,yBACJC,GAAI,2BAEN,aAAc,CACZD,GAAI,sCACJC,GAAI,iCAEN,kBAAmB,CACjBD,GAAI,wBACJC,GAAI,oBC/NK6Y,GAAoB,SAAC,GAAuC,IAAD,EAApCnC,EAAoC,EAApCA,MAC1BvQ,GAAkBC,EAAAA,EAAAA,KAAlBD,cAEF2S,EAA8B,iBAAGF,SAAH,IAAGA,QAAH,EAAGA,GAAelC,EAAM+B,aAAxB,QAAiC,CACnE1Y,GAAI,kBACJC,GAAI,iBAGN,OAAO,gCAAGmG,EAAc2S,IACzB,E,2DCJM,SAASC,GAAT,GAAkE,IAA9C1L,EAA6C,EAA7CA,QAASuI,EAAoC,EAApCA,aAClC,GAA4BlC,EAAAA,EAAAA,UAAQ,WAClC,IAAMsF,GAAcC,EAAAA,GAAAA,IAAY5L,GAEhC,MAAO,CACL6L,QAASF,EAAYG,QAAO,SAACvL,GAAD,MAA8C,MAAlCA,EAAOiI,KAAKD,EAAe,EAAvC,IAC5BwD,OAAQJ,EAAYG,QAAO,SAACvL,GAAD,MAA8C,MAAlCA,EAAOiI,KAAKD,EAAe,EAAvC,IAE9B,GAAE,CAACvI,EAASuI,IAPLsD,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,OASjB,OACE,kBAAK3Z,UAAU,YAAf,WACE,iBAAKA,UAAU,2BACf,kBAAKA,UAAU,sBAAf,WACE,iBAAKA,UAAU,kBAAf,SACGyZ,EAAQvY,KAAI,SAACiN,GAAD,OACX,iBAAKnO,UAAU,oBAAf,UACE,UAAC,KAAD,CAASyH,MAAO0G,EAAO/G,KAAvB,UACE,UAACwS,GAAA,EAAD,CACEtL,SAAUH,EAAOG,SACjBjJ,GAAI8I,EAAO0L,UACX7Z,UAAU,qBACV8Z,SAAO,OANb,UAA2C3L,EAAO9I,GAAlD,YAAwD8I,EAAO0L,WADpD,OAaf,UAACE,GAAA,EAAD,CAAa/Z,UAAU,yBACvB,iBAAKA,UAAU,kBAAf,SACG2Z,EAAOzY,KAAI,SAACiN,GAAD,OACV,iBACEnO,UAAU,6CADZ,UAIE,UAAC,KAAD,CAASyH,MAAO0G,EAAO/G,KAAvB,UACE,UAACwS,GAAA,EAAD,CAEEtL,SAAUH,EAAOG,SACjBjJ,GAAI8I,EAAO0L,UACX7Z,UAAU,sBAJZ,UACUmO,EAAO9I,GADjB,YACuB8I,EAAO0L,eANlC,UAEU1L,EAAO9I,GAFjB,YAEuB8I,EAAO0L,WAHpB,WAmBrB,C,oDCxDM,SAASG,GAAkBC,GAChC,OACE,WAAC,KAAD,CAAOja,UAAU,kBAAkBsE,UAAU,WAAWC,MAAM,SAA9D,WACE,UAAC,MAAD,CAAY+B,KAAK,QAAQ3G,MAAM,UAACua,GAAA,EAAD,OAC/B,UAAC,KAAD,CAAO5T,KAAK,WAAZ,UACE,UAAC,MAAD,CAAWhG,GAAG,mCAA6BC,GAAG,qCAIrD,C,0ECXM,SAAS4Z,GAAYC,GAC1B,IAAMC,EAAoB,CAAC,EA0C3B,OAzCAD,EAAME,SAAQ,SAACC,GACb,OAAQA,EAAK9a,MACX,IAAK,YAmBL,IAAK,iBACH4a,EAAKE,EAAKC,KAAKnV,IAAMtE,KAAK0Z,WAAUC,EAAAA,GAAAA,MACpC,MAlBF,IAAK,uBACHL,EAAKM,QAASC,EAAAA,GAAAA,GAAcL,EAAKM,SACjC,MACF,IAAK,oBACH,IAAMC,EAAaP,EAAKQ,MA6ClB7Z,KAAI,SAAC0L,GAAD,OAAWA,EAAMvH,EAAjB,IA5CVgV,EAAKE,EAAKS,KAAK3V,KAAMuV,EAAAA,GAAAA,GAAcE,GACnC,MACF,IAAK,iBACHT,EAAKY,QAAU,EAACC,EAAAA,GAAAA,MAAYA,EAAAA,GAAAA,GAAS,QACrC,MACF,IAAK,kBACHb,EAAKc,MAAOD,EAAAA,GAAAA,KACZ,MACF,IAAK,kBACHb,EAAKe,WAAYR,EAAAA,GAAAA,GAAc,EAAC,GAAM,IACtC,MAIF,IAAK,aACHP,EAAKgB,YAAaH,EAAAA,GAAAA,GAAS,QAC3B,MACF,IAAK,QACHb,EAAKiB,aAAef,EAAKQ,MAAMjG,QAAO,SAACC,EAAuByF,GAE5D,OADAzF,EAAIyF,EAAKnV,KAAM6V,EAAAA,GAAAA,GAAS,QACjBnG,CACR,GAAE,CAAC,GACJ,MACF,IAAK,UACHsF,EAAKR,UAAYU,EAAKgB,QAAQ,GAC9B,MACF,QACE,MAAO,CAAC,EAEb,IAEMlB,CACR,CAEM,SAASmB,GAAcC,EAAoBC,GAChD,IAAMC,GAASf,EAAAA,GAAAA,GAAca,GAC7B,OAAOC,EAAeC,EAAOD,GAAgBC,CAC9C,C,gBC9CM,SAASC,GAAT,GAAuD,IAA9BnU,EAA6B,EAA7BA,MAC9B,OACE,UAAC,KAAD,CAAOnB,KAAK,QAAQmP,OAAK,EAACzH,MAAO,EAAGhO,UAAU,yBAA9C,UACE,UAAC,MAAD,UAAgByH,KAGrB,C,4BCKYoU,GAAgB,SAAC,GAAiE,IAA/D5E,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBAAgB5F,EAAgC,EAAhCA,KACtDtO,GADsF,EAA1BgG,SAChD1E,EAAAA,GAAAA,GAAa,EAAG,CAChC2I,SAAU,IACVxJ,SAAU,OAEJ0T,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAaD,OAVAic,EAAAA,GAAAA,IAAQ,WACgB,UAAlBjF,EAAMkF,SACRF,EAAST,GAAcvE,EAAMoD,KAAKU,MAAO,OAGrB,aAAlB9D,EAAMkF,SACRF,EAAST,GAAcvE,EAAMoD,KAAKoB,QAAS,YAE9C,IAEqB,UAAlBxE,EAAMkF,SAEN,mCACE,UAACP,GAAD,CAAenU,MAAO,CAAEnH,GAAI,yBAAuBC,GAAI,uBACvD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,gHAEE,mBAFF,yHAOFC,IACE,iHAEE,oBACA,iJASR,UAAC,KAAD,CAAOP,UAAU,kBAAjB,UACE,UAAC,MAAD,CAAWS,QAASwW,EAAMoD,KAAK+B,OAAO3b,QAASC,MAAOkH,EAAW5H,UAAU,iBAG7E,UAAC,KAAD,CAAOA,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKU,MAAM7Z,KAAI,SAACsZ,EAAgBzY,GAAjB,OACpB,UAAC,MAAD,CAEEkE,SAAU8V,GAAa7F,EAAKmG,MAC5BzW,QAAS,kBACPkW,EAAe,CACbzB,KAAM,CAAEpa,MAAOua,EAAKnV,KAFf,EAHX,UASE,UAAC,KAAD,CAAMuF,OAAQ0R,EAAAA,GAAQva,GAAQqG,OAAOmU,EAAAA,GAAAA,IAAkBxa,GAAvD,SACGyY,EAAKtQ,QATHsQ,EAAKnV,GAFQ,UAqB5B,mCACE,UAACuW,GAAD,CAAenU,MAAO,CAAEnH,GAAI,yBAAuBC,GAAI,uBACvD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,uGAEE,mBAFF,yHAOFC,IACE,kGAEE,oBACA,iJASR,UAAC,KAAD,CAAOP,UAAU,kBAAjB,UACE,UAAC,KAAD,CAAM4K,OAAO,IAAIxC,OAAOmU,EAAAA,GAAAA,IAAkB,GAA1C,SACGtF,EAAMoD,KAAKU,MAAM,GAAG7Q,UAIzB,iBAAKlK,UAAU,aAAf,SACGiX,EAAMoD,KAAKoB,QAAQva,KAAI,SAAC0L,GAAD,OACtB,kBAAK5M,UAAU,oBAAf,WACE,UAAC,MAAD,CAAWS,QAASmM,EAAMnM,QAASC,MAAOkH,EAAW5H,UAAU,eAE/D,UAAC,KAAD,CAAOA,UAAU,kBAAjB,UACE,UAAC,MAAD,CACEuO,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBAAMqW,EAASrP,EAAMwB,SAArB,EALX,UAOE,UAAC,MAAD,CAAW9N,GAAG,aAAaC,GAAG,iBAZd,QAoB/B,E,wEChIYkc,GAAwB,SAAC,GAAwD,IAAtDxF,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KAC5D6F,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAOyc,OAAOzc,KAEzB,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAc,CAAC,EAAG,EAAG,IAC/B,KAGC,mCACE,UAACI,GAAD,CAAenU,MAAO,CAAEnH,GAAI,oBAAqBC,GAAI,uBACrD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,gHAEE,mBAFF,kFAG4E,KAC1E,UAAC,KAAD,UAAgB2W,EAAMoD,KAAKsC,MAAM,GAAGzS,OAJtC,MAI+D,KAC7D,UAAC,KAAD,UAAgB+M,EAAMoD,KAAKsC,MAAM,GAAGzS,OALtC,OAQF3J,IACE,sFAEE,mBAFF,wFAGwF,KACtF,UAAC,KAAD,UAAgB0W,EAAMoD,KAAKsC,MAAM,GAAGzS,OAJtC,MAI+D,KAC7D,UAAC,KAAD,UAAgB+M,EAAMoD,KAAKsC,MAAM,GAAGzS,OALtC,YAWN,kBAAKlK,UAAU,WAAf,WACE,kBAAKA,UAAU,iBAAf,WACE,UAAC4c,GAAA,EAAD,CAAYjd,MAAM,UAACkd,GAAA,EAAD,IAAiBvW,KAAM,MACzC,iBAAKtG,UAAU,iBAAf,SAAiCiX,EAAMoD,KAAKsC,MAAM,GAAGzS,WAGvD,kBAAKlK,UAAU,iBAAf,WACE,UAAC4c,GAAA,EAAD,CAAYjd,MAAM,UAACmd,GAAA,EAAD,IAAiBxW,KAAM,MACzC,iBAAKtG,UAAU,iBAAf,SAAiCiX,EAAMoD,KAAKsC,MAAM,GAAGzS,WAGvD,kBAAKlK,UAAU,iBAAf,WACE,UAAC4c,GAAA,EAAD,CAAYjd,MAAM,UAACod,GAAA,EAAD,IAAmBzW,KAAM,MAC3C,iBAAKtG,UAAU,iBAAf,SAAiCiX,EAAMoD,KAAKsC,MAAM,GAAGzS,cAIzD,WAAC,KAAD,CAAOlK,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,WAAC,MAAD,CACEtE,UAAU,iBACViG,SAAUiQ,EAAKmG,OAASN,EACxBnW,QAAS,kBAAMqW,EAAS,EAAf,EAHX,UAKG,KACD,UAACW,GAAA,EAAD,CAAYjd,MAAM,UAACqd,GAAA,EAAD,IAAa1W,KAAM,KACpC2W,OAAOtQ,OAAoBsK,EAAMoD,KAAKoB,QAAQ,IAAIva,KAAI,SAACkb,EAAQra,EAAOmb,GACrE,OACE,WAAC,EAAAC,SAAD,YACE,kBAAMnd,UAAU,sBAAhB,SAAuCoc,EAAOlS,OAC7CgT,EAAI3b,OAAS,EAAIQ,IAAS,UAACqb,GAAA,EAAD,MAF7B,UAAkBhB,EAAOhO,SAAzB,YAAqCrM,GAKxC,QAEH,WAAC,MAAD,CACE/B,UAAU,iBACViG,SAAUiQ,EAAKmG,OAASN,EACxBnW,QAAS,kBAAMqW,EAAS,EAAf,EAHX,UAKG,KACD,UAACW,GAAA,EAAD,CAAYjd,MAAM,UAACqd,GAAA,EAAD,IAAa1W,KAAM,KACpC2W,OAAOtQ,OAAoBsK,EAAMoD,KAAKoB,QAAQ,IAAIva,KAAI,SAACkb,EAAQra,EAAOmb,GACrE,OACE,WAAC,EAAAC,SAAD,YACE,kBAAMnd,UAAU,sBAAhB,SAAuCoc,EAAOlS,OAC7CgT,EAAI3b,OAAS,EAAIQ,IAAS,UAACqb,GAAA,EAAD,MAF7B,UAAkBhB,EAAOhO,SAAzB,YAAqCrM,GAKxC,QAEH,WAAC,MAAD,CACE/B,UAAU,iBACViG,SAAUiQ,EAAKmG,OAASN,EACxBnW,QAAS,kBAAMqW,EAAS,EAAf,EAHX,UAKG,KACD,UAACW,GAAA,EAAD,CAAYjd,MAAM,UAACqd,GAAA,EAAD,IAAa1W,KAAM,KACpC2W,OAAOtQ,OAAoBsK,EAAMoD,KAAKoB,QAAQ,IAAIva,KAAI,SAACkb,EAAQra,EAAOmb,GACrE,OACE,WAAC,EAAAC,SAAD,YACE,kBAAMnd,UAAU,sBAAhB,SAAuCoc,EAAOlS,OAC7CgT,EAAI3b,OAAS,EAAIQ,IAAS,UAACqb,GAAA,EAAD,MAF7B,UAAkBhB,EAAOhO,SAAzB,YAAqCrM,GAKxC,YAKV,E,oCClHYsb,GAA2B,SAAC,GAAiD,IAAD,QAA9CpG,EAA8C,EAA9CA,MAAO6E,EAAuC,EAAvCA,eAAgB5F,EAAuB,EAAvBA,KACxD6F,GAAcC,EAAAA,GAAAA,KAAdD,UACFnU,GAAYsB,EAAAA,GAAAA,GAAa,EAAG,CAAEC,IAAK,EAAG0I,SAAU,IAAKxJ,SAAU,IAAKiV,OAAQ,IAE5ErB,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAKU,OACnC,KAGC,mCACE,UAACa,GAAD,CAAenU,MAAO,CAAEnH,GAAI,6BAA2BC,GAAI,mBAC3D,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mCAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,GAAG,+DACHC,GAAG,+DAIP,UAAC8K,GAAA,EAAD,CACErL,UAAU,eACVsL,UACE,UAAC,KAAD,CAAOtL,UAAU,kBAAkBsE,UAAU,WAAWC,MAAM,SAA9D,UACE,UAAC,MAAD,CAAWc,GAAG,gBAAgBuC,UAAW,QAG7C2D,WAAW,iBAAKvL,UAAU,iBAAf,uCAAiCiX,EAAMoD,YAAvC,aAAiC,EAAYM,cAA7C,kBAAuD1D,EAAMoD,YAA7D,aAAuD,EAAYoB,eAAnE,QAA8E,SAG3F,UAAC,kBAAD,WACE,UAAC,KAAD,CAAOzb,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKU,MAAM7Z,KAAI,SAACiG,GACrB,OACE,WAAC,KAAD,CAAOnH,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAAC,MAAD,CAA0B6C,OAAQA,EAAlC,UACE,UAAC,MAAD,CAAW9B,GAAI8B,EAAQS,UAAWA,OAEpC,UAAC,MAAD,CACE2G,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBAAMqW,EAAS9U,EAAf,EALX,UAOE,UAAC,MAAD,CAAW7G,GAAG,aAAaC,GAAG,eAIrC,aAMZ,E,2DCxDYgd,GAAuB,SAAC,GAAiD,IAA/CtG,EAA8C,EAA9CA,MAAO6E,EAAuC,EAAvCA,eAAgB5F,EAAuB,EAAvBA,KACtDtO,GAAYsB,EAAAA,GAAAA,GAAa,GAAI,CAAE2I,SAAU,IAAKxJ,SAAU,MAEtD0T,GAAcC,EAAAA,GAAAA,KAAdD,WAGRG,EAAAA,GAAAA,IAAQ,WACNJ,EAAe,CACbzB,KAAM,CAAEpa,MAAOub,GAAcvE,EAAMoD,KAAKU,MAAO,QAElD,IAED,IAAMpb,EAAyB,WAAlBsX,EAAMkF,SAAuB,UAACqB,GAAA,EAAD,KAAgB,UAACC,GAAA,EAAD,IAE1D,OACE,mCACE,UAAC7B,GAAD,CAAenU,MAAO,CAAEnH,GAAI,mBAAoBC,GAAI,sBACpD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,+GAEE,mBAFF,iBAGiB,KACf,UAACiS,GAAA,EAAD,CAAiB5S,KAAMA,EAAM6S,cAAc,SAA3C,SACqB,WAAlByE,EAAMkF,QAAuB,OAAS,cACtB,IANrB,0CAUF5b,IACE,mHAEE,mBAFF,iBAGiB,KACf,UAACgS,GAAA,EAAD,CAAiB5S,KAAMA,EAAM6S,cAAc,SAA3C,SACGyE,EAAMkF,UACU,IANrB,4CAaN,iBAAInc,UAAU,UAAd,UACG0L,QAAQuL,EAAMoD,KAAKqD,OAAOC,gBACzB,UAACrR,GAAA,EAAD,CAAWC,KAAM0K,EAAMoD,KAAKqD,OAAOC,aAAc5b,MAAOkV,EAAMoD,KAAKuD,aAAaD,eAEjFjS,QAAQuL,EAAMoD,KAAKqD,OAAOG,qBACzB,UAACvR,GAAA,EAAD,CACEC,KAAM0K,EAAMoD,KAAKqD,OAAOG,kBACxB9b,MAAOkV,EAAMoD,KAAKuD,aAAaC,qBAInC,UAACvR,GAAA,EAAD,CAAWC,KAAM0K,EAAMoD,KAAKqD,OAAOI,SAAU/b,MAAOkV,EAAMoD,KAAKuD,aAAaE,YAC5E,UAACxR,GAAA,EAAD,CAAWC,KAAM0K,EAAMoD,KAAKqD,OAAOK,OAAQhc,MAAOkV,EAAMoD,KAAKuD,aAAaG,UAC1E,UAACzR,GAAA,EAAD,CAAWC,KAAM0K,EAAMoD,KAAKqD,OAAOM,OAAQjc,MAAOkV,EAAMoD,KAAKuD,aAAaI,UAC1E,UAAC1R,GAAA,EAAD,CAAWC,KAAM0K,EAAMoD,KAAKqD,OAAOO,OAAQlc,MAAOkV,EAAMoD,KAAKuD,aAAaK,aAG5E,gBAAIje,UAAU,UAAd,SACGiX,EAAMoD,KAAKU,MAAM7Z,KAAI,SAACsZ,GAA+B,IAAD,EACnD,OACE,iBAAkBxa,UAAU,SAA5B,WACE,UAAC0H,GAAA,EAAD,CAAeC,KAAM6S,EAAM5S,UAAWA,EAAWE,YAAgB,OAAJoO,QAAI,IAAJA,GAAA,UAAAA,EAAMmE,YAAN,eAAYpa,SAAUua,EAAKnV,MAExF,UAAC,MAAD,CACEkJ,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBACPkW,EAAe,CACbzB,KAAM,CAAEpa,MAAOua,EAAKnV,KAFf,EALX,UAWE,UAAC,MAAD,CAAW/E,GAAG,aAAaC,GAAG,eAdzBia,EAAKnV,GAkBjB,QAIR,E,wBChFM,SAAS6Y,GAAT,GAAuG,IAA5EC,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,cAAe1T,EAA6C,EAA7CA,SAAU3K,EAAmC,EAAnCA,UACxE,OACE,kBACEA,WAAWoF,EAAAA,GAAAA,GAAK,mBAAoBpF,GACpC8B,MAAO,CAAEwc,oBAAoB,UAAD,OAAYH,EAAZ,UAA6BI,iBAAiB,UAAD,OAAYH,EAAZ,YACzEI,KAAK,QAHP,UAKGH,IAAiB,UAACI,GAAD,CAAiB7T,QAAM,IACxCD,IAGN,CAiBM,SAAS8T,GAAT,GAAiF,IAAtD9T,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,OAAQ5K,EAAmC,EAAnCA,UAClD,OACE,kBAAMA,WAAWoF,EAAAA,GAAAA,GAAK,mBAAoBwF,GAAU,2BAA4B5K,GAAYwe,KAAK,OAAjG,SACG7T,GAGN,C,yCC5CY+T,GAAqB,SAAC,GAAwD,IAAtDzH,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KACzD6F,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAACvc,GAChBoc,EAAe,CACbzB,KAAM,CAAEpa,MAAOyc,OAAOhd,KAEzB,EAOD,OAJAwc,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAc,CAAC,EAAG,EAAG,EAAG,IAClC,KAGC,mCACE,UAACI,GAAD,CAAenU,MAAO,CAAEnH,GAAI,iBAAkBC,GAAI,kBAClD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,uIAEE,mBAFF,0EAIE,mBAJF,qCAQFC,IACE,8FAEE,mBAFF,0EAIE,mBAJF,2CAWN,WAAC,KAAD,CAAOP,UAAU,kBAAjB,WACE,UAAC,MAAD,CAAQqF,GAAG,IAAIiB,KAAK,UADtB,KACiC,UAACsP,GAAA,EAAD,CAAcC,QAAM,EAApB,SAAsBoB,EAAMoD,KAAKsE,KAAKzU,WAGvE,UAAC,KAAD,CAAOlK,UAAU,kBAAjB,UACE,WAAC,GAAD,CAAiBme,QAAS,EAAGC,KAAM,EAAGC,eAAa,EAAnD,WACE,UAACI,GAAD,CAAiB7T,QAAM,EAAvB,SAAyBqM,EAAMoD,KAAKU,MAAM,GAAG7Q,QAC7C,UAACuU,GAAD,CAAiB7T,QAAM,EAAvB,SAAyBqM,EAAMoD,KAAKU,MAAM,GAAG7Q,QAC7C,UAACuU,GAAD,CAAiB7T,QAAM,EAAvB,SAAyBqM,EAAMoD,KAAKU,MAAM,GAAG7Q,QAC7C,UAACuU,GAAD,WACE,UAACG,GAAD,CAAgBhZ,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAUiQ,EAAKmG,MAAOG,QAAST,OAE7E,UAAC0C,GAAD,WACE,UAACG,GAAD,CAAgBhZ,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAUiQ,EAAKmG,MAAOG,QAAST,OAE7E,UAAC0C,GAAD,CAAiB7T,QAAM,EAAvB,SAAyBqM,EAAMoD,KAAKU,MAAM,GAAG7Q,QAC7C,UAACuU,GAAD,WACE,UAACG,GAAD,CAAgBhZ,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAUiQ,EAAKmG,MAAOG,QAAST,OAE7E,UAAC0C,GAAD,WACE,UAACG,GAAD,CAAgBhZ,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAUiQ,EAAKmG,MAAOG,QAAST,aAMtF,EAED,SAAS6C,GAAT,GAAqE,IAA3ChZ,EAA0C,EAA1CA,QAAS4W,EAAiC,EAAjCA,QAAY9M,GAAqB,cAClE,OACE,UAAC,OAAD,gBAAQ9J,QAASA,EAAS2I,MAAM,SAASiO,QAASA,GAAa9M,GAA/D,cACI8M,IAAW,UAACqC,GAAA,EAAD,MAGlB,C,gBCxEYC,GAA6B,SAAC,GAAiE,IAA/D7H,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBAAgB5F,EAAgC,EAAhCA,KACnEtO,GADmG,EAA1BgG,SAC7D1E,EAAAA,GAAAA,GAAa,EAAG,CAAE2I,SAAU,IAAKxJ,SAAU,OACrDoE,GAAa9F,EAAAA,EAAAA,KAAb8F,SACAsP,GAAcC,EAAAA,GAAAA,KAAdD,UASR,OANAG,EAAAA,GAAAA,IAAQ,WACNJ,EAAe,CACbzB,KAAM,CAAEpa,MAAOub,GAAcvE,EAAMoD,KAAKU,SAE3C,IAEqB,aAAlB9D,EAAMkF,SAEN,mCACE,UAACP,GAAD,CAAenU,MAAO,CAAEnH,GAAI,yBAA0BC,GAAI,uBAC1D,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,8LAKFC,IACE,uLAQN,UAAC,kBAAD,WACE,gBAAIP,UAAU,UAAd,SACGiX,EAAMoD,KAAK0E,MAAM7d,KAAI,SAACiG,EAAqBpF,GAAmB,IAAD,EACtDid,EAAMC,GAAAA,GAAUld,GACtB,OACE,kBAAK/B,UAAU,wBAAf,WACE,UAAC,MAAD,CACEmH,OAAQA,EACRnH,WAAWoF,EAAAA,GAAAA,GACT,iBACI,OAAJ8Q,QAAI,IAAJA,GAAA,UAAAA,EAAMmE,YAAN,eAAYpa,SAAUkH,GAAU,2BAJpC,UAOE,UAAC,MAAD,CAEE9B,GAAI8B,EACJS,UAAuB,GAAZA,EACX5H,UAAU,uBAJZ,sBACsBmH,OAOxB,kBAAKnH,UAAU,uBAAf,WACE,UAAC,MAAD,CAAQqF,GAAI2Z,EAAI1Q,SAAUtO,UAAU,yBAAyBsG,KAAK,aAClE,kBACEtG,UAAU,sBACV8B,MAAO,CAAEoG,gBAAiBgX,GAAAA,GAAQF,EAAI1Q,UAAUlG,UAElD,mBAAMpI,UAAU,uBAAhB,UACGgf,EAAI5X,KADP,KACe8X,GAAAA,GAAQF,EAAI1Q,UAAU5B,YAAYD,WAvBrD,sBAA2DtF,GA4B9D,SAIL,UAAC,KAAD,CAAasH,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IAAI,kGACJC,IAAI,iHAIR,UAAC,kBAAD,WACE,UAAC,KAAD,CAAOP,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKU,MAAM7Z,KAAI,SAACiG,GAAyB,IAAD,EAC7C,OACE,kBAAKnH,UAAU,wBAAf,WACE,UAAC,MAAD,CACEmH,OAAQA,EACRnH,WAAWoF,EAAAA,GAAAA,GACT,iBACI,OAAJ8Q,QAAI,IAAJA,GAAA,UAAAA,EAAMmE,YAAN,eAAYpa,SAAUkH,GAAU,2BAJpC,UAOE,UAAC,MAAD,CAEE9B,GAAI8B,EACJS,UAAuB,IAAZA,EACX5H,UAAU,uBAJZ,sBACsBmH,OAOxB,UAAC,KAAD,CAAOnH,UAAU,kBAAjB,UACE,UAAC,MAAD,CACEuO,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBACPkW,EAAe,CACbzB,KAAM,CAAEpa,MAAOkH,IAFV,EALX,UAWE,UAAC,MAAD,CAAW7G,GAAG,aAAaC,GAAG,iBA5BpC,sBAA2D4G,GAiC9D,YAQT,mCACE,UAACyU,GAAD,CAAenU,MAAO,CAAEnH,GAAI,yBAA0BC,GAAI,uBAC1D,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,kHAEE,mBAFF,uCAGkC,wCAHlC,kCAMFC,IACE,gHAEE,mBAFF,8BAG4B,qCAH5B,6BASN,UAAC,kBAAD,WACE,gBAAIP,UAAU,UAAd,SACGiX,EAAMoD,KAAKU,MAAM7Z,KAAI,SAACiG,EAAqBpF,GAAmB,IAAD,EACtDid,EAAMC,GAAAA,GAAUld,GACtB,OACE,kBAAK/B,UAAU,wBAAf,WACE,UAAC,MAAD,CACEmH,OAAQA,EACRnH,WAAWoF,EAAAA,GAAAA,GAAK,iBAAqB,OAAJ8Q,QAAI,IAAJA,GAAA,UAAAA,EAAMmE,YAAN,eAAYpa,SAAUkH,GAAU,2BAFnE,UAIE,UAAC,MAAD,CAEE9B,GAAI8B,EACJS,UAAWA,EACX5H,UAAU,uBAJZ,sBACsBmH,OAOxB,kBAAKnH,UAAU,uBAAf,WACE,UAAC,MAAD,CAAQqF,GAAI2Z,EAAI1Q,SAAUtO,UAAU,yBAAyBsG,KAAK,aAClE,kBACEtG,UAAU,sBACV8B,MAAO,CAAEoG,gBAAiBgX,GAAAA,GAAQF,EAAI1Q,UAAUlG,UAElD,mBAAMpI,UAAU,uBAAhB,UACGgf,EAAI5X,KADP,KACe8X,GAAAA,GAAQF,EAAI1Q,UAAU5B,YAAYD,UAGnD,UAAC,KAAD,CAAOzM,UAAU,kBAAjB,UACE,UAAC,MAAD,CACEuO,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBACPkW,EAAe,CACbzB,KAAM,CAAEpa,MAAOkH,IAFV,EALX,UAWE,UAAC,MAAD,CAAW7G,GAAG,uBAAoBC,GAAG,+BAnC3C,sBAA2D4G,GAwC9D,UAKV,E,wBC/LYgY,GAA4B,SAAC,GAAiD,IAA/ClI,EAA8C,EAA9CA,MAAO6E,EAAuC,EAAvCA,eAAgB5F,EAAuB,EAAvBA,KACzD7I,GAAc1G,EAAAA,EAAAA,KAAd0G,UACA0O,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,GAGDic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAc,CAACvE,EAAMoD,KAAK+E,QAAQC,KAAMpI,EAAMoD,KAAK+E,QAAQE,QACrE,IAED,OAA4B3c,EAAAA,EAAAA,UAAwB,MAApD,gBAAO4c,EAAP,KAAeC,EAAf,KACA,GAAkC7c,EAAAA,EAAAA,UAA2B,QAA7D,gBAAO2B,EAAP,KAAkBmb,EAAlB,KA4BA,OA1BAtgB,EAAAA,EAAAA,YAAU,WACR,IAAM8E,EAAkB,SAACb,GACvBoc,EAAUpc,EAAEsc,QACb,EAID,OAFA3a,OAAOE,iBAAiB,YAAahB,GAE9B,WACLc,OAAOI,oBAAoB,YAAalB,EACzC,CACF,GAAE,KAEH9E,EAAAA,EAAAA,YAAU,WAER,GAAe,OAAXogB,EAAiB,CACnB,IAAMI,EAAc5a,OAAO6a,WAIzBH,EADEF,GAFcI,EAAc,EAGjB,OAEA,QAEhB,CACF,GAAE,CAACJ,KAGF,mCACE,UAAC3D,GAAD,CAAenU,MAAO,CAAEnH,GAAI,sBAAuBC,GAAI,sBACvD,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,qIAEE,mBAFF,oEAMFC,IACE,4GAEE,mBAFF,wCASN,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,iBAAKtE,UAAU,qBAAf,UACE,UAAC4c,GAAA,EAAD,CACEjd,MAAM,UAAC8X,EAAA,EAAD,IACNnR,KAAM,GACNtG,WAAWoF,EAAAA,GAAAA,GAAK,6BAAD,sCAA8Dd,SAGjF,UAAC,KAAD,CAAMsG,OAAQyC,EAAU,OAAQ,QAASjF,MAAM,MAA/C,SACG6O,EAAMoD,KAAK+E,QAAQzE,UAGtB,UAAC,KAAD,CAAO3a,UAAU,kBAAjB,UACE,kBAAKA,UAAU,aAAf,WACE,WAAC,MAAD,CACE4F,QAAS,kBAAMqW,EAAShF,EAAMoD,KAAK+E,QAAQC,KAAlC,EACTpZ,SAAUiQ,EAAKmG,OAASN,EACxB/b,UAAU,YAHZ,WAKE,kBAAMA,UAAU,wCAAhB,UACE,UAAC4c,GAAA,EAAD,CAAYjd,MAAM,UAACkgB,GAAA,EAAD,IAAkBvZ,KAAM,QAE5C,kBAAMtG,UAAU,kBAAhB,SAAmCiX,EAAMoD,KAAK+E,QAAQC,WAExD,WAAC,MAAD,CACEzZ,QAAS,kBAAMqW,EAAShF,EAAMoD,KAAK+E,QAAQE,MAAlC,EACTrZ,SAAUiQ,EAAKmG,OAASN,EACxB/b,UAAU,YAHZ,WAKE,kBAAMA,UAAU,kBAAhB,UACE,UAAC4c,GAAA,EAAD,CAAYjd,MAAM,UAACkgB,GAAA,EAAD,IAAkBvZ,KAAM,QAE5C,kBAAMtG,UAAU,kBAAhB,SAAmCiX,EAAMoD,KAAK+E,QAAQE,wBAQrE,E,YChHYQ,GAAsB,SAAC,GAAwD,IAAtD7I,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KAC1D7I,GAAc1G,EAAAA,EAAAA,KAAd0G,UACA0O,GAAcC,EAAAA,GAAAA,KAAdD,UACR,GAA4BpZ,EAAAA,EAAAA,UAAS,IAArC,gBAAOod,EAAP,KAAeC,EAAf,KAEMC,EAAW,WACXF,EAAOxe,OAAS,GAClBua,EAAe,CACbzB,KAAM,CAAEpa,MAAO8f,IAGpB,EASD,OANA7D,EAAAA,GAAAA,IAAQ,WACNJ,EAAe,CACbzB,KAAM,CAAEpa,OV0BL2a,EAAAA,GAAAA,GAAc,CAAC,OAAQ,QAAS,QAAS,QAAS,WAAY,cUxBpE,KAGC,mCACE,UAACgB,GAAD,CAAenU,MAAO,CAAEnH,GAAI,GAAIC,GAAI,OACpC,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,+DACqB,UAAC,KAAD,UAAgB2W,EAAMoD,KAAKyD,SAAS1W,OADzD,uBAC6F,KAC3F,UAAC,KAAD,UAAgB6P,EAAMoD,KAAKyD,SAASoC,MAAMjJ,EAAMoD,KAAK8F,aAFvD,KAEmF,mBAFnF,oEAMF5f,IACE,yDACqB,UAAC,KAAD,UAAgB0W,EAAMoD,KAAKyD,SAAS1W,OADzD,cAC0F,KACxF,UAAC,KAAD,UAAgB6P,EAAMoD,KAAKyD,SAASoC,MAAMjJ,EAAMoD,KAAK8F,aAFvD,KAEmF,mBAFnF,qDASN,UAAC,KAAD,CAAOngB,UAAU,kBAAjB,UACE,UAAC,KAAD,UAAOiX,EAAMoD,KAAK9R,cAGpB,UAAC,KAAD,CAAakG,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IAAI,4FACJC,IAAI,uFAIR,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAAC,KAAD,CACEjE,SAAU,SAAC+C,GAAD,OAAO4c,EAAU5c,EAAEE,OAAOrD,MAA1B,EACVqN,YAAaD,EAAU,eAAgB,eACvCD,aAAc6S,EACdha,SAAU8V,GAAa7F,EAAKmG,SAE9B,UAAC,MAAD,CACE9N,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,OAAS0D,EAAOxe,OAAS,EACxCib,QAAST,EACTnW,QAASqa,EALX,UAOE,UAAC,MAAD,CAAW3f,GAAG,aAAaC,GAAG,kBAKvC,E,YCtEKuN,GAAY,CAChB,CACEzI,GAAI,IACJ6E,KAAM,CACJ5J,GAAI,OACJC,GAAI,UAGR,CACE8E,GAAI,KACJ6E,KAAM,CACJ5J,GAAI,UACJC,GAAI,UAGR,CACE8E,GAAI,IACJ6E,KAAM,CACJ5J,GAAI,SACJC,GAAI,YAKG6f,GAAsB,SAAC,GAAiE,IAA/DnJ,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBAC1CC,GAD0F,EAAhC7F,KAAgC,EAA1BtI,SAClDoO,EAAAA,GAAAA,KAAdD,WAEFrb,GAAQwI,EAAAA,GAAAA,GAAa,EAAG,CAC5BC,IAAK,GACL0I,SAAU,IACVxJ,SAAU,IACViV,OAAQ,KAGJrB,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAKgG,UAAW,QAC9C,KAGC,mCACE,UAACzE,GAAD,CAAenU,MAAO,CAAEnH,GAAI,mBAAoBC,GAAI,mBACpD,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CAAWnO,GAAG,wCAA+BC,GAAG,uDAGlD,UAAC,KAAD,CAAOP,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKgG,UAAUnf,KAAI,SAAC0L,EAAiB7K,GAAlB,OACxB,UAAC,MAAD,CAEED,MAAO,CAAEpB,MAAM,GAAD,OAAKA,EAAL,OACduF,SAAU8V,EACVnW,QAAS,kBAAMqW,EAASrP,EAAM1C,KAArB,EAJX,UAME,kBAAKlK,UAAU,WAAf,WACE,UAAC,IAAD,UAASsc,EAAAA,GAAQva,MACjB,iBAAK/B,UAAU,oBAAf,UACE,UAAC,MAAD,UAAgB8N,GAAU/L,GAAOmI,UAEnC,UAACoW,GAAA,EAAD,CAAWjb,GAAIyI,GAAU/L,GAAOsD,GAAIrF,UAAU,oBAC7C4M,IAAS,iBAAK5M,UAAU,iBAAf,SAAiC4M,EAAM1C,WAZrD,mBACmB0C,EAAM1C,MAFD,WAqBnC,E,YC3EYqW,GAAuB,SAAC,GAAwD,IAAtDtJ,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KAC7DtO,GAAYsB,EAAAA,GAAAA,GAAa,EAAG,CAAEC,IAAK,EAAG0I,SAAU,IAAKxJ,SAAU,IAAKiV,OAAQ,IAC1EvB,GAAcC,EAAAA,GAAAA,KAAdD,UACA1O,GAAc1G,EAAAA,EAAAA,KAAd0G,UAEF4O,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAKU,OACnC,KAGC,mCACE,UAACa,GAAD,CAAenU,MAAO,CAAEnH,GAAI,qBAAsBC,GAAI,oBACtD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,8DAC0B,UAAC+R,GAAA,EAAD,0BAD1B,wEAKF9R,IACE,kEAC8B,UAAC8R,GAAA,EAAD,yBAD9B,+BAON,UAAC,KAAD,CAAMzH,OAAQyC,EAAU,OAAQ,SAAUjF,MAAM,SAAhD,SACG6O,EAAMoD,KAAKmG,MAAMtW,QAGpB,UAAC,kBAAD,WACE,UAAC,KAAD,CAAOlK,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKU,MAAM7Z,KAAI,SAACiG,GACrB,OACE,WAAC,KAAD,CAAOnH,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAAC,MAAD,CAA0B6C,OAAQA,EAAlC,UACE,UAAC,MAAD,CAAW9B,GAAI8B,EAAQS,UAAWA,OAEpC,UAAC,MAAD,CACE2G,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBAAMqW,EAAS9U,EAAf,EALX,UAOE,UAAC,MAAD,CAAW7G,GAAG,aAAaC,GAAG,eAIrC,UAKV,E,YClEYkgB,GAAqB,SAAC,GAAwD,IAAtDxJ,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBACzCC,GADgF,EAAvB7F,MAC3C8F,EAAAA,GAAAA,KAAdD,WAEFkE,EAAW,SAACF,GAChBjE,EAAe,CACbzB,KAAM,CAAEpa,MAAO8f,IAElB,EAOD,OAJA7D,EAAAA,GAAAA,IAAQ,WACN+D,EAASzE,GAAcvE,EAAMoD,KAAKoB,SACnC,KAGC,mCACE,UAACG,GAAD,CAAenU,MAAO,CAAEnH,GAAI,iBAAkBC,GAAI,gBAClD,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mCAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,GAAG,sFACHC,GAAG,8FAIP,UAAC,KAAD,CAAOP,UAAU,kBAAjB,UACE,UAAC,KAAD,CAAMA,UAAU,qBAAqBoI,MAAM,SAA3C,UACE,UAACE,GAAA,EAAD,CAAmBC,SAAU0O,EAAMoD,KAAK9R,SAAUC,eAAgB,SAItE,UAAC,KAAD,CAAOxI,UAAU,kBAAkB+O,MAAI,EAAvC,SACGkI,EAAMoD,KAAKoB,QAAQva,KAAI,SAACkb,GAAD,OACtB,UAAC,MAAD,CAAqBxW,QAAS,kBAAMqa,EAAS7D,EAAf,EAAwB9V,KAAK,QAAQL,SAAU8V,EAA7E,SACGK,GADUA,EADS,WASjC,EC3CYsE,GAAY,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QACtD,OACE,kBAAK/gB,UAAU,gBAAf,WACE,kBAAKA,UAAU,uBAAf,WACE,iBAAKA,UAAU,sBAAf,UACE,UAAC,MAAD,UAAgB2gB,EAAKvZ,UAEvB,UAAC,MAAD,CAAWQ,UAAW,IAAKvC,GAAIsb,EAAKtb,GAAImC,SAAS,KACjD,UAAC,MAAD,CAAWI,UAAW,IAAKvC,GAAIub,EAAKvb,GAAImC,SAAS,KACjD,iBAAKxH,UAAU,sBAAf,UACE,UAAC,MAAD,UAAgB4gB,EAAKxZ,aAGzB,kBAAKpH,UAAU,sBAAf,WACE,kBAAKA,UAAU,4BAAf,WACE,iBAAKA,UAAU,4BAAf,UACE,UAAC,MAAD,CAAWM,GAAG,cAAcC,GAAG,sBAEhCsgB,EAAS3W,SAEZ,kBAAKlK,UAAU,4BAAf,WACE,iBAAKA,UAAU,4BAAf,UACE,UAAC,MAAD,CAAWM,GAAG,sBAAmBC,GAAG,yBAErCugB,EAAK5W,SAER,kBAAKlK,UAAU,4BAAf,WACE,iBAAKA,UAAU,4BAAf,UACE,UAAC,MAAD,CAAWM,GAAG,sBAAsBC,GAAG,yBAExCwgB,EAAQ7W,aAKlB,ECjCY8W,GAAuB,SAAC,GAAwD,IAAtD/J,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KAC3D6F,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAK4G,MAAO,MAC1C,KAGC,mCACE,UAACrF,GAAD,CAAenU,MAAO,CAAEnH,GAAI,qBAAsBC,GAAI,0BACtD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,0CACM,4CADN,kCAIFC,IACE,2CACO,8CADP,6CAON,iBAAKP,UAAU,iBAAf,SACGiX,EAAMoD,KAAK4G,MAAM/f,KAAI,SAACyf,EAAgC5e,GACrD,OACE,WAAC,KAAD,CAAO/B,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAACoc,GAAD,CACEC,KAAMA,EACNC,KAAM3J,EAAMoD,KAAK6G,OAAOnf,GACxB8e,SAAU5J,EAAMoD,KAAK8G,UAAUpf,GAC/B+e,KAAM7J,EAAMoD,KAAK+G,MAAMrf,GACvBgf,QAAS9J,EAAMoD,KAAKgH,SAAStf,MAE/B,UAAC,MAAD,CACE6D,QAAS,kBAAMqW,EAAS0E,EAAKtb,GAApB,EACTY,SAAUiQ,EAAKmG,OAASN,EACxB/b,UAAU,aAEVP,KAAK,UACL8O,MAAM,QANR,UAQE,UAAC,MAAD,CAAWjO,GAAG,OAAOC,GAAG,cAJnBogB,EAAKtb,MAZ+Csb,EAAKtb,GAoBrE,QAIR,E,wBCzDYic,GAAmB,SAAC,GAAwD,IAAtDrK,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KACvD6F,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAWD,OARAic,EAAAA,GAAAA,IAAQ,WACND,EACoB,SAAlBhF,EAAMkF,QACFX,GAAc,CAAC,IAAK,MACpBA,GAAcvE,EAAMoD,KAAKoB,QAAQva,KAAI,SAACqgB,GAAD,OAAmBA,EAAElc,EAArB,KAE5C,IAEqB,SAAlB4R,EAAMkF,SAEN,mCACE,UAACP,GAAD,CAAenU,MAAO,CAAEnH,GAAI,iBAAkBC,GAAI,kBAClD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,oFAEE,mBAFF,0EAMFC,IACE,gEAEE,mBAFF,+FASN,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,WAAC,MAAD,CACEtE,UAAU,WACViG,SAAUiQ,EAAKmG,OAASN,EACxBnW,QAAS,kBAAMqW,EAAS,IAAf,EAHX,WAKE,WAAC,KAAD,CAAO3X,UAAU,WAAWC,MAAM,SAASvE,UAAU,SAArD,WACE,UAAC,IAAD,CAAQ8B,MAAO,CAAEoG,gBAAiB,SAAlC,gBACA,UAAC,MAAD,CAAYvI,MAAM,UAAC6hB,GAAA,EAAD,IAAgBlb,KAAK,cAEzC,iBAAKtG,UAAU,mBAAf,SACGiX,EAAMoD,KAAKoB,QAAQ,GAAKva,KAAI,SAACugB,GAAD,OAC3B,UAACC,GAAA,EAAD,CAAiClH,KAAMiH,EAAOE,cAAe,EAAGna,SAAS,GAAzE,YAAqBia,EAAMpc,IADA,UAKjC,WAAC,MAAD,CACErF,UAAU,WACViG,SAAUiQ,EAAKmG,OAASN,EACxBnW,QAAS,kBAAMqW,EAAS,IAAf,EAHX,WAKE,WAAC,KAAD,CAAO3X,UAAU,WAAWC,MAAM,SAASvE,UAAU,SAArD,WACE,UAAC,IAAD,CAAQ8B,MAAO,CAAEoG,gBAAiB,cAAlC,gBACA,UAAC,MAAD,CAAYvI,MAAM,UAAC6hB,GAAA,EAAD,IAAgBlb,KAAK,cAEzC,iBAAKtG,UAAU,mBAAf,SACGiX,EAAMoD,KAAKoB,QAAQ,GAAKva,KAAI,SAACugB,GAAD,OAC3B,UAACC,GAAA,EAAD,CAAiClH,KAAMiH,EAAOE,cAAe,EAAGna,SAAS,GAAzE,YAAqBia,EAAMpc,IADA,gBAYvC,mCACE,UAACuW,GAAD,CAAenU,MAAO,CAAEnH,GAAI,iBAAkBC,GAAI,kBAClD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,yEACkC,+CADlC,mHAKFC,IACE,sEACkC,wCADlC,gHAQN,UAAC,KAAD,CAAOP,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKoB,QAAQva,KAAI,SAACugB,GAAD,OACtB,WAAC,KAAD,CAAOnd,UAAU,WAA0BtE,UAAU,iCAArD,WACE,UAAC0hB,GAAA,EAAD,CAAWlH,KAAMiH,EAAOE,cAAe,EAAGna,SAAS,KACnD,UAAC,MAAD,CACE+G,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,OAASN,EACxBnW,QAAS,kBAAMqW,EAASwF,EAAMpc,GAArB,EACTmX,QAAST,EALX,UAOE,UAAC,MAAD,CAAWzb,GAAG,aAAaC,GAAG,eATDkhB,EAAMpc,GADjB,QAiB/B,E,gDCpHYuc,GAAsB,SAAC,GAAiE,IAA/D3K,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBAAgB5F,EAAgC,EAAhCA,KAC1D6F,GAD0F,EAA1BnO,SAClDoO,EAAAA,GAAAA,KAAdD,WACR,GAAgCpZ,EAAAA,EAAAA,UAAS,GAAzC,gBAAOjD,EAAP,KAAiBmiB,EAAjB,KAEM5F,EAAW,SAAChc,GACX8b,GAAc7F,EAAKmG,OACtBP,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAGb,GAGDic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAc,CAAC,OAAQ,SAAU,UAC3C,IAED,IAAMsG,EAAgB,eAEtB,OACE,mCACE,UAAClG,GAAD,CAAenU,MAAO,CAAEnH,GAAI,qBAAmBC,GAAI,uBACnD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,iKAE+B,UAAC,KAAD,uBAF/B,IAEwE,KACtE,UAAC,KAAD,qBAHF,QAG2C,UAAC,KAAD,sBAH3C,OAMFC,IACE,kKAEsC,UAAC,KAAD,mBAFtC,IAE2E,KACzE,UAAC,KAAD,qBAHF,SAG4C,UAAC,KAAD,oBAH5C,YASN,UAAC,KAAD,UAAO0W,EAAMoD,KAAK+B,OAAOnc,SAEzB,iBAAKD,UAAU,gBAAf,UACE,kBAAK4B,MAAM,6BAA6Bf,QAAQ,iBAAiBH,MAAM,OAAvE,WACE,kBACEuB,KAAK,UACLD,EAAE,gOAEJ,kBACEC,KAAK,UACLD,EAAE,6JACFhC,UAAU,2BACV4F,QAAS,kBAAMqW,EAAS,OAAf,EACT/W,aAAc,kBAAM2c,GAAa,EAAnB,KAGhB,kBACE5f,KAAK,UACLD,EAAE,qKACFhC,UAAU,2BACV4F,QAAS,kBAAMqW,EAAS,QAAf,EACT/W,aAAc,kBAAM2c,EAAY,EAAlB,KAEhB,kBACE5f,KAAK,UACLD,EAAE,gGACFhC,UAAU,2BACV4F,QAAS,kBAAMqW,EAAS,SAAf,EACT/W,aAAc,kBAAM2c,EAAY,EAAlB,KAGhB,kBACE5f,KAAK,UACLD,EAAE,yIACFhC,WAAWoF,EAAAA,GAAAA,GAAK,yBAAD,mCAAuD1F,YAK5E,kBAAKM,WAAWoF,EAAAA,GAAAA,GAAK,UAArB,WACE,kBACEpF,WAAWoF,EAAAA,GAAAA,GACT0c,EADa,UAEVA,EAFU,oBAGVA,EAHU,eAGSC,EAAAA,GAAAA,IAAiB9K,EAAMoD,KAAKG,KAAK6E,QAJ3D,WAOE,mBAAMrf,UAAU,gBAAhB,WACE,UAACgiB,GAAA,EAAD,IADF,KACwB,UAACC,GAAA,EAAD,IADxB,KAC0C,UAACA,GAAA,EAAD,QAE1C,kBAAMjiB,UAAU,eAAhB,SAAgCiX,EAAMoD,KAAKG,KAAK6E,WAElD,kBACErf,WAAWoF,EAAAA,GAAAA,GACT0c,EADa,UAEVA,EAFU,qBAGVA,EAHU,eAGSC,EAAAA,GAAAA,IAAiB9K,EAAMoD,KAAKG,KAAK8E,SAJ3D,WAOE,mBAAMtf,UAAU,gBAAhB,WACE,UAACiiB,GAAA,EAAD,IADF,KACoB,UAACA,GAAA,EAAD,IADpB,KACsC,UAACC,GAAA,EAAD,QAEtC,kBAAMliB,UAAU,eAAhB,SAAgCiX,EAAMoD,KAAKG,KAAK8E,gBAKzD,E,6BC5GY6C,GAAsB,SAAC,GAAwD,IAAtDlL,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KAC1D7I,GAAc1G,EAAAA,EAAAA,KAAd0G,UACA0O,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAC7T,GAChB0T,EAAe,CACbzB,KAAM,CAAEpa,MAAOmI,IAElB,EAOD,OAJA8T,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAK+H,SACnC,KAGC,mCACE,UAACxG,GAAD,CAAenU,MAAO,CAAEnH,GAAI,mBAAoBC,GAAI,oBACpD,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IAAI,+FACJC,IAAI,oGAIR,UAAC,KAAD,CAAMqK,OAAQyC,EAAU,OAAQ,QAASjF,MAAM,MAA/C,UACE,UAAC/B,GAAA,EAAD,CAAeG,UAAWyQ,EAAMoD,KAAKG,KAAMxa,UAAU,YAAYsG,KAAM,SAGzE,UAAC,KAAD,CAAOtG,UAAU,4BAA4B+O,MAAI,EAAjD,SACGkI,EAAMoD,KAAK+H,QAAQlhB,KAAI,SAACkH,GACvB,OACE,UAAC,MAAD,CACExC,QAAS,kBAAMqW,EAAS7T,EAAf,EACTpI,UAAU,kBACViG,SAAUiQ,EAAKmM,MAAQtG,EAHzB,UAME,UAACuG,GAAD,CAAala,MAAOA,KAFfA,EAKV,WAKV,EAMM,SAASka,GAAT,GAA4D,IAArCla,EAAoC,EAApCA,MAAUsH,GAA0B,cAChE,OACE,iCAAK9N,MAAM,6BAA6Bf,QAAQ,qBAAwB6O,GAAxE,cACE,kBACEzN,KAAMmG,EACNpG,EAAE,kiCAIT,C,wCC3CM,SAASugB,GAAT,GAA6F,IAApEjU,EAAmE,EAAnEA,SAAUlH,EAAyD,EAAzDA,KAAMob,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,SAAUziB,EAAiC,EAAjCA,UAChE,OACE,kBAAKA,WAAWoF,EAAAA,GAAAA,GAAK,UAAWpF,GAAhC,WACE,UAAC,MAAD,CAAQqF,GAAIiJ,EAAUhI,KAAK,QAAQtG,UAAU,qBAC7C,mBAAMA,UAAU,gBAAhB,UACGoH,EADH,IACUqb,IAAY,UAACzV,GAAA,EAAD,CAAmBlL,MAAO,CAAEsG,MAAO,oBAEzD,kBAAMpI,UAAU,kBAAhB,SAAmCwiB,MAGxC,CAqBM,SAASE,GAAT,GAUS,IATdpU,EASa,EATbA,SACAlH,EAQa,EARbA,KACAob,EAOa,EAPbA,OACAC,EAMa,EANbA,SACAziB,EAKa,EALbA,UACA2K,EAIa,EAJbA,SACAgY,EAGa,EAHbA,OACAC,EAEa,EAFbA,UACA3c,EACa,EADbA,SAEA,OACE,kBAAKjG,WAAWoF,EAAAA,GAAAA,GAAK,QAASpF,GAA9B,WACE,UAAC,GAAD,CAAesO,SAAUA,EAAUlH,KAAMA,EAAMob,OAAQA,EAAQC,SAAUA,KACzE,kBAAMziB,UAAU,cAAhB,SAA+B2K,KAC/B,kBAAK3K,UAAU,iBAAf,WACE,UAAC,MAAD,CAAQ6iB,OAAK,EAACljB,MAAM,UAACmjB,GAAA,EAAD,IAAgBld,QAAS+c,EAAQ1c,SAAUA,EAA/D,UACE,UAAC,MAAD,CAAW3F,GAAG,SAASC,GAAG,YAE5B,UAAC,MAAD,CAAQsiB,OAAK,EAACljB,MAAM,UAACojB,GAAA,EAAD,IAAmBnd,QAASgd,EAAW3c,SAAUA,EAArE,UACE,UAAC,MAAD,CAAW3F,GAAG,eAAYC,GAAG,mBAKtC,CC9EM,IAAMyiB,GAAqB,SAAC,GAAwD,IAAtD/L,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KACzD6F,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAOyc,OAAOzc,KAEzB,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAKoB,SACnC,KAGC,mCACE,UAACG,GAAD,CAAenU,MAAO,CAAEnH,GAAI,qBAAmBC,GAAI,qBACnD,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,sFACkD,0CADlD,sDAKFC,IACE,mFAC+C,uCAD/C,kDAQN,UAACmiB,GAAD,CACEpU,SAAS,IACTlH,KAAK,MACLob,OAAO,eACPC,UAAQ,EACRE,OAAQ,WAAQ,EAChBC,UAAW,WAAQ,EACnB3c,UAAQ,EAPV,SASGgR,EAAMoD,KAAKG,KAAKtQ,QAGnB,UAAC,KAAD,CAAOlK,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKoB,QAAQva,KAAI,SAACkb,GACvB,OACE,WAAC,MAAD,CAEExW,QAAS,kBAAMqW,EAASG,EAAf,EACT9V,KAAK,QACLL,SAAU8V,GAAa7F,EAAKmG,MAC5B5c,KAAK,UACL8O,MAAM,QANR,UAQG6N,EARH,uBACiBA,GAUpB,WAKV,E,wBC/DY6G,GAA4B,SAAC,GAAiE,IAAD,EAA9DhM,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBAAgB5F,EAAgC,EAAhCA,KAClEgN,GADkG,EAA1BtV,SAC5D1E,EAAAA,GAAAA,GAAa,EAAG,CAAEC,IAAK,EAAG0I,SAAU,IAAKxJ,SAAU,IAAKiV,OAAQ,KAC1EvB,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAK8I,OACnC,KAGC,mCACE,UAACvH,GAAD,CAAenU,MAAO,CAAEnH,GAAI,yBAA0BC,GAAI,oBAC1D,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,8EAEE,mBAFF,kEAMFC,IACE,2EAEE,mBAFF,mDAQN,UAAC,kBAAD,WACE,UAAC,KAAD,CAAOP,UAAU,kBAAjB,SACGiX,EAAMoD,KAAK8I,MAAMjiB,KAAI,SAACiG,GACrB,OACE,WAAC,KAAD,CAAOnH,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAAC,MAAD,CAA0B6C,OAAQA,EAAlC,UACE,UAACqE,GAAA,EAAD,CAAW9K,MAAOwiB,EAAlB,UACE,UAAC,MAAD,CAAW7d,GAAI8B,EAAQS,UAAW,WAGtC,UAAC,MAAD,CACE2G,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBAAMqW,EAAS9U,EAAf,EALX,UAOE,UAAC,MAAD,CAAW7G,GAAG,uBAAiBC,GAAG,yBAbuB4G,EAiBhE,SAIL,UAAC,KAAD,CAAOnH,UAAU,mBAAjB,UACE,UAAC,kBAAD,WACE,WAACojB,GAAA,EAAD,YACE,UAAC,MAAD,CAA0Bjc,OAAQ8P,EAAMoD,KAAKgJ,KAA7C,UACE,UAAC,MAAD,CAAWhe,GAAI4R,EAAMoD,KAAKgJ,KAAK,GAAIzb,UAAW,SAEhD,UAAC,MAAD,CAA0BT,OAAQ8P,EAAMoD,KAAKgJ,KAA7C,UACE,UAAC,MAAD,CAAWhe,IAAI,UAAA4R,EAAMoD,KAAKgJ,YAAX,eAAkB,KAAMpM,EAAMoD,KAAKgJ,KAAK,GAAIzb,UAAW,iBAOnF,E,YC1EY0b,GAAmB,SAAC,GAAmD,IAAjDxH,EAAgD,EAAhDA,eAAgB5F,EAAgC,EAAhCA,KAAMtI,EAA0B,EAA1BA,QAC/CmO,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcyB,OAAOsG,KAAK3V,IACpC,KAGC,mCACE,UAACgO,GAAD,CAAenU,MAAO,CAAEnH,GAAI,2BAAyBC,GAAI,sBACzD,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,mJAKFC,IAAI,8GAIR,UAAC,KAAD,CAAOP,UAAU,kBAAkB+O,MAAI,EAAvC,UACGyK,EAAAA,GAAAA,IAAY5L,GAAS1M,KAAI,SAACiN,EAAQpM,EAAOmb,GACxC,OACE,kBAAqBld,UAAU,cAA/B,WACE,UAAC4c,GAAA,EAAD,CACEjd,MAAM,UAAC6jB,GAAA,EAAD,IACNld,KAAM,GACNtG,WAAWoF,EAAAA,GAAAA,GAAKrD,GAASmb,EAAI3b,OAAS,GAAK,2BAE7C,UAAC,MAAD,CACE5B,MAAM,UAAC,MAAD,CAAQ0F,GAAI8I,EAAOG,SAAUhI,KAAK,UACxCV,QAAS,kBAAMqW,EAAS9N,EAAO9I,GAAtB,EACT5F,KAAK,UACL+c,QAAST,EACT9V,SAAUiQ,EAAKmG,MALjB,SAOGlO,EAAO/G,SAbF+G,EAAO9I,GAiBpB,WAKV,E,WCzDYoe,GAAqB,SAAC,GAAiE,IAA/DxM,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBAAgB5F,EAAgC,EAAhCA,KAC3DtO,GAD2F,EAA1BgG,SACrD1E,EAAAA,GAAAA,GAAa,EAAG,CAAE2I,SAAU,IAAKxJ,SAAU,OACrD0T,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAKoB,QAAS,YAC5C,KAGC,mCACE,UAACG,GAAD,CAAenU,MAAO,CAAEnH,GAAI,4BAA6BC,GAAI,qBAC7D,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,uGAEE,mBAFF,0EAMFC,IACE,4GAEE,mBAFF,uEASN,UAAC,KAAD,CAAOP,UAAU,kBAAjB,UACE,UAAC4I,GAAA,EAAD,CAAaC,eAAgBoO,EAAMoD,KAAKG,KAAM/X,cAAY,EAACmF,UAAW,SAGxE,iBAAK5H,UAAU,aAAf,SACGiX,EAAMoD,KAAKoB,QAAQva,KAAI,SAAC0L,GAAD,OACtB,kBAAK5M,UAAU,oBAAf,WACE,UAAC,MAAD,CAAWS,QAASmM,EAAMnM,QAASC,MAAOkH,EAAW5H,UAAU,eAE/D,UAAC,KAAD,CAAOA,UAAU,kBAAjB,UACE,UAAC,MAAD,CACEuO,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBAAMqW,EAASrP,EAAMwB,SAArB,EALX,UAOE,UAAC,MAAD,CAAW9N,GAAG,aAAaC,GAAG,iBAXIqM,EAAMwB,SADxB,WAqBjC,EC7DYsV,GAAuB,SAAC,GAAiE,IAA/DzM,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBAAgB5F,EAAgC,EAAhCA,KAC3D7I,GAD2F,EAA1BO,SACnDjH,EAAAA,EAAAA,KAAd0G,WACA0O,GAAcC,EAAAA,GAAAA,KAAdD,UACFnU,GAAYsB,EAAAA,GAAAA,GAAa,EAAG,CAAE2I,SAAU,IAAKxJ,SAAU,MAS7D,OANA6T,EAAAA,GAAAA,IAAQ,WACNJ,EAAe,CACbzB,KAAM,CAAEpa,MAAOub,GAAcvE,EAAMoD,KAAKsJ,WAAY,QAEvD,KAGC,mCACE,UAAC/H,GAAD,CAAenU,MAAO,CAAEnH,GAAI,mBAAoBC,GAAI,4BACpD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IAAI,kGACJC,IAAI,mHAIR,UAAC,KAAD,CAAOP,UAAU,kBAAjB,UACE,UAAC,KAAD,CAAM4K,OAAQyC,EAAU,UAAW,aAAcjF,MAAM,SAAvD,SACG6O,EAAMoD,KAAKuJ,UAAU1Z,UAI1B,UAAC,KAAD,CAAOlK,UAAU,yBAAjB,SACGiX,EAAMoD,KAAKsJ,WAAWziB,KAAI,SAAC2iB,EAA8B9hB,GACxD,OACE,WAAC,KAAD,CAAOuC,UAAU,WAAjB,WACE,UAAC,MAAD,CAA0B6C,OAAQ0c,EAAUxe,GAA5C,UACE,UAACgB,GAAA,EAAD,CACEC,KAAMsB,EACNrB,aAAwB,IAAVxE,EAAc,MAAQ,OACpCyE,UAAWqd,OAGf,UAAC,MAAD,CACEtV,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBACPkW,EAAe,CACbzB,KAAM,CAAEpa,MAAO4jB,EAAUxe,KAFpB,EALX,UAWE,UAAC,MAAD,CAAW/E,GAAG,aAAaC,GAAG,eAnBDsjB,EAAUxe,GAuB9C,QAIR,E,mCCtDYye,GAAwB,SAAC,GAAiD,IAA/C7M,EAA8C,EAA9CA,MAAO6E,EAAuC,EAAvCA,eAAgB5F,EAAuB,EAAvBA,KACvDtO,GAAYsB,EAAAA,GAAAA,GAAa,EAAG,CAAEC,IAAK,EAAG0I,SAAU,IAAKxJ,SAAU,IAAKiV,OAAQ,IAC1EvB,GAAcC,EAAAA,GAAAA,KAAdD,UACA1O,GAAc1G,EAAAA,EAAAA,KAAd0G,UAEF4O,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAK0J,SAAU,MAC7C,KAGC,mCACE,UAACnI,GAAD,CAAenU,MAAO,CAAEnH,GAAI,oBAAqBC,GAAI,kBACrD,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,GAAG,yFACHC,GAAG,gGAIP,UAAC,KAAD,CAAMqK,OAAQyC,EAAU,WAAY,YAAajF,MAAM,SAAvD,SACG6O,EAAMoD,KAAK9R,SAASA,YAGvB,WAAC,KAAD,CAAOvI,UAAU,kBAAjB,WACE,UAAC,MAAD,CAAQqF,GAAG,IAAIiB,KAAK,UAAW,KAC/B,WAACsP,GAAA,EAAD,CAAcC,QAAM,EAACvP,KAAK,QAA1B,UACG2Q,EAAMoD,KAAK0F,QACV,UAAC,MAAD,CAAWxf,GAAG,MAAMD,GAAG,SAEvB,iCACE,UAAC,MAAD,CAAWC,GAAG,KAAKD,GAAG,aAEvB,KACH,UAACsc,GAAA,EAAD,CACEtW,KAAK,QACL3G,KAAMsX,EAAMoD,KAAK0F,QAAS,UAACiE,GAAA,EAAD,KAA+B,UAACC,GAAA,EAAD,aAK/D,UAAC,KAAD,CAAaxV,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,GAAG,uDACHC,GAAG,6CAIP,UAAC,kBAAD,WACE,UAAC,KAAD,CAAOP,UAAU,kBAAjB,SACGiX,EAAMoD,KAAK0J,SAAS7iB,KAAI,SAACuJ,GACxB,OACE,WAAC,KAAD,CAAOzK,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAACkG,GAAA,EAAD,CAAaC,QAASA,EAAS/J,MAAOkH,KAEtC,UAAC,MAAD,CACE2G,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBAAMqW,EAASxR,EAAQpF,GAAvB,EALX,UAOE,UAAC,MAAD,CAAW/E,GAAG,aAAaC,GAAG,eAV2BkK,EAAQpF,GAcxE,aAMZ,E,YCpFY6e,GAAgB,SAAC,GAAiE,IAA/DjN,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBACpCC,GADoF,EAAhC7F,KAAgC,EAA1BtI,SAC5CoO,EAAAA,GAAAA,KAAdD,WAEFoI,EAAe,SAAClkB,GACpB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACNiI,EAAa3I,GAAcvE,EAAMoD,KAAKU,MAAO,QAC9C,KAGC,mCACE,UAACa,GAAD,CAAenU,MAAO,CAAEnH,GAAI,qBAAgBC,GAAI,iBAChD,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,8CACU,mDADV,2GAKFC,IACE,uDACmB,2CADnB,0FAQN,UAAC,KAAD,CAAOP,UAAU,kBAAkB+O,MAAI,EAAvC,SACGkI,EAAMoD,KAAKoB,QAAQva,KAAI,SAACkb,GAAD,OACtB,UAAClP,GAAA,EAAD,CAAiB7H,GAAI+W,EAAqBnc,MAAOmc,GAAfA,EADZ,OAK1B,UAAC,KAAD,CAAa3N,WAAS,EAAtB,UACE,UAAC,MAAD,CAAWnO,GAAG,gDAA0CC,GAAG,qCAG7D,UAAC,KAAD,CAAOP,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKU,MAAM7Z,KAAI,SAACsZ,EAAgBzY,GAAjB,OACpB,UAAC,MAAD,CAAiCkE,SAAU8V,EAAWnW,QAAS,kBAAMue,EAAa3J,EAAKtQ,KAAxB,EAA/D,UACE,UAAC,KAAD,CAAMU,OAAQ0R,EAAAA,GAAQva,GAAQ+I,aAAW,EAAzC,SACG0P,EAAKtQ,QAFcsQ,EAAKnV,GADT,WAW/B,E,wBC5DY+e,GAAqB,SAAC,GAAwD,IAAtDnN,EAAqD,EAArDA,MAAc6E,GAAuC,EAA9CpY,MAA8C,EAAvCoY,gBAAgB5F,EAAuB,EAAvBA,KACzD6F,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAc,CAAC,IAAK,IAAK,IAAK,MACxC,KAGC,mCACE,UAACI,GAAD,CAAenU,MAAO,CAAEnH,GAAI,mBAAoBC,GAAI,mBACpD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,6JAKFC,IACE,+IAQN,WAAC,KAAD,CAAOP,UAAU,kBAAjB,WACE,UAACiK,GAAA,EAAD,CACExK,KAAK,WACLyK,KAAM+M,EAAMoD,KAAKgK,QAAQC,KAAKpa,KAC9BC,WAAY8M,EAAMoD,KAAKgK,QAAQC,KAAKna,cAGtC,UAACF,GAAA,EAAD,CACExK,KAAK,WACLyK,KAAM+M,EAAMoD,KAAKgK,QAAQE,IAAIra,KAC7BC,WAAY8M,EAAMoD,KAAKgK,QAAQE,IAAIpa,iBAIvC,WAAC,KAAD,CAAOnK,UAAU,WAAjB,WACE,WAAC,KAAD,CAAOA,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAACmF,GAAA,EAAD,CAAWC,MAAOuN,EAAMoD,KAAK1D,OAAO,GAAIhN,eAAa,EAACE,YAAY,WAClE,UAACJ,GAAA,EAAD,CAAWC,MAAOuN,EAAMoD,KAAK1D,OAAO,GAAI9M,YAAY,aAAaC,YAAY,WAC7E,UAACL,GAAA,EAAD,CAAWC,MAAOuN,EAAMoD,KAAK1D,OAAO,GAAI/M,eAAa,EAACE,YAAY,mBAEpE,kBAAK9J,UAAU,kBAAf,WACE,UAAC,MAAD,CACEuO,MAAM,SACNjI,KAAK,QACL7G,KAAK,UACLqC,MAAO,CAAE0iB,WAAY,QAASpc,MAAO,SACrCxC,QAAS,kBAAMqW,EAAS,IAAf,EACThW,SAAU8V,GAAa7F,EAAKmG,MAN9B,gBAUA,UAAC,MAAD,CACE9N,MAAM,SACNjI,KAAK,QACL7G,KAAK,UACLqC,MAAO,CAAE0iB,WAAY,aAAcpc,MAAO,SAC1CxC,QAAS,kBAAMqW,EAAS,IAAf,EACThW,SAAU8V,GAAa7F,EAAKmG,MAN9B,mBAWF,kBAAKrc,UAAU,kBAAf,WACE,UAAC,MAAD,CACEuO,MAAM,SACNjI,KAAK,QACL7G,KAAK,UACLqC,MAAO,CAAE0iB,WAAY,aAAcpc,MAAO,SAC1CxC,QAAS,kBAAMqW,EAAS,IAAf,EACThW,SAAU8V,GAAa7F,EAAKmG,MAN9B,gBAUA,UAAC,MAAD,CACE9N,MAAM,SACNjI,KAAK,QACL7G,KAAK,UACLqC,MAAO,CAAE0iB,WAAY,OAAQpc,MAAO,SACpCxC,QAAS,kBAAMqW,EAAS,IAAf,EACThW,SAAU8V,GAAa7F,EAAKmG,MAN9B,mBAWF,WAAC,KAAD,CAAOrc,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAACmF,GAAA,EAAD,CAAWC,MAAOuN,EAAMoD,KAAK1D,OAAO,GAAIhN,eAAa,EAACE,YAAY,gBAClE,UAACJ,GAAA,EAAD,CAAWC,MAAOuN,EAAMoD,KAAK1D,OAAO,GAAI9M,YAAY,OAAOC,YAAY,gBACvE,UAACL,GAAA,EAAD,CAAWC,MAAOuN,EAAMoD,KAAK1D,OAAO,GAAI/M,eAAa,EAACE,YAAY,iBAK3E,EC3GY2a,GAA0B,SAAC,GAAiD,IAA/CxN,EAA8C,EAA9CA,MAAO6E,EAAuC,EAAvCA,eAAgB5F,EAAuB,EAAvBA,KACvD7I,GAAc1G,EAAAA,EAAAA,KAAd0G,UACA0O,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAACla,GAChB+Z,EAAe,CACbzB,KAAM,CAAEpa,MAAOyc,OAAO3a,KAEzB,EAOD,OAJAma,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAc,CAAC,EAAG,EAAG,IAC/B,KAGC,mCACE,UAACI,GAAD,CAAenU,MAAO,CAAEnH,GAAI,cAAeC,GAAI,gBAC/C,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAM4K,OAAQyC,EAAU,WAAY,YAAajF,MAAM,SAAvD,SACG6O,EAAMoD,KAAKG,KAAKjS,YAGnB,WAAC,KAAD,CAAOvI,UAAU,kBAAjB,WACE,UAAC,MAAD,CAAmB4F,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAU8V,GAAa7F,EAAKmG,MAA3E,UACE,UAAC,KAAD,CAAMzR,OAAO,IAAIxC,MAAM,MAAvB,SACG6O,EAAMoD,KAAKG,KAAKiB,QAAQ,QAI7B,UAAC,MAAD,CAAmB7V,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAU8V,GAAa7F,EAAKmG,MAA3E,UACE,UAAC,KAAD,CAAMzR,OAAO,IAAIxC,MAAM,SAAvB,SACG6O,EAAMoD,KAAKG,KAAKiB,QAAQ,QAI7B,UAAC,MAAD,CAAmB7V,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAU8V,GAAa7F,EAAKmG,MAA3E,UACE,UAAC,KAAD,CAAMzR,OAAO,IAAIxC,MAAM,OAAvB,SACG6O,EAAMoD,KAAKG,KAAKiB,QAAQ,eAOtC,EC1CYiJ,GAAuB,SAAC,GAAiD,IAA/CzN,EAA8C,EAA9CA,MAAO6E,EAAuC,EAAvCA,eAAgB5F,EAAuB,EAAvBA,KACpD7I,GAAc1G,EAAAA,EAAAA,KAAd0G,UACA0O,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAACla,GAChB+Z,EAAe,CACbzB,KAAM,CAAEpa,MAAOyc,OAAO3a,KAEzB,EAOD,OAJAma,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAc,CAAC,EAAG,IAC5B,KAGC,mCACE,UAACI,GAAD,CAAenU,MAAO,CAAEnH,GAAI,kBAAmBC,GAAI,oBACnD,UAAC,KAAD,CAAiBd,KAAK,SAAtB,UACE,UAAC,MAAD,CAAWa,GAAG,kCAA+BC,GAAG,oCAElD,UAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,UACE,WAAC,KAAD,CAAOA,UAAU,kBAAjB,WACE,UAAC,MAAD,CAAmB4F,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAU8V,GAAa7F,EAAKmG,MAA3E,UACE,UAAC,KAAD,CAAMzR,OAAQyC,EAAU,OAAQ,QAASjF,MAAM,MAA/C,SACG6O,EAAMoD,KAAKG,KAAKiB,QAAQ,QAI7B,UAAC,MAAD,CAAmB7V,QAAS,kBAAMqW,EAAS,EAAf,EAAmBhW,SAAU8V,GAAa7F,EAAKmG,MAA3E,UACE,UAAC,KAAD,CAAMzR,OAAQyC,EAAU,SAAU,QAASjF,MAAM,OAAjD,SACG6O,EAAMoD,KAAKG,KAAKiB,QAAQ,cAOtC,E,mCCpCYkJ,GAA6B,SAAC,GAAiE,IAA/D1N,EAA8D,EAA9DA,MAAc6E,GAAgD,EAAvDpY,MAAuD,EAAhDoY,gBACjDC,GADiG,EAAhC7F,KAAgC,EAA1BtI,SACzDoO,EAAAA,GAAAA,KAAdD,WAEFE,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAASS,OAAOlB,GAAcvE,EAAMoD,KAAKuK,QAC1C,KAGC,mCACE,UAAChJ,GAAD,CAAenU,MAAO,CAAEnH,GAAI,kCAA0BC,GAAI,0BAC1D,WAAC,KAAD,CAAO+D,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,WACE,UAAC,KAAD,CAAayO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,iHAEE,mBAFF,iCAMFC,IACE,sGAEE,mBAFF,oCASN,WAAC,KAAD,CAAOP,UAAU,kBAAjB,WACE,UAAC,MAAD,CAAYL,MAAM,UAACklB,GAAA,EAAD,IAAeve,KAAK,UAAW,KACjD,UAACsP,GAAA,EAAD,CAAcC,QAAM,EAApB,UACE,UAAC,KAAD,CAAO7V,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKyK,WAAW5jB,KAAI,SAAC6jB,EAAsBhjB,GAChD,OACE,8BACE,UAACijB,GAAA,EAAD,CAAU3f,GAAIqX,OAAOzF,EAAMoD,KAAK4K,MAAMljB,OACtC,UAAC,MAAD,UAAgBgjB,EAAU3d,SAG/B,YAKP,UAAC,KAAD,CAAaqH,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IAAI,wHACJC,IAAI,iHAIR,UAAC,KAAD,CAAOP,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKuK,MAAM1jB,KAAI,SAACgkB,GACrB,OACE,UAAC,MAAD,CAEEtf,QAAS,kBAAMqW,EAASS,OAAOwI,GAAtB,EACTjf,SAAU8V,EAHZ,UAKE,UAACoJ,GAAA,EAAD,CAAU9f,GAAIqX,OAAOwI,GAASxkB,MAAO,MALvC,eACewkB,GAOlB,WAKV,E,WC5EYE,GAAiB,SAAC,GAAiD,IAA/CnO,EAA8C,EAA9CA,MAAO6E,EAAuC,EAAvCA,eAAgB5F,EAAuB,EAAvBA,KAC9C6F,GAAcC,EAAAA,GAAAA,KAAdD,UACFnU,GAAYsB,EAAAA,GAAAA,GAAa,EAAG,CAAE2I,SAAU,IAAKxJ,SAAU,OAG7D6T,EAAAA,GAAAA,IAAQ,WACNJ,EAAe,CACbzB,KAAM,CAAEpa,MAAOub,GAAcvE,EAAMoD,KAAKsJ,WAAY,QAEvD,IAED,IAAM0B,GAAwBpR,EAAAA,EAAAA,UAAQ,WACpC,IAAMqR,EAAoC,CAAC,EAO3C,OANArO,EAAMoD,KAAKkL,SAASjL,SAAQ,SAACkL,GAC3BF,EAAeE,IAAS,CACzB,IACDvO,EAAMoD,KAAKoL,SAASnL,SAAQ,SAACkL,GAC3BF,EAAeE,IAAS,CACzB,IACM,CAAEngB,GAAI,IAAKiJ,SAAU,IAAKlH,KAAM,MAAOke,eAAAA,EAAgBjJ,OAAO,EAAOqJ,UAAW,EACxF,GAAE,CAACzO,EAAMoD,OAEV,OACE,mCACE,UAACuB,GAAD,CAAenU,MAAO,CAAEnH,GAAI,eAAgBC,GAAI,gBAChD,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,GAAG,8EACHC,GAAG,uFAIP,UAAC,KAAD,CAAOP,UAAU,kBAAjB,UACE,UAAC2lB,GAAA,EAAD,CAAcxX,OAAQkX,EAAWO,WAAY,QAG/C,UAAC,KAAD,CAAO5lB,UAAU,yBAAjB,SACGiX,EAAMoD,KAAKsJ,WAAWziB,KAAI,SAAC2iB,GAC1B,OACE,WAAC,KAAD,CAAOvf,UAAU,WAAjB,WACE,UAAC+B,GAAA,EAAD,CAAeC,KAAMsB,EAAWpB,UAAWqd,KAE3C,UAAC,MAAD,CACEtV,MAAM,QACN9O,KAAK,UACLwG,SAAUiQ,EAAKmG,MACfG,QAAST,EACTnW,QAAS,kBACPkW,EAAe,CACbzB,KAAM,CAAEpa,MAAO4jB,EAAUxe,KAFpB,EALX,UAWE,UAAC,MAAD,CAAW/E,GAAG,aAAaC,GAAG,eAdDsjB,EAAUxe,GAkB9C,QAIR,EC5DYwgB,GAAgB,SAAC,GAA2C,IAAzC5O,EAAwC,EAAxCA,MAAO6E,EAAiC,EAAjCA,eAC/BlU,GAAYsB,EAAAA,GAAAA,GAAa,EAAG,CAAEC,IAAK,EAAG0I,SAAU,IAAKxJ,SAAU,IAAKiV,OAAQ,IAC1EvB,GAAcC,EAAAA,GAAAA,KAAdD,UACA1O,GAAc1G,EAAAA,EAAAA,KAAd0G,UAEF4O,EAAW,SAAChc,GAChB6b,EAAe,CACbzB,KAAM,CAAEpa,MAAAA,IAEX,EAOD,OAJAic,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAc,EAAC,GAAM,IAC/B,KAGC,mCACE,UAACI,GAAD,CAAenU,MAAO,CAAEnH,GAAI,gBAAcC,GAAI,sBAC9C,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,GAAG,sIAEHC,GAAG,sGAIP,UAAC,KAAD,CAAMqK,OAAQyC,EAAU,WAAY,YAAajF,MAAM,SAAvD,SACG6O,EAAMoD,KAAK9R,SAASA,YAGvB,UAAC,KAAD,CAAOvI,UAAU,kBAAkBsE,UAAU,WAA7C,UACE,UAACkG,GAAA,EAAD,CAAaC,QAASwM,EAAMoD,KAAK5P,QAAS/J,MAAOkH,OAGnD,WAAC,KAAD,CAAO5H,UAAU,kBAAjB,WACE,UAAC,MAAD,CACEsG,KAAK,QACL3G,MAAM,UAAC,MAAD,CAAYA,MAAM,UAACskB,GAAA,EAAD,MACxBre,QAAS,kBAAMqW,EAAS,KAAf,EACThW,SAAU8V,EACVxN,MAAM,QALR,UAOE,UAAC,MAAD,CAAWhO,GAAG,KAAKD,GAAG,cAGxB,UAAC,MAAD,CACEgG,KAAK,QACL3G,MAAM,UAAC,MAAD,CAAYA,MAAM,UAACqkB,GAAA,EAAD,MACxBpe,QAAS,kBAAMqW,EAAS,MAAf,EACThW,SAAU8V,EACVxN,MAAM,QALR,UAOE,UAAC,MAAD,CAAWhO,GAAG,MAAMD,GAAG,eAKhC,EC7DYwlB,GAA0B,SAAC,GAA0D,IAAxD7O,EAAuD,EAAvDA,MAAO6E,EAAgD,EAAhDA,eAAgB5F,EAAgC,EAAhCA,KAAMtI,EAA0B,EAA1BA,QAC7DmO,GAAcC,EAAAA,GAAAA,KAAdD,UAEFE,EAAW,SAAC7N,GAChB0N,EAAe,CACbzB,KAAM,CAAEpa,MAAOmO,IAElB,EAOD,OAJA8N,EAAAA,GAAAA,IAAQ,WACND,EAAST,GAAcvE,EAAMoD,KAAKG,KAAKiB,SACxC,KAGC,mCACE,UAACG,GAAD,CAAenU,MAAO,CAAEnH,GAAI,mBAAoBC,GAAI,qBACpD,UAAC,KAAD,CAAiBd,KAAK,SAAtB,UACE,UAAC,MAAD,CACEa,GAAG,2DACHC,GAAG,6CAGP,WAAC,KAAD,CAAM0K,YAAU,EAAhB,cAAmBgM,EAAMoD,KAAKG,KAAKtQ,KAAnC,QAEA,UAAC,KAAD,CAAO5F,UAAU,WAAWC,MAAM,SAASvE,UAAU,mBAArD,UACE,UAAC,KAAD,CAAOA,UAAU,kBAAjB,SACGiX,EAAMoD,KAAKG,KAAKiB,QAAQva,KAAI,SAACkN,GAC5B,IAAMD,EAASP,EAAQQ,GACvB,OACE,UAAC,MAAD,CAAmBxI,QAAS,kBAAMqW,EAAS7N,EAAf,EAA0BnI,SAAU8V,GAAa7F,EAAKmG,MAAlF,UACE,UAAC,MAAD,CAAYlO,OAAQA,EAAQ4X,UAAQ,KAGzC,UAKV,E,oBCXYC,GAAY,SAAC,GAA+C,IAAD,IAA5CC,EAA4C,EAA5CA,aAAiBvW,GAA2B,cAChEwW,EAAc,oBAClB,CACE,YAAarK,GACb,yBAA0B8I,GAC1B,uBAAwBtH,GACxB,mBAAoBE,GACpB,iBAAkBmB,GAClB,yBAA0BI,GAC1B,yBAA0BK,GAC1B,mBAAoBW,GACpB,mBAAoBM,GACpB,oBAAqBG,GACrB,oBAAqB9D,GACrB,wBAAyBgI,GACzB,oBAAqBC,GACrB,wBAAyBoB,GACzB,iBAAkBrF,GAClB,oBAAqBO,GACrB,iBAAkBM,GAClB,kBAAmBM,GACnB,mBAAoBO,GACpB,kBAAmBa,GACnB,yBAA0BC,GAC1B,gBAAiBK,GACjB,cAAe8B,GACf,iBAAkB3B,GAClB,mBAAoBC,GACpB,oBAAqBI,GACrB,aAAc+B,GACd,aAAc3B,GACd,kBAAmBE,WA9BH,aAClB,EA8BI1U,EAAKuH,MAAM+B,aA/BG,QA+BMgB,GAE1B,OACE,WAAC,IAAD,CAAMmM,WAAS,EAACF,aAAcA,EAA9B,WACE,UAACC,GAAD,UAAoBxW,KACpB,UAAC4J,GAAD,CAAU1L,QAAS8B,EAAK9B,QAASuI,aAAczG,EAAKhM,MAAMT,YAG/D,EC3EYmjB,GAAa,SAAC,GAAgC,IAAD,EAA7BnP,EAA6B,EAA7BA,MACrBoC,EAA8B,iBAAGH,SAAH,IAAGA,QAAH,EAAGA,GAASjC,EAAM+B,aAAlB,QAA2B,CAC7D1Y,GAAI,eACJC,GAAI,cAGN,OAAO,UAAC,MAAD,UAAgB8Y,GACxB,E,YCXM,SAASgN,GAAT,GAAuE,IAA7C3iB,EAA4C,EAA5CA,MAC/B,OAAIA,EAAMT,SAAW,GAEjB,UAAC,KAAD,CAAawL,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,yEAEE,mBAFF,+BAEgC,wCAFhC,OAE0D,4CAF1D,oBAGE,mBAHF,+GAKE,mBALF,8CAMyC,UAACoS,GAAA,EAAD,CAAiBjT,KAAK,WAAtB,eAAqD,IAN9F,uCAOkC,UAACiT,GAAA,EAAD,CAAiBjT,KAAK,WAAtB,eAPlC,qCASE,mBATF,sBAYFc,IACE,2EAEE,mBAFF,+BAG6B,sCAH7B,SAGuD,sCAHvD,qBAIE,mBAJF,gHAOE,mBAPF,+CAQ6C,UAACmS,GAAA,EAAD,CAAiBjT,KAAK,WAAtB,eAExB,IAVrB,sCAWoC,UAACiT,GAAA,EAAD,CAAiBjT,KAAK,WAAtB,eAXpC,oCAaE,mBAbF,gCAsBNiE,EAAMT,UAAYQ,KAAKC,MAAMA,EAAM4iB,MAAQ,IAE3C,UAAC,KAAD,CAAa7X,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,oEAEE,mBAFF,iFAMFC,IACE,6DAEE,mBAFF,+DAYR,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,MAAD,CACEnO,IACE,0GAEE,mBAFF,kCAMFC,IACE,oHAEE,mBAFF,0BAST,C,gBCjEM,SAASgmB,GAAT,GAA2D,IAAD,Q3CyC7B7iB,E2CzCPkK,EAAoC,EAApCA,QAAS4Y,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KACrCvQ,GAAOwQ,EAAAA,EAAAA,GAAQ9Y,EAAS4Y,GAC9B,GAAwCG,EAAAA,EAAAA,I3CuCNjjB,E2CvCkC8iB,EAAM9iB,O3CwChET,SAAW,IAAMS,GAEvBA,EAAMT,UAAYQ,KAAKC,MAAMA,EAAM4iB,MAAQ,IAE3C5iB,EAAMT,UAAYS,EAAM4iB,MAJa,EAMlC,G2C9CClmB,EAAR,EAAQA,KAAMwmB,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,aAGvB5Q,EAAsBC,EAAD,OAAOsQ,QAAP,IAAOA,GAAP,UAAOA,EAAO9iB,aAAd,aAAO,EAAcT,SAE1C,IAAM6Y,E7CFD,SAA0C8K,GAC/C,IAAQvZ,GAAc1G,EAAAA,EAAAA,KAAd0G,UAEFyZ,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAalR,EACbmR,WAAY,cACZC,UAAW,kBAAMN,EAAQ,EAAd,EACXO,eAAgB9Z,EAAU,6BAA8B,gCACxD+Z,aAAc/Z,EACZ,mEACA,2EAIJ,OAAO,SAACga,GACNP,GAAQ,QACNQ,OAAQ,uBACLD,GAEN,CACF,C6ClBwBE,CAAiCX,GAElDX,GACJ,UAAC,KAAD,CACEtmB,MAAM,UAACqX,GAAD,CAAWC,MAAOuP,EAAMvP,QAC9BxP,OACE,mCACE,UAAC,IAAD,CAAQnB,KAAK,QAAQxE,MAAO,CAAEoG,gBAAiB,UAAWsf,cAAe,UAAzE,SACGhB,EAAM9iB,MAAMT,UACL,KACV,UAACmjB,GAAD,CAAYnP,MAAOuP,EAAMvP,WAG7Bd,aAAY,OAAEqQ,QAAF,IAAEA,GAAF,UAAEA,EAAO9iB,aAAT,aAAE,EAAcT,QAC5BxD,KAAK,UAXP,UAaE,UAAC,KAAD,WACE,UAAC2Z,GAAD,CAAmBnC,MAAOuP,EAAMvP,YAKtC,OACE,UAAC,KAAD,CAAgBwP,KAAMA,EAAMgB,MAAK,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,MAAOC,aAAcC,EAAAA,EAAAA,QAAAA,MAA/D,UACE,WAAC,IAAD,CAAcvnB,KAAMA,EAAMwN,QAASA,EAAnC,WAEE,WAAC,KAAD,CACEjO,MAAM,UAACioB,EAAA,EAAD,IACNngB,OAAO,UAACogB,GAAD,CAAqBnkB,MAAO8iB,EAAM9iB,QACzCokB,QAASjB,EACT1Q,aAAY,OAAEqQ,QAAF,IAAEA,GAAF,UAAEA,EAAO9iB,aAAT,aAAE,EAAcT,QAC5BqR,UAAe,OAALkS,QAAK,IAALA,GAAA,UAAAA,EAAO9iB,aAAP,eAAcT,SAAU,EAAI,GAAK,EAC3C8kB,aAAW,EACXtoB,KAAK,QAPP,WASE,UAACJ,GAAA,EAAD,KACA,UAACgnB,GAAD,CAAgB3iB,MAAO8iB,EAAM9iB,YAI/B,UAACsiB,GAAD,CACE/O,MAAOuP,EAAMvP,MACbvT,MAAO8iB,EAAM9iB,MACbkK,QAASA,EACTqY,aAAcA,EACdnK,eAAgBA,EAChB5F,KAAMA,QAKf,CAED,SAAS2R,GAAT,GAA+D,IAAhCnkB,EAA+B,EAA/BA,MAC7B,OAAIA,EAAMT,QAAU,GAAU,UAAC,MAAD,CAAW3C,GAAG,WAAWC,GAAG,aACtDmD,EAAMT,UAAYQ,KAAKC,MAAMA,EAAM4iB,MAAQ,IACtC,UAAC,MAAD,CAAWhmB,GAAG,2BAAwBC,GAAG,oBAC3C,UAAC,MAAD,CAAWD,GAAG,sBAAgBC,GAAG,iBACzC,C,wFCnEM,SAASynB,GAAT,GAAgE,IAAxCzN,EAAuC,EAAvCA,KAAM0N,EAAiC,EAAjCA,WAC3B5a,GAAc1G,EAAAA,EAAAA,KAAd0G,UACR,GAA0B1K,EAAAA,EAAAA,UAAc,IAAxC,gBAAOJ,EAAP,KAAcC,EAAd,KACA,GAAgCG,EAAAA,EAAAA,WAAS,GAAzC,gBAAOulB,EAAP,KAAkBC,EAAlB,KAEA,GAAsC9T,EAAAA,GAAAA,GAAa,CACjDC,SAAU,GACVC,WAAW,EACXC,SAAU,WACRyT,GAAW,WAEN1N,EAAKC,KAAKnV,GAAKtE,KAAK0Z,UAAUlY,KAEjC,EAEH,IAVK6R,EAAR,EAAQA,QAASgU,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,UAmBxB,OANAlpB,EAAAA,EAAAA,YAAU,WACQ,IAAZiV,GACF+T,GAAW,EAEd,GAAE,CAAC/T,KAGF,kBAAKpU,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,GAAG,wGACHC,GAAG,mHAIP,WAAC,KAAD,CAAO+D,UAAU,WAAjB,WACE,UAAC,KAAD,CAAatE,UAAU,mBAAvB,UACE,UAAC,MAAD,CACEM,IACE,kDACW,UAACqS,GAAA,EAAD,0BADX,mIAKFpS,IACE,+CACW,UAACoS,GAAA,EAAD,yBADX,oHAON,UAAC,MAAD,CAAQ/M,QAASwiB,EAAO3oB,KAAK,UAAUwG,SAAUoiB,EAAjD,UACE,UAAC,MAAD,CAAW/nB,GAAG,aAAUC,GAAG,aAG7B,UAAC,KAAD,CAAM+F,KAAK,QAAQsE,OAAQyC,EAAU,UAAW,QAASrN,UAAU,eAAeoI,MAAM,SAAxF,SACGigB,GACC,kCACG9N,EAAKC,KAAKtQ,MACX,kBAAMlK,UAAU,gBAAhB,SAAiCoU,EAAU,EAAIA,EAAU,EAAI,OAG/D,MAGHiU,IAAa,UAAC3pB,GAAA,EAAD,IACbwpB,GACC,UAACI,GAAA,EAAD,CAAWxmB,MAAO,CAAE0iB,WAAY,QAAS9jB,MAAO,QAAS6nB,QAAS,SAChEF,GACF,UAAC,MAAD,CAAe9lB,MAAOA,EAAOC,SAAUA,KAEvC,UAAC,MAAD,CAAeD,MAAO,GAAIC,SAAUgmB,EAAAA,UAK7C,C,8DChFM,SAASC,GAAT,GAAsF,IAAtDlO,EAAqD,EAArDA,KAAM0N,EAA+C,EAA/CA,WAAY/R,EAAmC,EAAnCA,KACvD,OACE,kBAAKlW,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,GAAG,gFACHC,GAAG,8EAIP,WAAC,KAAD,CAAO+D,UAAU,WAAjB,WACE,UAAC,KAAD,CAAatE,UAAU,mBAAvB,UACE,UAAC,MAAD,CACEM,IACE,4FAC+C,UAAC,KAAD,UAAgBia,EAAKS,KAAK9Q,OAAsB,IAD/F,qGAMF3J,IACE,2EACuC,UAAC,KAAD,UAAgBga,EAAKS,KAAK9Q,OADjE,sEAQN,kBAAKlK,UAAU,eAAf,WACE,UAAC,GAAD,CACEsO,SAAU4H,EAAK5H,SACflH,KAAM8O,EAAK9O,KACXob,QAAQ,UAAC,MAAD,CAAWliB,GAAG,mBAAmBC,GAAG,cAC5CP,UAAU,wBAEZ,iBAAKA,UAAU,wBAAf,UACE,UAAC0oB,GAAA,EAAD,OAEF,kBAAK1oB,UAAU,wBAAf,WACE,UAAC2oB,GAAA,EAAD,IADF,KACoB,UAACC,GAAA,EAAD,IADpB,KACwC,UAACC,GAAA,EAAD,QAExC,kBAAK7oB,UAAU,qBAAf,WACE,6BAASkW,EAAK9O,KAAK0hB,gBADrB,KAC8CC,EAAAA,GAAAA,YAAWxO,EAAKS,KAAK9Q,MADnE,aAKF,UAAC,KAAD,CAAOlK,UAAU,kBAAkB+O,MAAI,EAAvC,SACGwL,EAAKQ,MAAM7Z,KAAI,SAACsZ,GAAD,OACd,UAAC,MAAD,CAEE5U,QAAS,kBAAMqiB,GAAW,WAAG1N,EAAKS,KAAK3V,GAAKmV,EAAKnV,KAAM,EAA9C,EACT5F,KAAK,UAHP,SAKG+a,EAAKtQ,MAJDsQ,EAAKnV,GAFE,WAazB,C,4BCzDM,SAAS2jB,GAAT,GAAwF,IAAD,EAAhEzO,EAAgE,EAAhEA,KAAM0N,EAA0D,EAA1DA,WAAY/R,EAA8C,EAA9CA,KAAMmE,EAAwC,EAAxCA,KAAM4O,EAAkC,EAAlCA,aAClDlN,GAAcC,EAAAA,GAAAA,KAAdD,WAER3S,EAAAA,GAAAA,IAAc,WACZ6e,EAAW,CAAEpO,UAAWU,EAAKgB,QAAQ,IACtC,IAED,IAAM2N,GAAW,UAAC3O,EAAKgB,eAAN,QAAiB,IAAIra,KAAI,SAACioB,EAAapnB,GAAd,MAAiC,CACzElC,OACE,kBAAKG,UAAU,oBAAf,WACE,UAAC4Z,GAAA,EAAD,CAAetL,SAAU4H,EAAK5H,SAAUjJ,GAAI8jB,KAC5C,0BAAM7M,EAAAA,GAAQva,QAGlB9B,MAAOkpB,EAPiC,IAS1C,OACE,kBAAKnpB,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,GAAG,4CACHC,GAAG,mDAIP,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAAC,KAAD,CACEmX,QAASyN,EACTjpB,MAAOoa,EAAKR,UACZxZ,SAAU,SAACwZ,GAAD,OAAeoO,EAAW,CAAEpO,UAAAA,GAA5B,KAGZ,UAAC,MAAD,CAAQjU,QAAS,kBAAMqjB,EAAa,CAAE5O,KAAAA,GAArB,EAA8BpU,SAAU8V,GAAa7F,EAAKmG,MAA3E,UACE,UAAC,MAAD,CAAW/b,GAAG,kBAAkBC,GAAG,0BAK5C,CC5CM,SAAS6oB,GAAT,GAA4E,IAA9C7O,EAA6C,EAA7CA,KAAM0N,EAAuC,EAAvCA,WACzC,GAA0BtlB,EAAAA,EAAAA,UAAS,IAAnC,gBAAO1C,EAAP,KAAcopB,EAAd,KACQhc,GAAc1G,EAAAA,EAAAA,KAAd0G,UAER,OACE,kBAAKrN,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,GAAG,gEACHC,GAAG,mEAIP,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAAC,KAAD,CAAatE,UAAU,mBAAvB,UACE,UAAC,MAAD,CACEM,IACE,mJAGE,mBAHF,oBAOFC,IACE,kJAGE,mBAHF,6BAUN,UAAC,KAAD,CAAMqK,OAAQyC,EAAU,SAAU,YAAajF,MAAM,SAArD,SAEGsU,OAAOnC,EAAKC,SAGf,UAAC,KAAD,CACEna,SAAU,SAAC+C,GAAD,OAAOimB,EAASjmB,EAAEE,OAAOrD,MAAzB,EACVqG,KAAK,QACLgH,YAAaD,EAAU,eAAgB,cACvCD,aAAc,kBAAM6a,EAAW,CAAE9M,KAAMlb,IAAS,EAAlC,KAGhB,UAAC,KAAD,WACE,UAAC,MAAD,CACEgG,SAAUhG,EAAMsB,OAAS,EACzBqE,QAAS,kBAAMqiB,EAAW,CAAE9M,KAAMlb,IAAS,EAAlC,EACTR,KAAK,UAHP,UAKE,UAAC,MAAD,CAAWa,GAAG,uBAAuBC,GAAG,6BAMnD,CChEM,SAAS+oB,GAAT,GAA0E,IAA7C/O,EAA4C,EAA5CA,KAAM0N,EAAsC,EAAtCA,WACxC,OACE,kBAAKjoB,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,IACE,yDAEE,mBAFF,2EAMFC,IACE,0DAEE,mBAFF,gEASN,UAACmiB,GAAD,CACEpU,SAAS,IACTlH,KAAK,MACLob,OAAO,eACPC,UAAQ,EACRE,OAAQ,kBAAMsF,EAAW,CAAE7M,WAAW,IAAQ,EAAtC,EACRwH,UAAW,kBAAMqF,EAAW,CAAE7M,WAAW,IAAS,EAAvC,EANb,SAQGb,EAAKC,KAAKtQ,SAIlB,C,2BC3BK1L,GAAgBC,EAAQ,OAOvB,SAAS8qB,GAAT,GAA0E,IAA7ChP,EAA4C,EAA5CA,KAAM0N,EAAsC,EAAtCA,WACxC,GAA0BtlB,EAAAA,EAAAA,UAAc,IAAxC,gBAAOJ,EAAP,KAAcC,EAAd,KACA,GAAgCG,EAAAA,EAAAA,WAAS,GAAzC,gBAAOulB,EAAP,KAAkBC,EAAlB,KACA,GAAiBxpB,EAAAA,GAAAA,IAAe,UAAzBC,GAAP,gBACA,GAA4BC,EAAAA,GAAAA,GAAS,CACnCC,IAAKN,KADP,gBAAOS,EAAP,KAAgBC,EAAhB,MAKAC,EAAAA,EAAAA,YAAU,WACRD,EAASN,OAAOA,EACjB,GAAE,CAACA,IAEJ,OAAsCyV,EAAAA,GAAAA,GAAa,CACjDC,SAAU,GACVC,WAAW,EACXC,SAAU,WACRyT,GAAW,WAEN1N,EAAKC,KAAKnV,GAAKtE,KAAK0Z,UAAUlY,KAEjC,EAEH,IAVK6R,EAAR,EAAQA,QAASgU,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,UAmBxB,OANAlpB,EAAAA,EAAAA,YAAU,WACQ,IAAZiV,GACF+T,GAAW,EAEd,GAAE,CAAC/T,KAGF,kBAAKpU,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,GAAG,+GACHC,GAAG,oFAIP,WAAC,KAAD,CAAO+D,UAAU,WAAjB,WACE,UAAC,KAAD,CAAatE,UAAU,mBAAvB,UACE,UAAC,MAAD,CACEM,IACE,kDACW,6CADX,kCAEE,mBAFF,kGAMFC,IACE,+CACW,4CADX,4BAEE,mBAFF,iGAQN,UAAC,MAAD,CAAQqF,QAASwiB,EAAO3oB,KAAK,UAAUwG,SAAUoiB,EAAjD,UACE,UAAC,MAAD,CAAW/nB,GAAG,aAAUC,GAAG,YAG5B8nB,GAAappB,GACd,kBAAKe,UAAU,oBAAf,UACGqoB,IAAa,kBAAMroB,UAAU,gBAAhB,SAAiCoU,EAAU,EAAIA,EAAU,EAAI,KAE3E,UAACxL,GAAA,EAAD,CACEC,eAAgBwf,EAAY9N,EAAKC,KAAO,CAAEnV,GAAI,YAAagE,YAAakR,EAAKC,KAAKnR,aAClF5G,cAAY,EACZmF,UAAW,MAGZsgB,GACC,UAACI,GAAA,EAAD,CAAWxmB,MAAO,CAAE0iB,WAAY,QAAS9jB,MAAO,QAAS6nB,QAAS,SAChEF,GACF,UAAC,MAAD,CAAe9lB,MAAOA,EAAOC,SAAUA,KAEvC,UAAC,MAAD,CAAeD,MAAO,GAAIC,SAAUgmB,EAAAA,YAK1C,UAAC,MAAD,CAAsBxX,KAAM,CAACuJ,EAAKC,KAAKnV,QAG5C,C,2BC3GM,SAASmkB,GAAT,GAAgD,IAA5B7e,EAA2B,EAA3BA,SACzB,OACE,kBAAK/I,MAAM,6BAA6Bf,QAAQ,iBAAiBb,UAAU,YAA3E,WACE,kBACEgC,EAAE,iXACFC,KAAK,aAEP,2BAAeZ,EAAE,KAAKC,EAAE,KAAKZ,MAAM,MAAMC,OAAO,MAAhD,SACGgK,MAIR,CCID,IAAM8e,GAAMC,OAASC,OAAO,mBAErB,SAASC,GAAT,GAAgE,IAAxCrP,EAAuC,EAAvCA,KAAM0N,EAAiC,EAAjCA,WACnC,GAA0BtlB,EAAAA,EAAAA,UAAS,IAAnC,gBAAO1C,EAAP,KAAcopB,EAAd,KACQhc,GAAc1G,EAAAA,EAAAA,KAAd0G,UAER,OACE,kBAAKrN,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,GAAG,gFACHC,GAAG,mGAIP,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAACklB,GAAD,WACE,kBAAKxpB,UAAU,WAAf,WACE,kBAAKA,UAAU,oBAAf,WACE,UAAC,MAAD,CAAQqF,GAAG,IAAIiB,KAAK,WACpB,kBAAKtG,UAAU,iBAAf,iBAAqC,WAEvC,kBAAKA,UAAU,mBAAf,WACE,iBAAKA,UAAU,oBAAf,UACE,UAAC,MAAD,CAAWM,GAAG,KAAKC,GAAG,YAExB,iBAAKP,UAAU,oBAAf,UACE,UAAC,MAAD,CAAWM,GAAG,aAAUC,GAAG,mBAE7B,iBAAKP,UAAU,oBAAf,UACE,UAAC,MAAD,CAAWM,GAAG,uCAAoCC,GAAG,uCAEvD,kBAAKP,UAAU,sBAAf,WACE,UAAC,MAAD,CAAWM,GAAG,WAAWC,GAAG,aAD9B,IAC6CkpB,OAE7C,iBACEzpB,WAAWoF,EAAAA,GAAAA,GAAK,kDAAkD2I,EAAAA,GAAAA,IAAkB,SADtF,SAGGwM,EAAKC,KAAKtQ,gBAMnB,UAAC,KAAD,CACE7J,SAAU,SAAC+C,GAAD,OAAOimB,EAASjmB,EAAEE,OAAOrD,MAAzB,EACVqG,KAAK,QACLgH,YAAaD,EAAU,eAAgB,cACvCD,aAAc,kBAAM6a,EAAW,CAAE5M,WAAYpb,IAAS,EAAxC,KAGhB,UAAC,MAAD,CAAQ4iB,OAAK,EAACjd,QAAS,kBAAMqiB,EAAW,CAAE5M,WAAYpb,IAAS,EAAxC,EAA+CR,KAAK,UAA3E,UACE,UAAC,MAAD,CAAWa,GAAG,SAASC,GAAG,kBAKnC,C,iDCzDM,SAASspB,GAAT,GAA0E,IAA7CtP,EAA4C,EAA5CA,KAAM0N,EAAsC,EAAtCA,WAChC5a,GAAc1G,EAAAA,EAAAA,KAAd0G,UACR,GAA4B1K,EAAAA,EAAAA,UAAS,IAArC,gBAAOmnB,EAAP,KAAeC,EAAf,KACA,GAA4BpnB,EAAAA,EAAAA,UAAS,IAArC,gBAAOqnB,EAAP,KAAeC,EAAf,KAEA,OACE,kBAAKjqB,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,GAAG,6EACHC,GAAG,yEAIP,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAACklB,GAAD,WACE,kBAAKxpB,UAAU,WAAf,WACE,kBAAKA,UAAU,mBAAf,WACE,qCACA,0CACA,2CAGF,kBAAKA,UAAU,kBAAf,WACE,UAAC,MAAD,CAAQqF,GAAG,IAAIiB,KAAK,WACpB,UAAC4jB,GAAA,EAAD,KACA,UAACC,GAAA,EAAD,KACA,UAACC,GAAA,EAAD,QAGF,iBAAKpqB,UAAU,uBAAf,UACE,UAACqqB,GAAA,EAAD,OAGF,iBAAKrqB,UAAU,qBAAf,UACE,UAACsI,GAAA,EAAD,CAAmBC,SAAUgS,EAAKC,KAAMhS,eAAgB,YAI9D,WAAC,KAAD,CAAOxI,UAAU,kBAAjB,WACE,UAAC,KAAD,CACEK,SAAU,SAAC+C,GAAD,OAAO2mB,EAAU3mB,EAAEE,OAAOrD,MAA1B,EACVqG,KAAK,QACLgH,YAAaD,EAAU,aAAc,eAEvC,UAAC,KAAD,CACEhN,SAAU,SAAC+C,GAAD,OAAO6mB,EAAU7mB,EAAEE,OAAOrD,MAA1B,EACVqG,KAAK,QACLgH,YAAaD,EAAU,aAAc,kBAGzC,UAAC,MAAD,CACEwV,OAAK,EACLjd,QAAS,kBAAMqiB,EAAW,CAAEhN,QAAS,CAAC6O,EAAQE,KAAW,EAAhD,EACT/jB,UAAW6jB,IAAWE,EAHxB,UAKE,UAAC,MAAD,CAAW1pB,GAAG,SAASC,GAAG,kBAKnC,CCvED,IAAMkpB,GAAMC,OAASC,OAAO,mBAOrB,SAASW,GAAT,GAAsF,IAAnD/P,EAAkD,EAAlDA,KAAM0N,EAA4C,EAA5CA,WAC9C,OACE,kBAAKjoB,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CACEhG,GAAG,oFACHC,GAAG,yEAIP,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAACklB,GAAD,WACE,kBAAKxpB,UAAU,WAAf,WACE,kBAAKA,UAAU,oBAAf,WACE,UAAC,MAAD,CAAQqF,GAAG,OACX,kBAAKrF,UAAU,iBAAf,WACE,UAAC,MAAD,CAAWM,GAAG,WAAQC,GAAG,UAD3B,IACuC,WAGzC,kBAAKP,UAAU,mBAAf,WACE,iBAAKA,UAAU,oBAAf,UACE,UAAC,MAAD,CAAWM,GAAG,WAAWC,GAAG,YAE9B,iBAAKP,UAAU,oBAAf,UACE,UAAC,MAAD,CAAWM,GAAG,mBAAgBC,GAAG,qBAEnC,kBAAKP,UAAU,sBAAf,WACE,UAAC,MAAD,CAAWM,GAAG,WAAWC,GAAG,aAD9B,IAC6CkpB,OAE7C,iBAAKzpB,UAAU,oBAAf,UACE,UAAC,MAAD,CAAWqF,GAAIkV,EAAKC,KAAM5S,UAAW,iBAM7C,UAAC,KAAD,WACE,UAAC,MAAD,CACEtH,GAAG,mDACHC,GAAG,iDAIP,UAAC,KAAD,CAAOP,UAAU,kBAAkB+O,MAAI,EAAvC,SACGwL,EAAKM,QAAQ3Z,KAAI,SAACyZ,GAAD,OAChB,UAAC,MAAD,CAEE/U,QAAS,kBAAMqiB,EAAW,CAAEtN,OAAQA,EAAOzQ,OAAQ,EAA1C,EACTzK,KAAK,UACL6G,KAAK,QAJP,SAMGqU,EAAOzQ,MALHyQ,EAAOtV,GAFE,WAc3B,CC5DM,SAASklB,GAAT,GAA0D,IAArChQ,EAAoC,EAApCA,KAAM0N,EAA8B,EAA9BA,WACxB5a,GAAc1G,EAAAA,EAAAA,KAAd0G,UACR,GAA8B1K,EAAAA,EAAAA,UAA2B,CAAC,GAA1D,gBAAOsY,EAAP,KAAgBuP,EAAhB,KAMA,OACE,kBAAKxqB,UAAU,iBAAf,WACE,UAAC,KAAD,CAAOsG,KAAK,WAAZ,UACE,UAAC,MAAD,CAAWhG,GAAG,iCAAiCC,GAAG,oCAGpD,WAAC,KAAD,CAAOP,UAAU,kBAAkBsE,UAAU,WAA7C,WACE,UAAC,KAAD,CAAiB7E,KAAK,OAAtB,UACE,UAAC,MAAD,CACEa,IACE,8HAEE,mBAFF,wDAMFC,IACE,oGAEE,mBAFF,oDASN,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,UAAC,KAAD,CAAOnK,UAAU,WAAjB,SACGiW,EAAKQ,MAAM7Z,KAAI,SAACsZ,GAAU,IAAD,EACxB,OACE,kBAAKxa,UAAU,GAAf,WACE,mBAAOyqB,QAAO,gBAAWjQ,EAAKnV,IAA9B,UACE,UAAC,MAAD,UAAgBmV,EAAKtQ,UAEvB,UAAC,KAAD,CACE7E,GAAE,gBAAWmV,EAAKnV,IAClBiB,KAAK,QACLrG,MAAK,iBAAEgb,QAAF,IAAEA,OAAF,EAAEA,EAAO,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAMnV,WAAlB,QAAyB,GAC9BiI,YAAaD,EAAU,eAAgB,cACvChN,SAAU,SAACqqB,GAAD,OA3CLC,EA2C8BnQ,EAAKnV,GA3CtBpF,EA2C0ByqB,EAAMpnB,OAAOrD,WA1CzEuqB,GAAW,SAACI,GAAD,eAAC,UAAYA,GAAb,eAAiBD,EAAM1qB,GAAvB,IADS,IAAC0qB,EAAa1qB,CA2CR,MATSua,EAAKnV,GAa/B,SAIL,UAAC,MAAD,CACEwd,OAAK,EACLjd,QAAS,kBAAMqiB,EAAW,CAAE3M,aAAcL,IAAW,EAA5C,EACTxb,KAAK,UACLwG,SAAUgX,OAAOsG,KAAKtI,GAAS1Z,OAASgZ,EAAKQ,MAAMxZ,OAJrD,UAME,UAAC,MAAD,CAAWjB,GAAG,SAASC,GAAG,kBAKnC,CCjDM,IAAMsqB,GAAc,SAAC,GAA4D,IAAD,EAAzD5E,EAAyD,EAAzDA,aAAc/P,EAA2C,EAA3CA,KAAM+S,EAAqC,EAArCA,aAChD,GAA4CtC,EAAAA,EAAAA,GAAQ,GAAtCmE,EAAd,EAAQ1qB,KAAmBymB,EAA3B,EAA2BA,aAE3B,GAAwBlkB,EAAAA,EAAAA,UAAsB,CAAC,GAA/C,gBAAO0X,EAAP,KAAa0Q,EAAb,KACQ1d,GAAc1G,EAAAA,EAAAA,KAAd0G,UAEF4a,EAAa,SAAC+C,GAAyC,IAAlBC,EAAiB,wDAC1DF,GAAQ,SAACH,GAAD,eAAC,UAAYA,GAAMI,EAAnB,IACJC,GACFpE,GAEH,EAEKzM,EAAK,UAAGlE,EAAKkE,aAAR,QAAiB,GACtBwK,EvD1CyB,SAC/BxK,EACA/M,GAEA,OAAO+M,EAAMlZ,KAAI,SAACqZ,GAChB,OAAQA,EAAK9a,MACX,IAAK,YACH,MAAO,CACLgI,MAAO4F,EAAU,qBAAmB,kBACpCX,YAAaW,EAAU,eAAgB,sBAG3C,IAAK,uBACH,MAAO,CACL5F,MAAO4F,EAAU,wBAAsB,sBACvCX,YAAaW,EAAU,wBAAyB,4BAGpD,IAAK,oBACH,MAAO,CACL5F,MAAO4F,EAAU,oBAAqB,kBACtCX,YAAaW,EAAU,6BAA2B,yBAGtD,IAAK,iBACH,MAAO,CACL5F,MAAO4F,EAAU,UAAW,WAC5BX,YAAaW,EAAU,4BAA6B,yBAExD,IAAK,QACL,IAAK,kBACH,MAAO,CACL5F,MAAO4F,EAAU,iBAAkB,YACnCX,YAAaW,EAAU,iCAA+B,qCAE1D,IAAK,kBACH,MAAO,CACL5F,MAAO4F,EAAU,gBAAiB,gBAClCX,YAAaW,EAAU,8BAA4B,yBAEvD,IAAK,iBACH,MAAO,CACL5F,MAAO4F,EAAU,YAAa,aAC9BX,YAAaW,EAAU,0BAA2B,yBAEtD,IAAK,aACH,MAAO,CACL5F,MAAO4F,EAAU,mBAAoB,mBACrCX,YAAaW,EAAU,YAAa,WAExC,IAAK,UACH,MAAO,CACL5F,MAAO4F,EAAU,OAAQ,UACzBX,YAAaW,EAAU,qBAAsB,mBAEjD,QACE,MAAO,CAAC,EAEb,GACF,CuDjBe6d,CAAkB9Q,EAAO/M,GACjC8d,EAAyB/Q,EAAM0Q,GAErC,OACE,WAAC,IAAD,CAAM3E,WAAS,EAACF,aAAcA,EAA9B,WACE,UAAC,KAAD,CAAO3f,KAAK,UAAZ,SACG8T,EAAM7Y,OAAS,GACd,UAAC,MAAD,CAAWjB,GAAG,sCAAgCC,GAAG,4BAEjD,UAAC,MAAD,CAAWD,GAAG,qBAAqBC,GAAG,yBAG1C,kBAAKP,UAAU,8BAAf,WACE,UAAC,KAAD,CAAOiD,QAAS6nB,EAAalG,MAAOA,IAEnClZ,QAAO,OAACyf,QAAD,IAACA,OAAD,EAACA,EAAa1rB,QAAS,UAAC2rB,GAAD,CAAShR,MAAOA,EAAO6O,aAAcA,IAE7C,eAAX,OAAXkC,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QAAwB,UAACuoB,GAAD,CAAczN,KAAM4Q,EAAalD,WAAYA,IAE5D,0BAAX,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QACZ,UAAC6qB,GAAD,CAAyB/P,KAAM4Q,EAAalD,WAAYA,IAGnC,uBAAX,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QACZ,UAACgpB,GAAD,CAAsBlO,KAAM4Q,EAAalD,WAAYA,EAAY/R,KAAMA,IAGlD,oBAAX,OAAXiV,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QACZ,UAACoqB,GAAD,CAAmBtP,KAAM4Q,EAAalD,WAAYA,IAG7B,qBAAX,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QACZ,UAAC2pB,GAAD,CAAoB7O,KAAM4Q,EAAalD,WAAYA,IAG9B,qBAAX,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QACZ,UAAC6pB,GAAD,CAAmB/O,KAAM4Q,EAAalD,WAAYA,IAG7B,oBAAX,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QACZ,UAAC8pB,GAAD,CAAmBhP,KAAM4Q,EAAalD,WAAYA,IAG7B,gBAAX,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QAAyB,UAACmqB,GAAD,CAAcrP,KAAM4Q,EAAalD,WAAYA,IAE7D,WAAX,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QAAoB,UAAC8qB,GAAD,CAAWhQ,KAAM4Q,EAAalD,WAAYA,IAErD,aAAX,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa1rB,QACZ,UAACupB,GAAD,CACEzO,KAAM4Q,EACNlD,WAAYA,EACZ/R,KAAMA,EACN+S,aAAcA,EACd5O,KAAMA,SAMjB,EAOD,SAAS+Q,GAAT,GAAyD,IAAtCnC,EAAqC,EAArCA,aAAc7O,EAAuB,EAAvBA,MAM/B,OAJA8B,EAAAA,GAAAA,IAAQ,WACN+M,EAAa,CAAE5O,KAAMF,GAAYC,IAClC,KAEM,yBACR,CCxGM,SAASiR,GAAT,GAA6D,IAAD,IAApCzd,EAAoC,EAApCA,QAAS4Y,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KACvCvQ,GAAOwQ,EAAAA,EAAAA,GAAQ9Y,EAAS4Y,GAC9B,GAA0BG,EAAAA,EAAAA,KAAlBvmB,EAAR,EAAQA,KAEF6oB,E1DZD,SAAmCrC,GACxC,IAAQvZ,GAAc1G,EAAAA,EAAAA,KAAd0G,UAEFyZ,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAalR,EACbmR,WAAY,cACZC,UAAW,kBAAMN,EAAQ,EAAd,EACXO,eAAgB9Z,EAAU,6BAA8B,+BACxD+Z,aAAc/Z,EACZ,mEACA,2EAIJ,OAAO,SAACga,GACNP,GAAQ,QACNQ,OAAQ,gBACLD,GAEN,CACF,C0DRsBiE,CAFrB,EAAc1E,SAIRX,GACJ,UAAC,KAAD,CACEtmB,MAAM,UAAC4rB,GAAA,EAAD,IACN9jB,OAAO,UAAC,MAAD,CAAWnH,GAAG,kCAAkCC,GAAG,qCAC1D4V,aAAY,OAAEqQ,QAAF,IAAEA,GAAF,UAAEA,EAAO9iB,aAAT,aAAE,EAAcT,QAC5BxD,KAAK,UAJP,UAME,UAAC,KAAD,WACO,OAAJyW,QAAI,IAAJA,GAAA,UAAAA,EAAMkE,aAAN,eAAa7Y,QAAS,GACrB,UAAC,MAAD,CACEjB,GAAG,kEACHC,GAAG,qDAGL,UAAC,MAAD,CAAWD,GAAG,wCAAwCC,GAAG,6BAMjE,OACE,UAAC,KAAD,CAAgBkmB,KAAMA,EAAMgB,MAAK,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,MAAOC,aAAcC,EAAAA,EAAAA,QAAAA,QAA/D,UACE,UAAC,IAAD,CAAcvnB,KAAMA,EAAMwN,QAASA,EAAnC,UAEE,UAACid,GAAD,CAAajd,QAASA,EAASqY,aAAcA,EAAcgD,aAAcA,EAAc/S,KAAMA,OAIpG,C,4ECzCM,SAASsV,GAAT,GAA8D,IAAtC/R,EAAqC,EAArCA,QAAS6M,EAA4B,EAA5BA,MACtC,OACE,WAAC,KAAD,CAAOtmB,UAAU,kBAAjB,WACE,UAACyS,GAAA,EAAD,UAAmBgH,IADrB,KACiD,kCAAgB,KAC/D,UAAChH,GAAA,EAAD,CAAkBzS,UAAU,YAA5B,SAAyCsmB,EAAQ7M,MAGtD,CCRM,SAASgS,GAAT,GAAyF,IAA/DxU,EAA8D,EAA9DA,MAAOyU,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,eAC/CjrB,GAAQwI,EAAAA,GAAAA,GAAawiB,EAAcnqB,OAAS,EAAG,CACnD4H,IAAK,EACL0I,SAAU,GACVxJ,SAAU,IACVsjB,eAAAA,IAGF,GAAsB,aAAlB1U,EAAMkF,QAAwB,CAChC,IAAMyP,EAAiC3U,EAAMoD,KAAKoB,QAAQ/B,QAAO,SAAC0C,GAChE,OAAOsP,EAAcG,SAASzP,EAAOhO,SACtC,IAED,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAW9N,GAAG,yBAAyBC,GAAG,6BAD5C,QAGA,iBAAKP,UAAU,6BAAf,SACG4rB,EAAgB1qB,KAAI,SAACjB,GAAD,OACnB,iBAA0BD,UAAU,kCAApC,UACE,UAAC,MAAD,CAAWS,QAASR,EAAMQ,QAASC,MAAOA,EAAOV,UAAU,eADnDC,EAAMmO,SADG,QAQ5B,CAED,IAAM0d,EAA8B7U,EAAMoD,KAAKU,MAAMrB,QAAO,SAAC0C,GAC3D,OAAOsP,EAAcG,SAASzP,EAAO/W,GACtC,IAED,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAW/E,GAAG,oBAAoBC,GAAG,yBADvC,QAGA,iBAAKP,UAAU,6BAAf,SACG8rB,EAAa5qB,KAAI,SAACjB,GAAD,OAChB,iBAAoBD,UAAU,kCAA9B,SACGC,EAAMiK,MADCjK,EAAMoF,GADA,QAQzB,CClDM,SAAS0mB,GAAT,GAA8E,IAA/C9U,EAA8C,EAA9CA,MAAOyU,EAAuC,EAAvCA,cACrCM,EAA0B,CAC9B,EAAG,CAAC/U,EAAMoD,KAAKU,MAAM,GAAG7Q,KAAM+M,EAAMoD,KAAKU,MAAM,GAAG7Q,MAClD,EAAG,CAAC+M,EAAMoD,KAAKU,MAAM,GAAG7Q,KAAM+M,EAAMoD,KAAKU,MAAM,GAAG7Q,MAClD,EAAG,CAAC+M,EAAMoD,KAAKU,MAAM,GAAG7Q,KAAM+M,EAAMoD,KAAKU,MAAM,GAAG7Q,MAClD,EAAG,CAAC+M,EAAMoD,KAAKU,MAAM,GAAG7Q,KAAM+M,EAAMoD,KAAKU,MAAM,GAAG7Q,OAGpD,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAW5J,GAAG,oBAAoBC,GAAG,yBADvC,QAGA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,kBAAiBD,UAAU,kCAA3B,UACGgsB,EAAW/rB,GAAO,GADrB,IAC0B,IAD1B,IACgC+rB,EAAW/rB,GAAO,KADxCA,EADO,QAQ1B,CCrBM,SAASgsB,GAAT,GAKmB,IAJxBhV,EAIuB,EAJvBA,MACAyU,EAGuB,EAHvBA,cAGuB,EAFvBQ,YAEuB,EADvB3S,YAEA,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAWjZ,GAAG,uBAAuBC,GAAG,uBAD1C,IACmE,QAEnE,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAClB,IAAM8B,EAAQkV,EAAMoD,KAAK4G,MAAMkL,WAAU,SAACxL,GAAD,OAAuBA,EAAKtb,KAAOpF,CAAnC,IACzC,OACE,UAACygB,GAAD,CAEEC,KAAM1J,EAAMoD,KAAK4G,MAAMlf,GACvB6e,KAAM3J,EAAMoD,KAAK6G,OAAOnf,GACxB8e,SAAU5J,EAAMoD,KAAK8G,UAAUpf,GAC/B+e,KAAM7J,EAAMoD,KAAK+G,MAAMrf,GACvBgf,QAAS9J,EAAMoD,KAAKgH,SAAStf,IALxB9B,EAQV,QAIR,CC1BM,SAASmsB,GAAT,GAAsG,IAAzEnV,EAAwE,EAAxEA,MAAOyU,EAAiE,EAAjEA,cAAiE,EAAlDQ,YAAkD,EAArC3S,YACrE,GAAsB,UAAlBtC,EAAMkF,QAAqB,CAC7B,IAAM2P,EAA6B7U,EAAMoD,KAAKoB,QAAQ/B,QAAO,SAAC0C,GAC5D,OAAOsP,EAAcG,SAASzP,EAAO/W,GACtC,IAED,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAW/E,GAAG,6BAA6BC,GAAG,gCADhD,QAGA,iBAAKP,UAAU,6BAAf,SACG8rB,EAAa5qB,KAAI,SAACsZ,GAAD,OAChB,iBAAmBxa,UAAU,kCAA7B,UACE,UAAC0hB,GAAA,EAAD,CAAWlH,KAAMA,EAAMmH,cAAe,EAAGna,SAAS,KAD1CgT,EAAKnV,GADC,QAQzB,CAED,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAW/E,GAAG,wBAAwBC,GAAG,8BAD3C,QAGA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,iBAAiBD,UAAU,kCAA3B,SACGsc,EAAAA,GAAQ+P,OAAOpsB,KADRA,EADO,QAQ1B,CCpCM,SAASqsB,GAAT,GAA8F,IAA/DrV,EAA8D,EAA9DA,MAAOyU,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,eACpDjrB,GAAQwI,EAAAA,GAAAA,GAAawiB,EAAcnqB,OAAS,EAAG,CACnD4H,IAAK,EACL0I,SAAU,GACVxJ,SAAU,IACVsjB,eAAAA,IAGIC,EAAiC3U,EAAMoD,KAAKoB,QAAQ/B,QAAO,SAAC0C,GAChE,OAAOsP,EAAcG,SAASzP,EAAOhO,SACtC,IAED,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAW9N,GAAG,0BAA0BC,GAAG,yBAD7C,QAGA,iBAAKP,UAAU,6BAAf,SACG4rB,EAAgB1qB,KAAI,SAACjB,GAAD,OACnB,iBAAKD,UAAU,kCAAf,UACE,UAAC,MAAD,CAAWS,QAASR,EAAMQ,QAASC,MAAOA,EAAOV,UAAU,eADPC,EAAMQ,QADzC,QAQ5B,CC3BM,SAAS8rB,GAAT,GAKmB,IAJxBtV,EAIuB,EAJvBA,MACAyU,EAGuB,EAHvBA,cAIM/U,GADiB,EAFvBuV,YAEuB,EADvB3S,YAEiC7C,EAAeO,EAAMoD,KAAK1D,SAE3D,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAWrW,GAAG,0BAA0BC,GAAG,+BAD7C,QAGA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAClB,OACE,iBAA8BD,UAAU,kCAAxC,SACG2W,EAAO1W,IADV,kBAAqBA,GAIxB,QAIR,CC1BM,SAASusB,GAAT,GAAkG,IAAzEvV,EAAwE,EAAxEA,MAAOyU,EAAiE,EAAjEA,cAAiE,EAAlDQ,YAAkD,EAArC3S,YACjE,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAWjZ,GAAG,oBAAoBC,GAAG,yBADvC,QAGA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,iBAAiBD,UAAU,kCAA3B,SACGiX,EAAMoD,KAAKG,KAAKiB,QAAQ4Q,OAAOpsB,KADxBA,EADO,QAQ1B,CCZM,SAASwsB,GAAT,GAA+E,IAAxDf,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,eACrCjrB,GAAQwI,EAAAA,GAAAA,GAAawiB,EAAcnqB,OAAS,EAAG,CACnD4H,IAAK,EACL0I,SAAU,GACVxJ,SAAU,IACVsjB,eAAAA,IAGF,OACE,mCACE,WAAC,KAAD,WACGD,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,+BAA+BC,GAAG,0BAEhD,UAAC,MAAD,CAAWD,GAAG,0BAA0BC,GAAG,uBAJ/C,QAQA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACiG,GAAD,OACjB,UAAC,MAAD,CAA0BA,OAAQA,EAAsCnH,UAAU,SAAlF,UACE,UAAC,MAAD,CAAWqF,GAAI8B,EAAQS,UAAWlH,EAAOV,UAAU,yBADrD,sBAA8DmH,GAD7C,QAQ1B,CC9BM,SAASulB,GAAT,GAAuF,EAAjER,YAAkE,IAArDR,EAAoD,EAApDA,cAAoD,EAArCnS,YACvD,OACE,mCACE,WAAC,KAAD,WACGmS,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,mBAAmBC,GAAG,yBAEpC,UAAC,MAAD,CAAWD,GAAG,oBAAoBC,GAAG,sBAJzC,QAQA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,iBAAiBD,UAAU,kCAA3B,SACGC,GADOA,EADO,QAQ1B,CChBM,SAAS0sB,GAAT,GAAmF,IAAxDjB,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,eACzCjrB,GAAQwI,EAAAA,GAAAA,GAAawiB,EAAcnqB,OAAS,EAAG,CACnD4H,IAAK,EACL0I,SAAU,GACVxJ,SAAU,IACVsjB,eAAAA,IAGF,OACE,mCACE,WAAC,KAAD,WACGD,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,oCAAoCC,GAAG,+BAErD,UAAC,MAAD,CAAWD,GAAG,+BAA+BC,GAAG,4BAJpD,QAQA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACiG,GAAD,OACjB,UAAC,MAAD,CAA0BA,OAAQA,EAAlC,UACE,UAACd,GAAA,EAAD,CACEC,KAAM5F,EACN8F,UAAW,CACTnB,GAAI8B,EACJC,KAAM,CAAE9G,GAAI,GAAIC,GAAI,KAEtBgG,aAAa,YAP8BY,EAD9B,QAe1B,CCtCM,SAASylB,GAAT,GAAiG,EAAjEV,YAAkE,IAArDR,EAAoD,EAApDA,cAAoD,EAArCnS,YACjE,OACE,mCACE,WAAC,KAAD,WACGmS,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,mBAAmBC,GAAG,yBAEpC,UAAC,MAAD,CAAWD,GAAG,oBAAoBC,GAAG,sBAJzC,QAQA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,kBAAiBD,UAAU,kCAA3B,UACa,WAAVC,IAAsB,UAAC,MAAD,CAAWK,GAAG,SAASC,GAAG,WACtC,SAAVN,IAAoB,UAAC,MAAD,CAAWK,GAAG,WAAWC,GAAG,SACtC,UAAVN,IAAqB,UAAC,MAAD,CAAWK,GAAG,UAAUC,GAAG,YAHzCN,EADO,QAU1B,CCrBM,SAAS4sB,GAAT,GAA+E,IAAxCnB,EAAuC,EAAvCA,cAC5C,OACE,mCACE,WAAC,KAAD,WACGA,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,gCAAgCC,GAAG,4BAEjD,UAAC,MAAD,CAAWD,GAAG,2BAA2BC,GAAG,yBAJhD,QAQA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACiG,GAAD,OACjB,UAACge,GAAA,EAAD,CACE9f,GAAIqX,OAAOvV,GAEXzG,MAAO,GACPV,UAAU,uBAJZ,sBAEsBmH,GAHL,QAW1B,CCpBM,SAAS2lB,GAAT,GAAkE,IAAxCpB,EAAuC,EAAvCA,cAC/B,OACE,mCACE,WAAC,KAAD,WACGA,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,6BAA6BC,GAAG,4BAE9C,UAAC,MAAD,CAAWD,GAAG,6BAA6BC,GAAG,yBAJlD,QAQA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,iBAA6BD,UAAU,kCAAvC,UACE,UAAC,MAAD,CACEsG,KAAK,QACL3G,KAAgB,QAAVM,GAAkB,UAAC+jB,GAAA,EAAD,KAA+B,UAACC,GAAA,EAAD,OAH3D,iBAAoBhkB,GADH,QAW1B,CCpBM,SAAS8sB,GAAT,GAAiF,IAA/C9V,EAA8C,EAA9CA,MAAOyU,EAAuC,EAAvCA,cAC9C,OACE,mCACE,WAAC,KAAD,YACE,UAAC,MAAD,CAAWprB,GAAG,4BAA4BC,GAAG,8BAD/C,QAGA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAW,IAAD,MACtB8B,EAAQsqB,OAAOpsB,GACf2M,EAAK,oBAAGqK,EAAMoD,YAAT,iBAAG,EAAYoB,eAAf,aAAG,EAAsB1Z,UAAzB,QAAmC,CAAC,EAC/C,OACE,kBAAiB/B,UAAU,uCAA3B,UACGsc,EAAAA,GAAQ+P,OAAOpsB,KAChB,UAAC2c,GAAA,EAAD,CAAYjd,MAAM,UAACqd,GAAA,EAAD,IAAa1W,KAAM,KACpC2W,OAAOtQ,OAAoBC,GAAO1L,KAAI,SAACkb,EAAQra,EAAOmb,GACrD,OACE,WAAC,EAAAC,SAAD,YACE,kBAAMnd,UAAU,sBAAhB,SAAuCoc,EAAOlS,OAC7CgT,EAAI3b,OAAS,EAAIQ,IAAS,UAACqb,GAAA,EAAD,MAF7B,UAAkBhB,EAAOhO,SAAzB,YAAqCrM,GAKxC,MAVOA,EAab,QAIR,CClCM,SAASirB,GAAT,GAAwE,IAAxCtB,EAAuC,EAAvCA,cACrC,OACE,mCACE,WAAC,KAAD,WACGA,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,sCAAsCC,GAAG,qCAEvD,UAAC,MAAD,CAAWD,GAAG,iCAAiCC,GAAG,iCAJtD,QAQA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,iBAAiBD,UAAU,kCAA3B,UACE,UAACsiB,GAAD,CAAala,MAAOnI,EAAO6B,MAAO,CAAEsG,MAAOnI,GAASS,MAAO,MADnDT,EADO,QAQ1B,CCpBM,SAASgtB,GAAT,GAA8E,IAAjDvB,EAAgD,EAAhDA,cAAe9d,EAAiC,EAAjCA,QACjD,OACE,mCACE,WAAC,KAAD,WACG8d,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,0BAA0BC,GAAG,4BAE3C,UAAC,MAAD,CAAWD,GAAG,4BAA4BC,GAAG,yBAJjD,QAQA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,iBAAiBD,UAAU,kCAA3B,UACE,UAAC,MAAD,CAAYmO,OAAQP,EAAQ3N,MADpBA,EADO,QAQ1B,CCnBM,SAASitB,GAAT,GAAqF,IAAxDjW,EAAuD,EAAvDA,MAAOyU,EAAgD,EAAhDA,cAAe9d,EAAiC,EAAjCA,QACxD,OACE,mCACE,WAAC,KAAD,WACG8d,EAAcnqB,OAAS,GACtB,UAAC,MAAD,CAAWjB,GAAG,mBAAmBC,GAAG,yBAEpC,UAAC,MAAD,CAAWD,GAAG,oBAAoBC,GAAG,sBAJzC,QASA,iBAAKP,UAAU,6BAAf,SACG0rB,EAAcxqB,KAAI,SAACjB,GAAD,OACjB,2BACE,UAAC,MAAD,CAAYkO,OAAQP,EAAQ3N,GAAQ8lB,UAAQ,EAACzf,KAAK,WAD1CrG,EADO,OAMrB,iBAAKD,UAAU,6BAAf,UACE,WAAC,KAAD,CAAMsG,KAAK,QAAQ2E,YAAU,EAA7B,cACIgM,EAAMoD,KAAKG,KAAKtQ,KADpB,WAMP,CCXM,IAAMijB,GAAuB,SAACrkB,GAAiC,IAAD,IAC7DskB,EAAe,oBACnB,CACE,YAAa3B,GACb,yBAA0BoB,GAC1B,uBAAwBJ,GACxB,mBAAoBA,GACpB,iBAAkBV,GAClB,yBAA0BU,GAC1B,yBAA0BC,GAC1B,mBAAoBA,GACpB,mBAAoBA,GACpB,oBAAqBD,GACrB,oBAAqBM,GACrB,wBAAyBP,GACzB,oBAAqBA,GACrB,wBAAyBU,GACzB,iBAAkBR,GAClB,oBAAqBT,GACrB,iBAAkBG,GAClB,kBAAmBQ,GACnB,mBAAoBI,GACpB,kBAAmBN,GACnB,yBAA0BD,GAC1B,gBAAiBQ,GACjB,cAAeN,GACf,iBAAkBL,GAClB,mBAAoBK,GACpB,oBAAqBF,GACrB,aAAcK,GACd,aAAcJ,GACd,kBAAmBH,WA9BF,aACnB,EA8BIzjB,EAAMmO,MAAM+B,aA/BG,QA+BMgB,GAE3B,OACE,mCACE,UAACwR,GAAD,CAAc/R,QAAS3Q,EAAMojB,YAAY3qB,OAAQ+kB,MAAOxd,EAAMyQ,YAAYhY,UAC1E,UAAC6rB,GAAD,UAAqBtkB,MAG1B,ECnDM,SAASukB,GAAT,GAAkG,IAA/D9T,EAA8D,EAA9DA,YAAatY,EAAiD,EAAjDA,MAAO0J,EAA0C,EAA1CA,SAO5D,OANoB4O,EAAY+T,OAAM,SAACnf,GACrC,OAAOlN,EAAMqsB,OAAM,SAAClsB,GAClB,OAAOmsB,EAAAA,GAAAA,KAAIpf,EAAQ/M,EACpB,GACF,KAIG,UAAC,KAAD,CAAOpB,UAAU,kBAAkBuE,MAAM,SAASwK,MAAI,EAAtD,SACGpE,KAKA,yBACR,CCnBM,SAAS6iB,GAAT,GAAmE,IAA3CvW,EAA0C,EAA1CA,MAAOsC,EAAmC,EAAnCA,YAC9B7Y,GAAQwI,EAAAA,GAAAA,GAAaqQ,EAAYhY,OAAS,EAAG,CACjD4H,IAAK,EACL0I,SAAU,GACVxJ,SAAU,MAGZ,MAAsB,aAAlB4O,EAAMkF,SAEN,UAACkR,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAChB,IAAM1N,EAAUwW,EAAMoD,KAAKoB,QAAQgS,MACjC,SAAC7gB,GAAD,OAAwBA,EAAMwB,WAAaD,EAAOkM,KAAKpa,KAAvD,IAEF,OACE,kBAA+BD,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,0BAAMH,EAAO/G,OACZsE,QAAQjL,KACP,UAAC,MAAD,CAAWA,QAASA,EAAQA,QAASC,MAAOA,EAAOV,UAAU,gBAJjE,eAAkBmO,EAAO9I,IAQ5B,OAML,UAACgoB,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAChB,IAAMqM,EAAOvD,EAAMoD,KAAKU,MAAM0S,MAAK,SAAC7gB,GAAD,OAAwBA,EAAMvH,KAAO8I,EAAOkM,KAAKpa,KAAjD,IACnC,OACE,kBAA+BD,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,iBAAKpH,UAAU,qBAAf,SAAqC0L,QAAQ8O,IAASA,EAAKtQ,SAH7D,eAAkBiE,EAAO9I,IAM5B,KAGN,CC7CM,SAASqoB,GAAT,GAAwE,IAA3CzW,EAA0C,EAA1CA,MAAOsC,EAAmC,EAAnCA,YACnCyS,EAA0B,CAC9B,EAAG,CAAC/U,EAAMoD,KAAKU,MAAM,GAAG7Q,KAAM+M,EAAMoD,KAAKU,MAAM,GAAG7Q,MAClD,EAAG,CAAC+M,EAAMoD,KAAKU,MAAM,GAAG7Q,KAAM+M,EAAMoD,KAAKU,MAAM,GAAG7Q,MAClD,EAAG,CAAC+M,EAAMoD,KAAKU,MAAM,GAAG7Q,KAAM+M,EAAMoD,KAAKU,MAAM,GAAG7Q,MAClD,EAAG,CAAC+M,EAAMoD,KAAKU,MAAM,GAAG7Q,KAAM+M,EAAMoD,KAAKU,MAAM,GAAG7Q,OAGpD,OACE,UAACmjB,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,0BAAMH,EAAO/G,QACb,kBAA6BpH,UAAU,kCAAvC,UACGgsB,EAAW7d,EAAOkM,KAAKpa,OAAO,GADjC,IACsC,IADtC,IAC4C+rB,EAAW7d,EAAOkM,KAAKpa,OAAO,KADhEkO,EAAOkM,KAAKpa,SAHxB,eAAkBkO,EAAO9I,IADV,KAWtB,CCpBM,SAASsoB,GAAT,GAA0E,IAA3C1W,EAA0C,EAA1CA,MAAOsC,EAAmC,EAAnCA,YAC3C,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAChB,IAAMpM,EAAQkV,EAAMoD,KAAK4G,MAAMkL,WAAU,SAACxL,GAAD,OAAuBA,EAAKtb,KAAO8I,EAAOkM,KAAKpa,KAA/C,IACzC,OACE,kBAA+BD,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,0BAAMH,EAAO/G,OACZrF,GAAS,IACR,UAAC2e,GAAD,CAEEC,KAAM1J,EAAMoD,KAAK4G,MAAMlf,GACvB6e,KAAM3J,EAAMoD,KAAK6G,OAAOnf,GACxB8e,SAAU5J,EAAMoD,KAAK8G,UAAUpf,GAC/B+e,KAAM7J,EAAMoD,KAAK+G,MAAMrf,GACvBgf,QAAS9J,EAAMoD,KAAKgH,SAAStf,IAN/B,eACeoM,EAAO9I,OAL1B,eAAkB8I,EAAO9I,IAe5B,KAGN,CCtBM,SAASuoB,GAAT,GAAsE,IAA3C3W,EAA0C,EAA1CA,MAAOsC,EAAmC,EAAnCA,YACvC,MAAsB,UAAlBtC,EAAMkF,SAEN,UAACkR,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAChB,IAAMsT,EAAQxK,EAAMoD,KAAKoB,QAAQgS,MAAK,SAAC7gB,GAAD,OAAwBA,EAAMvH,KAAO8I,EAAOkM,KAAKpa,KAAjD,IACtC,OACE,kBAA+BD,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,0BAAMH,EAAO/G,QACb,UAACsa,GAAA,EAAD,CAAWlH,KAAMiH,EAAOE,cAAe,EAAGna,SAAS,MAHrD,eAAkB2G,EAAO9I,IAM5B,OAML,UAACgoB,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAChB,OACE,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,iBAAKpH,UAAU,qBAAf,SAAqCsc,EAAAA,GAAQnO,EAAOkM,KAAKpa,WAH3D,eAAkBkO,EAAO9I,IAM5B,KAGN,CC/BM,SAASwoB,GAAT,GAAwE,IAA3C5W,EAA0C,EAA1CA,MAAOsC,EAAmC,EAAnCA,YACnC7Y,GAAQwI,EAAAA,GAAAA,GAAaqQ,EAAYhY,OAAS,EAAG,CACjD4H,IAAK,EACL0I,SAAU,GACVxJ,SAAU,MAGZ,OACE,UAACglB,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAChB,IAAM1N,EAAUwW,EAAMoD,KAAKoB,QAAQgS,MAAK,SAAC7gB,GAAD,OAAwBA,EAAMwB,WAAaD,EAAOkM,KAAKpa,KAAvD,IACxC,OACE,kBAA+BD,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,0BAAMH,EAAO/G,OACZsE,QAAQjL,KAAY,UAAC,MAAD,CAAWA,QAASA,EAAQA,QAASC,MAAOA,EAAOV,UAAU,gBAHpF,eAAkBmO,EAAO9I,IAM5B,KAGN,CCtBM,SAASyoB,GAAT,GAAwE,IAA3C7W,EAA0C,EAA1CA,MAAOsC,EAAmC,EAAnCA,YACnC5C,EAA2BD,EAAeO,EAAMoD,KAAK1D,QAE3D,OACE,UAAC0W,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAChB,OACE,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,0BAAMH,EAAO/G,QACb,iBAAKpH,UAAU,qBAAf,SAAqC2W,EAAOxI,EAAOkM,KAAKpa,WAH1D,eAAkBkO,EAAO9I,IAM5B,KAGN,CChBM,SAAS0oB,GAAT,GAAkE,IAA3C9W,EAA0C,EAA1CA,MAAOsC,EAAmC,EAAnCA,YACnC,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,UAAC,KAAD,CAASK,MAAOwP,EAAMoD,KAAKG,KAAKiB,QAAQ4Q,OAAOle,EAAOkM,KAAKpa,QAA3D,UACE,iBAAKD,UAAU,qBAAf,SAAqCiX,EAAMoD,KAAKG,KAAKiB,QAAQ4Q,OAAOle,EAAOkM,KAAKpa,cAJpF,eAAkBkO,EAAO9I,IADV,KAWtB,CCbM,SAAS2oB,GAAT,GAA+D,IAApCzU,EAAmC,EAAnCA,YAC1B7Y,GAAQwI,EAAAA,GAAAA,GAAaqQ,EAAYhY,OAAS,EAAG,CACjD4H,IAAK,EACL0I,SAAU,GACVxJ,SAAU,IACViV,OAAQ,IAGV,OACE,UAAC+P,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,UAAC,MAAD,CAA0BD,OAAQgH,EAAOkM,KAAKpa,MAA9C,UACE,UAAC,MAAD,CAAWoF,GAAI8I,EAAOkM,KAAKpa,MAAO2H,UAAWlH,EAAOV,UAAU,4BAJlE,eAAkBmO,EAAO9I,IADV,KAWtB,CCtBM,SAAS4oB,GAAT,GAAyD,IAApC1U,EAAmC,EAAnCA,YAC1B,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,UAAC,KAAD,CAASK,MAAO0G,EAAOkM,KAAKpa,MAA5B,UACE,iBAAKD,UAAU,qBAAf,SAAqCmO,EAAOkM,KAAKpa,YAJrD,eAAkBkO,EAAO9I,IADV,KAWtB,CChBM,SAAS6oB,GAAT,GAAkE,IAApC3U,EAAmC,EAAnCA,YACnC,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,iBACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,kBAAKpH,UAAU,qBAAf,UAC0B,YAAvB,UAAAmO,EAAOkM,YAAP,eAAapa,SAAsB,UAAC,MAAD,CAAWK,GAAG,SAASC,GAAG,WACtC,UAAvB,UAAA4N,EAAOkM,YAAP,eAAapa,SAAoB,UAAC,MAAD,CAAWK,GAAG,WAAWC,GAAG,SACtC,WAAvB,UAAA4N,EAAOkM,YAAP,eAAapa,SAAqB,UAAC,MAAD,CAAWK,GAAG,UAAUC,GAAG,eANlE,eAAkB4N,EAAO9I,IADV,KAatB,CCZM,SAAS8oB,GAAT,GAAkE,IAApC5U,EAAmC,EAAnCA,YAC7B7Y,GAAQwI,EAAAA,GAAAA,GAAaqQ,EAAYhY,OAAS,EAAG,CACjD4H,IAAK,EACL0I,SAAU,GACVxJ,SAAU,IACViV,OAAQ,IAGV,OACE,UAAC+P,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,UAAC,MAAD,CAA0BD,OAAQgH,EAAOkM,KAAKpa,MAA9C,UACE,UAACoG,GAAA,EAAD,CACEC,KAAM5F,EACN8F,UAAW,CACTnB,GAAI8I,EAAOkM,KAAKpa,MAChBmH,KAAM,CAAE9G,GAAI,GAAIC,GAAI,WAR5B,eAAkB4N,EAAO9I,IADV,KAiBtB,CC9BM,SAAS+oB,GAAT,GAAkE,IAApC7U,EAAmC,EAAnCA,YACnC,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,UAACkb,GAAD,CAAala,MAAO+F,EAAOkM,KAAKpa,MAAO6B,MAAO,CAAEsG,MAAO+F,EAAOkM,KAAKpa,OAASS,MAAO,OAHrF,eAAkByN,EAAO9I,IADV,KAStB,CCbM,SAASgpB,GAAT,GAAwE,IAA7CzgB,EAA4C,EAA5CA,QAAS2L,EAAmC,EAAnCA,YACzC,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,eACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,iBAAKpH,UAAU,qBAAf,mBAAqC4N,EAAO,UAACO,EAAOkM,YAAR,aAAC,EAAapa,cAA1D,aAAqC,EAA6BmH,SAHpE,eAAkB+G,EAAO9I,IADV,KAStB,CCXM,SAASipB,GAAT,GAAyE,IAApC/U,EAAmC,EAAnCA,YAC1C,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAC3C,UAAC+d,GAAA,EAAD,CAAU9f,GAAIqX,OAAOvO,EAAOkM,KAAKpa,OAAQS,MAAO,GAAIV,UAAU,0BAHhE,eAAkBmO,EAAO9I,IADV,KAStB,CCXM,SAASkpB,GAAT,GAA4D,IAApChV,EAAmC,EAAnCA,YAC7B,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAE3C,iBAAKpH,UAAU,qBAAf,SACyB,QAAtBmO,EAAOkM,KAAKpa,OAAkB,UAAC+jB,GAAA,EAAD,KAA+B,UAACC,GAAA,EAAD,QALlE,eAAkB9V,EAAO9I,IADV,KAYtB,CCdM,SAASmpB,GAAT,GAAoE,IAApCjV,EAAmC,EAAnCA,YACrC,OACE,UAAC8T,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAE3C,iBAAKpH,UAAU,qBAAf,UACE,UAAC,IAAD,UAAYsc,EAAAA,GAAQ+P,OAAOle,EAAOkM,KAAKpa,cAL3C,eAAkBkO,EAAO9I,IADV,KAYtB,CClBM,SAASopB,GAAT,GAA8E,EAAnDxX,MAAoD,IAA7CsC,EAA4C,EAA5CA,YAAa3L,EAA+B,EAA/BA,QACpD,OACE,UAACyf,GAAD,CAAyB9T,YAAaA,EAAatY,MAAO,CAAC,cAA3D,SACGsY,EAAYrY,KAAI,SAACiN,GAAD,OACf,kBAA+BnO,UAAU,cAAzC,WACE,UAAC,MAAD,CAAQqF,GAAI8I,EAAOG,YACnB,iBAAKtO,UAAU,oBAAf,SAAoCmO,EAAO/G,QAE3C,iBAAKpH,UAAU,qBAAf,UACE,UAAC,MAAD,CAAYmO,OAAQP,EAAQO,EAAOkM,KAAKpa,OAAQ8lB,UAAQ,EAACzf,KAAK,cALlE,eAAkB6H,EAAO9I,IADV,KAYtB,CCGM,IAAMqpB,GAAiB,SAAC5lB,GAAoD,IAAD,IAC1EyQ,GAActF,EAAAA,EAAAA,UAClB,kBAAMY,EAAAA,GAAAA,SAAQoI,OAAOtQ,OAAO7D,EAAM8E,SAAU,CAAC,aAAc,QAAS,CAAC,MAAO,OAA5E,GACA,CAAC9E,EAAM8E,UAGH+gB,EAAc,oBAClB,CACE,YAAanB,GACb,yBAA0Bc,GAC1B,uBAAwBN,GACxB,mBAAoBA,GACpB,iBAAkBN,GAClB,yBAA0BM,GAC1B,yBAA0BC,GAC1B,mBAAoBA,GACpB,mBAAoBA,GACpB,oBAAqBD,GACrB,oBAAqBQ,GACrB,wBAAyBT,GACzB,oBAAqBA,GACrB,wBAAyBU,GACzB,iBAAkBR,GAClB,oBAAqBN,GACrB,iBAAkBC,GAClB,kBAAmBM,GACnB,mBAAoBE,GACpB,kBAAmBH,GACnB,yBAA0BD,GAC1B,gBAAiBK,GACjB,cAAeF,GACf,iBAAkBN,GAClB,mBAAoBM,GACpB,aAAcI,GACd,oBAAqBP,GACrB,aAAcC,GACd,kBAAmBH,WA9BH,aAClB,EA8BIhlB,EAAMmO,MAAM+B,aA/BE,QA+BOgB,GAE3B,OAAO,UAAC2U,GAAD,kBAAoB7lB,GAApB,IAA2ByQ,YAAaA,IAChD,ECrBM,SAASqV,GAAT,GAWc,IAVnB1Y,EAUkB,EAVlBA,KACAtI,EASkB,EATlBA,QACAihB,EAQkB,EARlBA,aACAnrB,EAOkB,EAPlBA,MACAorB,EAMkB,EANlBA,kBACA7I,EAKkB,EALlBA,aACAhP,EAIkB,EAJlBA,MACAyU,EAGkB,EAHlBA,cACAQ,EAEkB,EAFlBA,YACA6C,EACkB,EADlBA,aAEArZ,EAAAA,GAAAA,KACA,OAA+B3B,EAAAA,GAAAA,KAA/B,gBAAOib,EAAP,KAAoBtuB,EAApB,KAAoBA,MAEduuB,GAAO5a,EAAAA,GAAAA,GAAa,CAAEC,SAAU,KAEhCiF,GAActF,EAAAA,EAAAA,UAAQ,kBAAMuF,EAAAA,GAAAA,IAAY5L,EAAlB,GAA4B,CAACA,IAEnDshB,EAAeD,EAAKE,SAAW,GAAKzrB,EAAMT,QAAU,EAAIS,EAAMT,QAGpEgT,EAAsBC,EAAM+Y,EAAKE,SAAW,GAAKzrB,EAAMT,QAAUS,EAAMT,QAAU,GAGjF,IAAImsB,EAAe,EACfC,EAAc,EAElB,GAA4Ctb,EAAAA,GAAAA,KAA5C,gBAAOhC,EAAP,KAAqBud,EAArB,KAAc5uB,MAEd,OACE,WAAC,IAAD,CAAMulB,aAAcA,EAApB,WACE,WAAC,KAAD,CAAO3f,KAAK,QAAQmP,OAAK,EAAzB,WACE,UAAC,MAAD,CAAWnV,GAAG,YAAYC,GAAG,YAD/B,MAC6C,UAAC6lB,GAAD,CAAYnP,MAAOA,QAGhE,WAAC,KAAD,CAAiBxX,KAAK,QAAtB,WACE,UAAC,MAAD,CAAYE,MAAM,UAACioB,EAAA,EAAD,IAAYthB,KAAK,UAClB,WAAhByoB,IACC,UAAC,MAAD,CACEzuB,IAAI,4GACJC,IAAI,wGAGS,QAAhBwuB,IACC,UAAC,MAAD,CACEzuB,IAAI,2HACJC,IACE,wIAOW,SAAhBwuB,IACC,UAAC,MAAD,CACEzuB,IAAI,0GACJC,IAAI,wGAKV,kBAAKP,UAAU,UAAU+R,IAAKid,EAA9B,WACE,kBAAKhvB,UAAU,eAAeqF,GAAG,SAAjC,WACE,kBAAMrF,UAAU,gBAAhB,UACE,UAAC,MAAD,CAAYL,MAAM,UAACoa,GAAA,EAAD,IAAiBzT,KAAK,aAE1C,kBAAMtG,UAAU,iBAAhB,UACE,UAAC,MAAD,CAAWM,GAAG,cAAWC,GAAG,qBAGhC,iBAAKP,UAAU,kBAAkB+R,IAAKA,EAAtC,UACE,UAACob,GAAD,CACElW,MAAOA,EACPyU,cAAeA,EACf9d,QAASA,EACTse,YAAaA,EACb3S,YAAaA,EACboS,eAAgB2D,OAGpB,kBAAKtvB,UAAU,kBAAkBqF,GAAG,SAApC,WACE,kBAAMrF,UAAU,gBAAhB,UACE,UAAC,MAAD,CAAYL,MAAM,UAAC4vB,GAAA,EAAD,IAAiBjpB,KAAK,aAE1C,kBAAMtG,UAAU,iBAAhB,UACE,UAAC,MAAD,CAAWM,GAAG,kBAAkBC,GAAG,mBAItCgZ,EAAYrY,KAAI,SAACiN,GAChB,IAAMqhB,EAA8C,MAA9BrhB,EAAOiI,KAAK8Y,GAIlC,OAHAE,EAAeI,EAAgBJ,EAAe,EAAIA,EAClDC,EAAeG,EAAkCH,EAAlBA,EAAc,GAG3C,kBACErvB,UAAU,kBAEV8B,MAAO2tB,GAAYD,EAAgBJ,EAAeC,EAAaG,EAAgB,EAAI,EAAG9uB,GAHxF,WAKE,UAACkZ,GAAA,EAAD,CACEtL,SAAUH,EAAOG,SACjBjJ,GAAI8I,EAAO0L,UACXnZ,MAAO,GACPoZ,QAAS0V,KAEX,kBAAMxvB,UAAU,uBAAhB,SAAwCmO,EAAO/G,SAXjD,UAEU+G,EAAO9I,GAFjB,YAEuB8I,EAAO0L,WAYjC,QAGH,UAAC,KAAD,CAAO7Z,UAAU,kBAAkBuE,MAAM,SAAzC,SACGuqB,GACC,UAAC,MAAD,CAAalpB,QAASipB,EAAcra,SAAUqa,EAAcva,SAAU,GAAI3U,MAAM,UAAC+vB,GAAA,EAAD,IAAhF,UACE,UAAC,MAAD,CAAWpvB,GAAG,cAAcC,GAAG,mBAGjC,UAAC,MAAD,CAAQqF,QAASipB,EAAclvB,MAAM,UAAC+vB,GAAA,EAAD,IAArC,UACE,UAAC,MAAD,CAAWpvB,GAAG,cAAcC,GAAG,qBAKrC,UAACmuB,GAAD,CACEzX,MAAOA,EACPyU,cAAeA,EACf9d,QAASA,EACTse,YAAaA,MAIpB,CAED,IAAMuD,IAAcE,EAAAA,GAAAA,UAClB,SAAC5tB,EAAe6tB,EAAclvB,GAC5B,IAAMmvB,EAAWnvB,EAAQ,EACnBovB,EAASF,EAAOC,EAAW,EAS3Bva,EAPc,SAACvT,EAAeguB,EAAiBC,GACnD,IAAMC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,EAAazsB,KAAK0sB,MAAMpuB,EAAQkuB,EAAM1uB,QAG5C,OAAOwuB,EAAUG,EAAaF,GAAaC,EAFjBluB,EAAQkuB,EAAM1uB,QAE8B2uB,GAAcF,CACrF,CACWI,CAAYruB,EAAO,EAAG,IAE5Bsd,EAAO,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,GAAK,KAAMtd,EAAQ,GAE/D,MAAO,CACLuT,IAAI,GAAD,OAAK,GAAKA,EAAV,MACH+J,KAAK,GAAD,OAAKwQ,EAAWxQ,EAAOyQ,EAAvB,MAEP,IACD,SAAC/tB,EAAO6tB,EAAMlvB,GAAd,gBAA2BqB,EAA3B,YAAoC6tB,EAApC,YAA4ClvB,EAA5C,I,wBC/KK,SAAS2vB,GAAT,GAA6F,IAAtE9c,EAAqE,EAArEA,QAAS3F,EAA4D,EAA5DA,QAAS0iB,EAAmD,EAAnDA,iBAAkB5sB,EAAiC,EAAjCA,MAEhEuS,EAFiG,EAA1BC,KAE3CxS,EAAMT,QAAU,GAE5C,IAAMstB,GACJ,iCACE,UAAC,KAAD,CAAiB9wB,KAAK,QAAtB,UACE,UAAC,MAAD,CACEa,GAAG,iHACHC,GAAG,2FAMLiwB,GACJ,mCACE,UAAC,KAAD,CAAOxwB,UAAU,kBAAkBuE,MAAM,SAAzC,UACE,UAAC,MAAD,CAAQqB,QAAS0qB,EAAjB,UACE,UAAC,MAAD,CAAWhwB,GAAG,0BAA0BC,GAAG,2BAG/C,UAAC,MAAD,CAAqBmD,MAAOA,OAIhC,OAAuB,IAAnB6P,EAAQhS,QAER,WAAC,IAAD,YACE,WAAC,KAAD,CAAO+E,KAAK,QAAQmP,OAAK,EAAzB,WACE,UAAC,MAAD,CAAWnV,GAAG,UAAUC,GAAG,YAD7B,QAIA,UAAC,KAAD,CAAOP,UAAU,kBAAjB,UACE,UAACywB,GAAA,EAAD,CAAa/vB,MAAM,UAEpB6vB,EACAC,MAML,UAAC,KAAD,CACE5iB,QAASA,EACT2F,QAASA,EACTJ,yBAA0B,EACxB,UAAC,MAAD,CACE7S,IAAI,6EACJC,IAAI,qFAEN,UAAC,MAAD,CACED,IAAI,wEACJC,IAAI,4EAGRkH,OAAO,UAAC,MAAD,CAAWnH,IAAI,2DAA0BC,IAAI,kDACpDkV,OAAK,EACLD,SAAU+a,EAfZ,SAiBGC,GAGN,CCtEM,SAASE,GAAT,GAA4D,IAAD,EAApC9iB,EAAoC,EAApCA,QAAS4Y,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KACtCvQ,GAAOwQ,EAAAA,EAAAA,GAAQ9Y,EAAS4Y,GAC9B,GAAiDG,EAAAA,EAAAA,GAAQ,GAAjDvmB,EAAR,EAAQA,KAAMymB,EAAd,EAAcA,aAAcyJ,EAA5B,EAA4BA,iBAC5B,GAAkD3tB,EAAAA,EAAAA,WAAS,GAA3D,gBAAOmsB,EAAP,KAA0B6B,EAA1B,MAGAxxB,EAAAA,EAAAA,YAAU,WACJ2vB,GAAqB1uB,EAAO,GAC9BuwB,GAAqB,EAExB,GAAE,CAACvwB,EAAM0uB,IAEV,IAAM7I,GACJ,UAAC,KAAD,CACEtmB,MAAM,UAAC8wB,GAAA,EAAD,IACNhpB,OAAO,UAAC,MAAD,CAAWnH,GAAG,YAAYC,GAAG,YACpC4V,aAAY,OAAEqQ,QAAF,IAAEA,GAAF,UAAEA,EAAO9iB,aAAT,aAAE,EAAcT,QAC5BxD,KAAK,UACL6U,SAAU,EALZ,UAOE,UAAC,KAAD,WACE,UAAC,MAAD,CAAWhU,GAAG,4BAAyBC,GAAG,qCAKhD,OACE,UAAC,KAAD,CAAgBkmB,KAAMA,EAAMgB,MAAK,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,MAAOC,aAAcC,EAAAA,EAAAA,QAAAA,OAA/D,UACE,WAAC,IAAD,CAAcvnB,KAAMA,EAAMwN,QAASA,EAAnC,WAEE,UAACghB,GAAD,CACEhhB,QAASA,EACTqY,aAAcA,EACd4I,aAAchI,EACd3Q,KAAMA,EACNxS,MAAO8iB,EAAM9iB,MACborB,kBAAmBA,EACnB7X,MAAOuP,EAAMvP,MACbyU,cAAelF,EAAMkF,cACrBQ,YAAa1F,EAAM0F,YACnB6C,YAAavI,EAAMuI,eAIrB,UAACsB,GAAD,CACE9c,QAASiT,EAAMjT,QACf3F,QAASA,EACT0iB,iBAAkBA,EAClB5sB,MAAO8iB,EAAM9iB,MACbwS,KAAMA,QAKf,C,+DCvDM,SAAS0a,GAAT,GAA8D,IAArCpK,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAM7Y,EAAuB,EAAvBA,QAC3C,OACE,WAAC,KAAD,CAAiB6Y,KAAMA,EAAMD,MAAOA,EAAO5Y,QAASA,EAASijB,kBAAkB,UAACC,GAAAha,EAAD,IAA/E,YACIia,EAAAA,GAAAA,SAAQvK,EAAM/M,QAAS+M,EAAMwK,eAC7B,UAACxiB,GAAA,EAAD,CACE/G,OACE,UAAC,MAAD,CACEnH,GAAG,qEACHC,GAAG,qEAJT,UAQE,UAAC,KAAD,CAAakO,WAAS,EAAtB,UACE,gBAAIzO,UAAU,qBAAd,SACGwmB,EAAMwK,YAAY9vB,KAAI,SAAC+vB,GAAwB,IAAD,IAC7C,OACE,iBAAIjxB,UAAU,oBAAd,WACE,UAAC,MAAD,CAAQA,UAAU,oBAAoBqF,GAAE,UAAE4rB,EAAO3iB,gBAAT,QAAqB,MAC7D,kBAAKtO,UAAU,yBAAf,WACE,uCAASixB,EAAO7pB,YAAhB,QAAwB,MAD1B,IACyC,KACvC,UAAC,MAAD,UAAgB8X,GAAAA,GAAQ+R,EAAO3iB,UAAU5B,mBAJ7C,iBAAiDukB,EAAO7pB,MAQ3D,WAMT,UAACuG,GAAA,EAAD,CAAcC,QAASA,EAASC,aAAc2Y,EAAM3Y,aAAcC,UAAWojB,GAAAA,MAGlF,CChCD,SAASC,GAAmB3K,GAE1B,GAAIA,IAAUA,EAAMiB,MAAO,OAAO2J,EAAAA,GAElC,OAAQ5K,EAAMiB,OACZ,KAAKE,EAAAA,EAAAA,QAAAA,MACH,OAAO0J,EAAAA,GACT,KAAK1J,EAAAA,EAAAA,QAAAA,MACH,OAAO2J,EAAAA,GACT,KAAK3J,EAAAA,EAAAA,QAAAA,MACH,OAAO4J,EAAAA,GACT,KAAK5J,EAAAA,EAAAA,QAAAA,QACH,OAAO0D,GACT,KAAK1D,EAAAA,EAAAA,QAAAA,MACH,OAAOpB,GACT,KAAKoB,EAAAA,EAAAA,QAAAA,OACH,OAAO+I,GACT,KAAK/I,EAAAA,EAAAA,QAAAA,UACH,OAAOiJ,GACT,QACE,OAAOY,EAAAA,EAEZ,CAiBD,OAfA,WACE,OACE,UAAC,KAAD,CACEhR,MAAO,CACLiR,MAAO,CACLC,aAAcC,EAAAA,GAAAA,aACdC,UAAWD,EAAAA,GAAAA,eAJjB,UAQE,UAAC,IAAD,CAASE,eAAgBC,EAAAA,GAAAA,QAAyBX,mBAAoBA,MAG3E,C,yECrDKY,EACU,eADVA,EAEY,iBAFZA,EAGS,cAHTA,EAIW,gBAJXA,EAKW,gBALXA,EAMY,iBANZA,EAOO,YAPPA,EAQO,YAGAb,GAA2C,eACrDa,EAA4B,CAC3BpyB,KAAM,MACN8H,MAAO,CACLnH,GAAI,mBACJC,GAAI,gBAENmM,YAAa,CACXpM,GAAI,2CACJC,GAAI,yCAT8C,SAYrDwxB,EAA8B,CAC7BpyB,KAAM,QACN8H,MAAO,CACLnH,GAAI,0BACJC,GAAI,kBAENmM,YAAa,CACXpM,GAAI,qCACJC,GAAI,uDApB8C,SAuBrDwxB,EAA2B,CAC1BpyB,KAAM,aACN8H,MAAO,CACLnH,GAAI,oBACJC,GAAI,eAENmM,YAAa,CACXpM,GAAI,qDACJC,GAAI,uDA/B8C,SAkCrDwxB,EAA6B,CAC5BpyB,KAAM,mBACN8H,MAAO,CACLnH,GAAI,sBACJC,GAAI,iBAENmM,YAAa,CACXpM,GAAI,+CACJC,GAAI,oEA1C8C,SA6CrDwxB,EAA6B,CAC5BpyB,KAAM,iBACN8H,MAAO,CACLnH,GAAI,mBACJC,GAAI,iBAENmM,YAAa,CACXpM,GAAI,+BACJC,GAAI,8BArD8C,SAwDrDwxB,EAA8B,CAC7BpyB,KAAM,eACN8H,MAAO,CACLnH,GAAI,oBACJC,GAAI,kBAENmM,YAAa,CACXpM,GAAI,gCACJC,GAAI,+BAhE8C,SAmErDwxB,EAAyB,CACxBpyB,KAAM,OACN8H,MAAO,CACLnH,GAAI,gBACJC,GAAI,eAENmM,YAAa,CACXpM,GAAI,mCACJC,GAAI,mCA3E8C,SA8ErDwxB,EAAyB,CACxBpyB,KAAM,OACN8H,MAAO,CACLnH,GAAI,iBACJC,GAAI,eAENmM,YAAa,CACXpM,GAAI,iCACJC,GAAI,gCAtF8C,GA2FxD,K,wGC5FO,SAASyxB,EAAT,GAAsE,IAAhDC,EAA+C,EAA/CA,WAA+C,IAAnC3rB,KAAAA,OAAmC,MAA5B,QAA4B,EAC1E,OACE,iCACE,SAAC,KAAD,CAAY3G,MAAM,SAAC,IAAD,IAAe2G,KAAMA,KACvC,SAAC,IAAD,CAAQA,KAAMA,EAAMxE,MAAO,CAAEoG,gBAAiB,WAA9C,SACG+pB,MAIR,C,oJCoBM,SAASvQ,EAAT,GAOa,IANlBlH,EAMiB,EANjBA,KACAmH,EAKiB,EALjBA,cACAtc,EAIiB,EAJjBA,GAIiB,IAHjBrF,UAAAA,OAGiB,MAHL,GAGK,MAFjBkyB,OAAAA,OAEiB,SADjB1qB,EACiB,EADjBA,QAEQd,GAAkBC,EAAAA,EAAAA,KAAlBD,cAEF4C,EAAY,eAGlB,OACE,iBACEtJ,WAAWoF,EAAAA,EAAAA,GAAKkE,EAAD,UAAeA,EAAf,aAA6BkR,EAAK/a,MAAQyyB,GAAM,UAAO5oB,EAAP,YAA4BtJ,GAC3FqF,GAAIA,EAFN,WAIE,gBAAKrF,UAAU,yBAAf,SACiB,UAAdwa,EAAK/a,MAAoBkiB,EAAgB,IACxC,SAAC,IAAD,CACEvZ,MAAM,UACNX,OACE,SAAC,KAAD,CACEnH,GAAG,sDACHC,GAAG,6CALT,UASE,SAAC,IAAD,CAAY0xB,WAAYtQ,SAI9B,SAAC,KAAD,CAAWtc,GAAImV,EAAKmQ,IAAK/iB,UAAW,GAAI5H,WAAWoF,EAAAA,EAAAA,GAtBjC,sBAsBsDoC,QAASA,KAEjF,eAAIxH,UAAS,UAAKsJ,EAAL,UAAb,SAAsC5C,EAAc8T,EAAKpT,QAExD8qB,IACC,iBACElyB,WAAWoF,EAAAA,EAAAA,GAAK,GAAD,OACVkE,EADU,aAEbyE,EAAAA,EAAAA,IAAkB,YAAa,CAAEokB,MAAO,OAAQC,UAAU,SAMrE,C,mLClFYrQ,EAAmB,SAACsQ,GAC/B,IAAMtwB,EAAQua,EAAAA,GAAAA,QAAgB+V,GAC9B,OAAO5uB,KAAK6uB,IAAIvwB,GAAS,CAC1B,EAEYwwB,EAAkB,SAC7BC,EACAC,EACAC,EACAC,EACArvB,GAEA,IAAMsvB,EAAmB,iBACnBC,EAAWL,EAAM,IAAM,EAAI,OAAS,MAE1C,OAAOptB,EAAAA,EAAAA,GACLwtB,EADS,UAENA,EAFM,aAEeC,GACxBJ,GAAcC,IAAWF,GAAzB,UAAmCI,EAAnC,YACAD,GAAcrvB,IAAWkvB,GAAzB,UAAmCI,EAAnC,YAEH,EAEYE,EAAsB,SAACC,EAAezvB,GACjD,IAAM0vB,EAAO,wBACb,OAAI1vB,EAASyvB,IAAU,EAAS,GAAN,OAAUC,EAAV,UACO,IAA7BvvB,KAAK6uB,IAAIhvB,EAASyvB,GAAoB,GAAN,OAAUC,EAAV,YACH,IAA7BvvB,KAAK6uB,IAAIhvB,EAASyvB,GAAoB,GAAN,OAAUC,EAAV,YAC7B,EACR,EAEYC,EAAY,SAACF,EAAezvB,GACvC,OAAIA,EAASyvB,IAAU,EAAU,EACA,IAA7BtvB,KAAK6uB,IAAIhvB,EAASyvB,GAAqB,EACV,IAA7BtvB,KAAK6uB,IAAIhvB,EAASyvB,GAAqB,EACpC,CACR,EAKYG,EAAwB,SAACC,GACpC,IAAMC,EAA+B,CAAC,EAStC,OAPAD,EAAe7Y,SAAQ,SAACnM,QACapB,IAA/BqmB,EAAK1W,OAAOvO,EAAO4kB,UACrBK,EAAK1W,OAAOvO,EAAO4kB,QAAU,GAE/BK,EAAK1W,OAAOvO,EAAO4kB,SAAW,CAC/B,IAEM9V,OAAOsG,KAAK6P,GAAM7xB,MAC1B,C,uECpDM,SAAS6hB,EAAT,GAAwC,IAAxBzY,EAAuB,EAAvBA,SACrB,OACE,iBACE/I,MAAM,6BACN6J,WAAW,+BACX5K,QAAQ,oBACRiB,MAAO,CAAEpB,MAAO,OAAQ2H,SAAU,SAJpC,WAME,6BACE,4BAAgBhD,GAAG,IAAIsG,GAAG,QAAQC,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,cAAc,iBAApF,WACE,iBAAMC,OAAO,IAAIC,UAAU,aAC3B,iBAAMD,OAAO,IAAIC,UAAU,aAE7B,2BACE5G,GAAG,IACHsG,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,GAAG,SACHI,UAAU,QAEZ,2BACE7G,GAAG,IACHsG,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,GAAG,SACHI,UAAU,WAGd,iBACEjK,KAAK,UACLD,EAAE,kFAEJ,iBACEC,KAAK,UACLD,EAAE,kFAEJ,iBACEC,KAAK,UACLD,EAAE,uFAEJ,iBACEC,KAAK,OACLD,EAAE,gHAEJ,iBACEC,KAAK,UACLD,EAAE,6HAEJ,iBACEC,KAAK,OACLD,EAAE,wRAEJ,iBACEC,KAAK,UACLD,EAAE,6FAEJ,iBACEC,KAAK,UACLD,EAAE,6FAEJ,iBACEC,KAAK,UACLD,EAAE,mFAEJ,iBACEC,KAAK,OACLD,EAAE,+GAEJ,iBACEC,KAAK,UACLD,EAAE,yHAEJ,iBACEC,KAAK,OACLD,EAAE,oRAGJ,0BAAeX,EAAE,MAAMC,EAAE,KAAKZ,MAAM,MAAMC,OAAO,MAAjD,SACG+K,QAAQf,GAAYA,EAAS,KAAOA,EAAU,MAGjD,0BAAetJ,EAAE,MAAMC,EAAE,KAAKZ,MAAM,MAAMC,OAAO,MAAjD,SACG+K,QAAQf,GAAYA,EAAS,KAAOA,EAAU,KAGhDe,QAAQf,GAAYA,EAAS,MAC5B,iBAAM1I,KAAK,OAAOD,EAAE,iEAGtB,0BAAeX,EAAE,MAAMC,EAAE,KAAKZ,MAAM,MAAMC,OAAO,MAAjD,SACG+K,QAAQf,GAAYA,EAAS,KAAOA,EAAU,OAItD,C,8JCnFM,SAASgb,EAAT,GAAwE,IAAhDxX,EAA+C,EAA/CA,OAAQyX,EAAuC,EAAvCA,WAAYyN,EAA2B,EAA3BA,KACjD,GAA6Bpf,EAAAA,EAAAA,UAC3B,wBAAMqf,EAAAA,EAAAA,IAAmB,UAACnlB,EAAOmX,sBAAR,QAA0B,CAAC,EAApD,GACA,CAACnX,EAAOmX,iBAFV,eAAOC,EAAP,KAAiBE,EAAjB,KAKA,OACE,iBAAKzlB,UAAU,kBAAf,WACE,SAAC,KAAD,CACEmO,OAAQA,EACR4X,UAAQ,EACR/lB,UAAU,yBACVL,KAAM0zB,GAAO,SAAC,IAAD,SAAuBtmB,IAErCwY,EAASrkB,KAAI,SAACmE,EAAItD,GACjB,OACE,iBACE/B,UAAU,0DADZ,WAIE,SAAC,KAAD,CAAYL,MAAM,SAAC,IAAD,IAAa2G,KAAK,UACnCoF,QAAQrG,IACP,SAAC,IAAD,CAAW3E,MAAOklB,EAAYvgB,GAAIA,KAElC,gBACErF,UAAU,yBACV8B,MAAO,CAAEpB,MAAM,GAAD,OAAKklB,EAAL,MAAqBjlB,OAAO,GAAD,OAAKilB,EAAL,WAV/C,cAEczX,EAAO9I,GAFrB,YAE2BA,EAF3B,YAEiCtD,GAapC,IACA0jB,EAASvkB,KAAI,SAACmE,EAAItD,GACjB,OACE,iBACE/B,UAAU,0DADZ,WAIE,SAAC,KAAD,CAAYL,MAAM,SAAC,IAAD,IAAY2G,KAAK,UAClCoF,QAAQrG,IACP,SAAC,IAAD,CAAW3E,MAAOklB,EAAYvgB,GAAIA,KAElC,gBACErF,UAAU,yBACV8B,MAAO,CAAEpB,MAAM,GAAD,OAAKklB,EAAL,MAAqBjlB,OAAO,GAAD,OAAKilB,EAAL,WAV/C,cAEczX,EAAO9I,GAFrB,YAE2BA,EAF3B,YAEiCtD,GAapC,MAGN,C,gJC5DYwxB,EAAgB,SAC3BhO,EACAE,GAEA,IAAM2N,EAA0B,CAAC,EAIjC,OAHAnW,OAAOsG,KAAKgC,GAAUjL,SAAQ,SAACqQ,GAAD,OAAUyI,EAAKzI,IAAO,CAAtB,IAC9B1N,OAAOsG,KAAKkC,GAAUnL,SAAQ,SAACqQ,GAAD,OAAUyI,EAAKzI,IAAO,CAAtB,IAEvByI,CACR,EAEYE,EAAsB,SAACE,GAClC,IAAMjO,EAAqB,GACrBE,EAAqB,GAU3B,IARAxI,OAAOsG,KAAKiQ,GAAQlZ,SAAQ,SAACjV,GACvBmuB,EAAOnuB,GACTkgB,EAASvf,KAAKX,GAEdogB,EAASzf,KAAKX,EAEjB,IAEMkgB,EAAShkB,OAAS,GACvBgkB,EAASvf,KAAK,IAGhB,KAAOyf,EAASlkB,OAAS,GACvBkkB,EAASzf,KAAK,IAGhB,MAAO,CAACuf,EAAUE,EACnB,EAQYgO,EAAa,SAAC7lB,EAAsB8lB,GAC/C,IAAMC,EAA0C,CAAC,EAajD,OAXA1W,OAAOsG,KAAKmQ,GAAOpZ,SAAQ,SAACsZ,GAC1B,IAAMxlB,EAAWwlB,EAAYC,MAAMC,EAAAA,IAAW,GACxCC,EAAcL,EAAME,GAAaC,MAAMC,EAAAA,IAAW,QAEzB/mB,IAA3B4mB,EAAUI,KACZJ,EAAUI,GAAe,IAG3BJ,EAAUI,GAAa/tB,KAAK4H,EAAQQ,GACrC,IAEMulB,CACR,EAOYK,EAAiB,SAACN,GAC7B,IAAMO,EAA2B,CAAC,EASlC,OAPAhX,OAAOsG,KAAKmQ,GAAOpZ,SAAQ,SAACsZ,GAC1B,IAAMxlB,EAAWwlB,EAAYC,MAAMC,EAAAA,IAAW,GACxCC,EAAcL,EAAME,GAAaC,MAAMC,EAAAA,IAAW,GAExDG,EAAO7lB,GAAY2lB,CACpB,IAEME,CACR,C,kFCpFM,SAASC,EAAeprB,GAC7B,OACE,iCAAKlH,MAAM,6BAA6Bf,QAAQ,eAAkBiI,GAAlE,eACE,iBACE7G,KAAK,UACLD,EAAE,8LAEJ,iBACEC,KAAK,UACLD,EAAE,kMAEJ,iBACEC,KAAK,UACLD,EAAE,6YAEJ,iBAAMC,KAAK,UAAUD,EAAE,uEACvB,iBACEC,KAAK,UACLD,EAAE,6iBAEJ,iBACEC,KAAK,UACLD,EAAE,2GAEJ,iBACEC,KAAK,UACLD,EAAE,yMAEJ,iBACEC,KAAK,UACLD,EAAE,wMAEJ,iBACEC,KAAK,UACLD,EAAE,+LAEJ,iBACEC,KAAK,UACLD,EAAE,wFAEJ,iBACEC,KAAK,UACLD,EAAE,+GAEJ,iBACEC,KAAK,UACLD,EAAE,uFAEJ,iBACEC,KAAK,UACLD,EAAE,uSAEJ,iBACEC,KAAK,UACLD,EAAE,2GAEJ,iBAAMA,EAAE,wRACR,iBAAMA,EAAE,y7CACR,iBAAMA,EAAE,8yCAGb,C,kFC7DM,SAASmyB,EAASrrB,GACvB,OACE,iCAAKlH,MAAM,6BAA6Bf,QAAQ,eAAkBiI,GAAlE,eACE,iBACE7G,KAAK,UACLD,EAAE,oMAEJ,iBACEC,KAAK,UACLD,EAAE,iSAEJ,iBAAMA,EAAE,0xCAGb,C,uECZKoyB,EAAW,CAAC,OAAQ,OAAQ,OAAQ,QACpCC,EAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAAU,UAAW,WAAS,UAC/EC,EAAY,CAChB,OACA,OACA,OACA,OACA,OACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,OACA,QACA,OACA,OACA,SACA,UACA,UACA,SACA,WACA,OACA,WACA,OACA,OACA,cACA,SACA,SACA,QAGWpZ,EAAW,WAA8D,IAA7DqZ,EAA4D,uDAAtB,UACvDC,EAAO,CACXC,IAAKL,EACLM,QAASL,EACTM,KAAML,GACNC,GAEF,OAAO3Z,EAAAA,EAAAA,GAAc4Z,EACtB,C,gFC9CKI,EAAiB,CACrB,CACE,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACpG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GACvG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,KAC/F,OAEF,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,MAAO,OAEd,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACtG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,MAE/B,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEvC,CACE,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACtG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACrG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACvG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAE3D,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAErE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEvC,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,KAAM,GAAK,OAErF,CACE,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACpG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,KAAM,OAErD,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEzF,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEhE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAE1E,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEhE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,QAIvBla,EAAc,WACzB,OAAOma,EAAAA,EAAAA,YAAWD,GAAgBha,EAAAA,EAAAA,GAAc,CAAC,EAAG,EAAG,EAAG,EAAG,IAC9D,C","sources":["components/audio/ArteRuimTimerSound.tsx","components/audio/DJPruPruPruSound.tsx","components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/CharacterCard.tsx","components/cards/CrimeItemCard.tsx","components/cards/GroupQuestionCard.tsx","components/cards/MonsterCard.tsx","components/cards/MovieCard.tsx","components/cards/MovieReviewCard.tsx","components/cards/SuspectCard.tsx","components/cards/Card.tsx","components/game/BookPages.tsx","components/game/DoorFrame.tsx","components/game/SceneTile.tsx","components/game/SuggestionEasel.tsx","components/general/Achievements.tsx","components/general/Container.tsx","components/image-cards/ImageBlurButton.tsx","components/image-cards/ImageBlurButtonContainer.tsx","components/image-cards/ImageCard.tsx","components/image-cards/ImageCardBack.tsx","components/image-cards/ImageCardButton.tsx","components/image-cards/ImageCardHand.tsx","components/image-cards/ImageCardPreloadHand.tsx","components/image-cards/ImageCardSelectButton.tsx","components/metrics/CardHighlight.tsx","components/metrics/MetricHighlight.tsx","components/metrics/PlayersHighlight.tsx","components/metrics/PointsHighlight.tsx","components/metrics/TimeHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","components/text/SpeechBubble.tsx","games/megamix/utils/api-requests.ts","games/megamix/utils/useColorizeBackground.ts","games/megamix/utils/helpers.ts","games/megamix/components/TrackIcon.tsx","games/megamix/utils/constants.ts","games/megamix/components/TrackInstructions.tsx","games/megamix/components/ClubLine.tsx","games/megamix/components/FallbackComponent.tsx","games/megamix/utils/mock.ts","games/megamix/components/MinigameTitle.tsx","games/megamix/components/Tracks/TrackArteRuim.tsx","games/megamix/components/Tracks/TrackLabirintoSecreto.tsx","games/megamix/components/Tracks/TrackContadoresHistorias.tsx","games/megamix/components/Tracks/TrackCrimesHediondos.tsx","components/general/SpreadsheetGrid.tsx","games/megamix/components/Tracks/TrackCruzaPalavras.tsx","games/megamix/components/Tracks/TrackDetetivesImaginativos.tsx","games/megamix/components/Tracks/TrackDilemaDosEsquiadores.tsx","games/megamix/components/Tracks/TrackEspiaoEntreNos.tsx","games/megamix/components/Tracks/TrackFileiraDeFatos.tsx","games/megamix/components/Tracks/TrackGaleriaDeSonhos.tsx","games/megamix/components/Tracks/TrackMenteColetiva.tsx","games/megamix/components/Candidate.tsx","games/megamix/components/Tracks/TrackNamoroOuAmizade.tsx","games/megamix/components/Tracks/TrackNaRuaDoMedo.tsx","games/megamix/components/Tracks/TrackOndaTelepatica.tsx","games/megamix/components/Tracks/TrackPalhetaDeFores.tsx","components/game/SocialProfile.tsx","games/megamix/components/Tracks/TrackPolemicaDaVez.tsx","games/megamix/components/Tracks/TrackPortaDosDesesperados.tsx","games/megamix/components/Tracks/TrackQuemNaoMata.tsx","games/megamix/components/Tracks/TrackRetratoFalado.tsx","games/megamix/components/Tracks/TrackSuperCampeonato.tsx","games/megamix/components/Tracks/TrackTestemunhaOcular.tsx","games/megamix/components/Tracks/TrackUeSoIsso.tsx","games/megamix/components/Tracks/TrackVamosAoCinema.tsx","games/megamix/components/Tracks/TrackMegamixBestOfThree.tsx","games/megamix/components/Tracks/TrackMegamixThisThat.tsx","games/megamix/components/Tracks/TrackComunicacaoAlienigena.tsx","games/megamix/components/Tracks/TrackQuemSouEu.tsx","games/megamix/components/Tracks/TrackTaNaCara.tsx","games/megamix/components/Tracks/TrackMegamixWhoSaidThis.tsx","games/megamix/StepTrack.tsx","games/megamix/components/TrackTitle.tsx","games/megamix/components/RulesBlobs.tsx","games/megamix/PhaseTrack.tsx","games/megamix/components/Seeds/SeedArteRuim.tsx","games/megamix/components/Seeds/SeedLabirintoSecreto.tsx","games/megamix/components/Seeds/SeedClubber.tsx","games/megamix/components/Seeds/SeedOndaTelepatica.tsx","games/megamix/components/Seeds/SeedPolemicaDaVez.tsx","games/megamix/components/Seeds/SeedRetratoFalado.tsx","games/megamix/components/SVGPhone.tsx","games/megamix/components/Seeds/SeedUeSoIsso.tsx","games/megamix/components/Seeds/SeedMenteColetiva.tsx","games/megamix/components/Seeds/SeedContadoresHistorias.tsx","games/megamix/components/Seeds/SeedParty.tsx","games/megamix/StepSeeding.tsx","games/megamix/PhaseSeeding.tsx","games/megamix/components/WinningCount.tsx","games/megamix/components/Results/ResultArteRuim.tsx","games/megamix/components/Results/ResultCruzaPalavras.tsx","games/megamix/components/Results/ResultNamoroOuAmizade.tsx","games/megamix/components/Results/ResultNaRuaDoMedo.tsx","games/megamix/components/Results/ResultRetratoFalado.tsx","games/megamix/components/Results/ResultVamosNoCinema.tsx","games/megamix/components/Results/ResultMegamix.tsx","games/megamix/components/Results/ResultImage.tsx","games/megamix/components/Results/ResultText.tsx","games/megamix/components/Results/ResultCharacter.tsx","games/megamix/components/Results/ResultOndaTelepatica.tsx","games/megamix/components/Results/ResultComunicacaoAlienigena.tsx","games/megamix/components/Results/ResultTaNaCara.tsx","games/megamix/components/Results/ResultLabirintoSecreto.tsx","games/megamix/components/Results/ResultPalhetaDeCores.tsx","games/megamix/components/Results/ResultQuemNaoMata.tsx","games/megamix/components/Results/ResultWhoSaidThis.tsx","games/megamix/components/ResultValueDelegator.tsx","games/megamix/components/SpacePlayerCheckWrapper.tsx","games/megamix/components/Votes/VoteArteRuim.tsx","games/megamix/components/Votes/VoteCruzaPalavras.tsx","games/megamix/components/Votes/VoteNamoroOuAmizade.tsx","games/megamix/components/Votes/VoteNaRuaDoMedo.tsx","games/megamix/components/Votes/VoteRetratoFalado.tsx","games/megamix/components/Votes/VoteVamosAoCinema.tsx","games/megamix/components/Votes/VoteMegamix.tsx","games/megamix/components/Votes/VoteImagesTrack.tsx","games/megamix/components/Votes/VoteValue.tsx","games/megamix/components/Votes/VoteOndaTelepatica.tsx","games/megamix/components/Votes/VoteCharacterTrack.tsx","games/megamix/components/Votes/VotePalhetaDeCores.tsx","games/megamix/components/Votes/VoteQuemNaoMata.tsx","games/megamix/components/Votes/VoteComunicacaoAlienigena.tsx","games/megamix/components/Votes/VoteTaNaCara.tsx","games/megamix/components/Votes/VoteLabirintoSecreto.tsx","games/megamix/components/Votes/VoteWhoSaidThis.tsx","games/megamix/components/VotesDelegator.tsx","games/megamix/StepResult.tsx","games/megamix/StepRanking.tsx","games/megamix/PhaseResult.tsx","games/megamix/PhaseGameOver.tsx","games/megamix/SessionMegamix.tsx","games/megamix/utils/achievements.ts","games/na-rua-do-medo/components/CandyCount.tsx","games/na-rua-do-medo/components/HouseCard.tsx","games/onda-telepatica/utils/helpers.ts","games/porta-dos-desesperados/components/Book.tsx","games/quem-sou-eu/components/PlayerGlyphs.tsx","games/quem-sou-eu/utils/helpers.ts","icons/ImageCardsIcon.tsx","icons/StarIcon.tsx","mock/clues.ts","mock/drawing.ts"],"sourcesContent":["import { useGlobalState } from 'hooks/useGlobalState';\nimport { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer-remix.mp3');\n\nexport function ArteRuimTimerSound() {\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n    autoPlay: true,\n    loop: false,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  return <>{audio}</>;\n}\n","import { useGlobalState } from 'hooks/useGlobalState';\nimport { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Sound\nconst airHorn = require('assets/sounds/airhorn.mp3');\n\nexport function DJPruPruPruSound() {\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: airHorn,\n    autoPlay: true,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  return <>{audio}</>;\n}\n","// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px` }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design resources\nimport { Image } from 'antd';\n// Types\nimport type { ContenderCard } from 'types/tdr';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\n// Sass\nimport './CharacterCard.scss';\n\nexport type OverlayColor = 'blue' | 'gray' | 'green' | 'orange' | 'pink' | 'purple' | 'red' | 'yellow';\n\ntype CharacterCardProps = {\n  /**\n   * The size of the card\n   */\n  size: number;\n  /**\n   * The color of the overlay\n   */\n  overlayColor?: OverlayColor;\n  /**\n   * The character object\n   */\n  character: ContenderCard;\n  /**\n   * The class name to be appended to the container\n   */\n  className?: string;\n  /**\n   * Whether the name should be hidden or not\n   */\n  hideName?: boolean;\n};\n\nexport function CharacterCard({ size, overlayColor, character, className, hideName }: CharacterCardProps) {\n  const { dualTranslate } = useLanguage();\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const isBlurred = shouldBeBlurred(character.id);\n\n  const imageURL = character.id.replace(/-/g, '/');\n\n  return (\n    <ImageBlurButtonContainer cardId={character.id}>\n      <div className={clsx('character-card', className)} style={{ width: `${size}px` }}>\n        {!hideName && (\n          <span className=\"character-card__name\">\n            <DualTranslate>{character.name}</DualTranslate>\n          </span>\n        )}\n        {overlayColor && (\n          <img\n            src={`${PUBLIC_URL.IN_GAME}/w-overlay-${overlayColor}.png`}\n            className=\"character-card__overlay\"\n            alt=\"character\"\n            style={{ width: `${size}px` }}\n          />\n        )}\n        <Image\n          src={`${baseUrl}${imageURL}.jpg`}\n          width={size}\n          className={clsx('character-card__image', isBlurred && 'character-card__image--blur')}\n          fallback={`${PUBLIC_URL.IN_GAME}/w-no-image.jpg`}\n          alt={dualTranslate(character.name)}\n          preview={false}\n          title={dualTranslate(character.name)}\n        />\n      </div>\n    </ImageBlurButtonContainer>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Popover, Tag } from 'antd';\n// Types\nimport type { CrimesHediondosCard } from 'types/tdi';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { DualTranslate } from 'components/language';\n// Sass\nimport './CrimeItemCard.scss';\n\ntype CrimeItemCardProps = {\n  /**\n   * Crime item\n   */\n  item: CrimesHediondosCard;\n  /**\n   * Card width\n   */\n  cardWidth: number;\n  /**\n   * Whether to enable the preview or not\n   */\n  preview?: boolean;\n  /**\n   * Whether the card is selected or not\n   */\n  isSelected?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional active color\n   */\n  activeColor?: string;\n};\n\nexport function CrimeItemCard({\n  item,\n  cardWidth,\n  activeColor,\n  preview = true,\n  isSelected = false,\n  className = '',\n}: CrimeItemCardProps) {\n  const { dualTranslate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  return (\n    <ImageBlurButtonContainer cardId={item.id}>\n      <div\n        className={clsx('crime-item-card', isSelected && 'crime-item-card--selected', className)}\n        style={activeColor && isSelected ? { borderColor: 'black', backgroundColor: activeColor } : {}}\n      >\n        <Popover content={dualTranslate(item.name).toUpperCase()}>\n          <Tag\n            className=\"crime-item-card__name\"\n            color={item.type === 'weapon' ? 'geekblue' : 'volcano'}\n            style={{ maxWidth: `${cardWidth + 16}px` }}\n          >\n            <span>{isDebugEnabled ? item.id : <DualTranslate>{item.name}</DualTranslate>}</span>\n          </Tag>\n        </Popover>\n        <ImageCard id={item.id} cardWidth={cardWidth} className=\"crime-item-card__image\" preview={preview} />\n      </div>\n    </ImageBlurButtonContainer>\n  );\n}\n","// Type\nimport type { GroupQuestionCard as GroupQuestionCardType } from 'types/tdr';\n// Sass\nimport './GroupQuestionCard.scss';\n\ntype GroupQuestionCardProps = {\n  /**\n   * The question to be displayed\n   */\n  question: GroupQuestionCardType;\n  /**\n   * The number to be displayed. If not provided, the question's number will be used.\n   */\n  overrideNumber?: number;\n};\n\nexport function GroupQuestionCard({ question, overrideNumber }: GroupQuestionCardProps) {\n  return (\n    <span className=\"group-question-card group-question-card--span\">\n      <span className=\"group-question-card__prefix\">{question.prefix}</span>\n      <span className=\"group-question-card__number\">{overrideNumber ?? question.number}</span>\n      <span className=\"group-question-card__suffix\">{question.suffix}</span>\n    </span>\n  );\n}\n","import clsx from 'clsx';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, Space, SpaceProps } from 'antd';\nimport { RotateLeftOutlined, RotateRightOutlined } from '@ant-design/icons';\n// Types\nimport { type MonsterCard as MonsterCardType } from 'types/tdi';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\n// Sass\nimport './MonsterCard.scss';\n\ninterface MonsterCardProps extends SpaceProps {\n  currentMonster: MonsterCardType;\n  showControls?: boolean;\n  cardWidth?: number;\n}\n\nexport function MonsterCard({ currentMonster, showControls = true, cardWidth, ...props }: MonsterCardProps) {\n  const [monsterOrientation, setMonsterOrientation] = useGlobalState('monsterOrientation');\n  const defaultCardWidth = useCardWidth(5, { gap: 16, maxWidth: 360 });\n\n  useEffectOnce(() => {\n    if (currentMonster.orientation === 'horizontal') {\n      setMonsterOrientation(currentMonster.orientation);\n    }\n  });\n\n  const onChangeOrientation = () => {\n    const newOrientation = monsterOrientation === 'vertical' ? 'horizontal' : 'vertical';\n    setMonsterOrientation(newOrientation);\n  };\n\n  const baseClass = 'monster-card';\n  return (\n    <Space direction=\"vertical\" align=\"center\" {...props}>\n      <ImageCard\n        id={currentMonster.id}\n        cardWidth={cardWidth || defaultCardWidth}\n        className={clsx(\n          baseClass,\n          monsterOrientation === 'vertical' ? `${baseClass}--vertical` : `${baseClass}--horizontal`\n        )}\n      />\n      {showControls && (\n        <Button onClick={onChangeOrientation}>\n          {monsterOrientation === 'vertical' ? <RotateRightOutlined /> : <RotateLeftOutlined />}\n          <Translate pt=\"Girar\" en=\"Rotate\" />\n        </Button>\n      )}\n    </Space>\n  );\n}\n","import clsx from 'clsx';\n// Types\nimport type { MovieCard as MovieCardType } from 'types/tdr';\n// Sass\nimport './MovieCard.scss';\n\ntype MovieCardProps = {\n  movie: MovieCardType;\n  disableSuffix?: boolean;\n  suffixColor?: string;\n  disablePrefix?: boolean;\n  prefixColor?: string;\n};\n\nexport function MovieCard({ movie, disableSuffix, disablePrefix, prefixColor, suffixColor }: MovieCardProps) {\n  return (\n    <div className=\"movie-card\">\n      <div\n        className={clsx('movie-card__suffix', disableSuffix && 'movie-card__suffix--disabled')}\n        style={{ backgroundColor: !disableSuffix && suffixColor ? suffixColor : 'rgba(248, 248, 248, 0.6)' }}\n      >\n        {movie.suffix}\n      </div>\n\n      <div\n        className={clsx('movie-card__prefix', disablePrefix && 'movie-card__prefix--disabled')}\n        style={{ backgroundColor: !disablePrefix && prefixColor ? prefixColor : 'rgba(248, 248, 248, 0.6)' }}\n      >\n        {movie.prefix}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport HighlighterImport from 'react-highlight-words';\nimport { Translate } from 'components/language';\n// Sass\nimport './MovieReviewCard.scss';\n\n// TODO: Verify\nconst Highlighter = HighlighterImport as any;\n\ntype MovieReviewCardProps = {\n  /**\n   * The type of review\n   */\n  type: 'positive' | 'negative';\n  /**\n   * The review itself\n   */\n  text: string;\n  /**\n   * Optional list of words to be highlighted in the review\n   */\n  highlights?: string[];\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport const MovieReviewCard = ({ type, text, highlights = [], className = '' }: MovieReviewCardProps) => {\n  const baseClass = 'movie-review-card';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${type}`, className)}>\n      <span className={`${baseClass}__header`}>\n        {type === 'positive' ? (\n          <Translate pt=\"Crítica Positiva\" en=\"Positive Review\" />\n        ) : (\n          <Translate pt=\"Crítica Negativa\" en=\"Negative Review\" />\n        )}\n        {type === 'positive' ? ' 👏' : ' 🤮'}\n      </span>\n      <div className={`${baseClass}__content`}>\n        <Highlighter\n          className={`${baseClass}__text`}\n          highlightClassName={clsx(`${baseClass}__text-highlight`, `${baseClass}__text-highlight--${type}`)}\n          searchWords={highlights}\n          autoEscape={true}\n          textToHighlight={text}\n        />\n      </div>\n    </div>\n  );\n};\n","// Type\nimport { SuspectCard as SuspectCardType } from 'types/tdi';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { ImageCard } from 'components/image-cards';\n// Sass\nimport './SuspectCard.scss';\n\ntype SuspectCardProps = {\n  /**\n   * Suspect object\n   */\n  suspect: SuspectCardType;\n  /**\n   * Card width\n   */\n  width: number;\n  /**\n   * Hide the suspect name\n   */\n  hideName?: boolean;\n};\n\nexport function SuspectCard({ suspect, width, hideName }: SuspectCardProps) {\n  return (\n    <div className=\"suspect-card\" style={{ width: `${width}px` }}>\n      <ImageCard id={suspect.id} className=\"suspect-card__image\" cardWidth={width} preview={false} />\n      {!hideName && (\n        <div className=\"suspect-card__name\">\n          <DualTranslate>{suspect.name}</DualTranslate>\n        </div>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Sass\nimport './BookPages.scss';\n\ntype BookPagesProps = {\n  /**\n   * The left page content\n   */\n  leftPage: ReactNode;\n  /**\n   * The right page content\n   */\n  rightPage: ReactNode;\n  /**\n   * The class name to be applied to the component\n   */\n  className?: string;\n};\n\nexport function BookPages({ leftPage, rightPage, className }: BookPagesProps) {\n  return (\n    <svg viewBox=\"0 0 590 320\" className={clsx('book-pages', className)}>\n      <path\n        d=\"M4 12.46s71.16 8 145.65 0S295 16 295 16s90.78-12.42 156 0S586 5.14 586 5.14v296s-43.23 24.6-158.29 8S295 314 295 314s-94.44-17.89-143.33-3.59c-29.88 8.74-147.64-4-147.64-4z\"\n        fill=\"#ffffff\"\n      ></path>\n      <foreignObject x=\"13\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{leftPage}</div>\n      </foreignObject>\n\n      <foreignObject x=\"295\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{rightPage}</div>\n      </foreignObject>\n      <path d=\"M294.75 23.77h.5v280.66h-.5z\" fill=\"grey\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype DoorFrameProps = {\n  /**\n   * The optional children\n   */\n  children?: ReactNode;\n  /**\n   * The optional class name\n   */\n  className?: string;\n  /**\n   * The optional width\n   */\n  width?: number;\n  /**\n   * The optional index\n   */\n  index?: number;\n};\n\n/**\n * Door frame component\n */\nexport function DoorFrame({ children, width, index, className = '' }: DoorFrameProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 257.1 318.8\"\n      style={Boolean(width) ? { width: `${width}px` } : {}}\n      className={className}\n    >\n      <defs>\n        <linearGradient id=\"d\" x1=\"130.72\" x2=\"130.72\" y1=\"318.8\" y2=\"34.78\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0.03\" stopColor=\"#fdd3b6\"></stop>\n          <stop offset=\"0.31\" stopColor=\"#fbcdaa\"></stop>\n          <stop offset=\"0.81\" stopColor=\"#f5bd89\"></stop>\n          <stop offset=\"1\" stopColor=\"#f3b67b\"></stop>\n        </linearGradient>\n        <linearGradient id=\"a\" x1=\"130.72\" x2=\"130.72\" y1=\"65.32\" y2=\"14.51\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#fdd5b9\"></stop>\n          <stop offset=\"0.32\" stopColor=\"#fdd0b1\"></stop>\n          <stop offset=\"0.97\" stopColor=\"#fcc9a5\"></stop>\n        </linearGradient>\n        <linearGradient id=\"e\" x1=\"130.72\" x2=\"130.72\" y1=\"23.84\" y2=\"4.14\" xlinkHref=\"#a\"></linearGradient>\n        <linearGradient id=\"f\" x1=\"27.14\" x2=\"234.29\" y1=\"46.01\" y2=\"46.01\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#a16261\"></stop>\n          <stop offset=\"0.56\" stopColor=\"#b37572\"></stop>\n          <stop offset=\"1\" stopColor=\"#c48783\"></stop>\n        </linearGradient>\n        <linearGradient id=\"g\" x1=\"128.55\" x2=\"128.55\" y1=\"6.73\" y2=\"0\" xlinkHref=\"#a\"></linearGradient>\n        <linearGradient id=\"h\" x1=\"130.72\" x2=\"130.72\" y1=\"313.13\" y2=\"78.41\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#c48783\"></stop>\n          <stop offset=\"0.44\" stopColor=\"#b37572\"></stop>\n          <stop offset=\"1\" stopColor=\"#a16261\"></stop>\n        </linearGradient>\n        <linearGradient id=\"b\" x1=\"223.42\" x2=\"223.42\" y1=\"230.96\" y2=\"171.86\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#f3b67b\"></stop>\n          <stop offset=\"0.07\" stopColor=\"#f5bb86\"></stop>\n          <stop offset=\"0.24\" stopColor=\"#f8c69b\"></stop>\n          <stop offset=\"0.42\" stopColor=\"#fbcdaa\"></stop>\n          <stop offset=\"0.64\" stopColor=\"#fdd2b3\"></stop>\n          <stop offset=\"0.97\" stopColor=\"#fdd3b6\"></stop>\n        </linearGradient>\n        <linearGradient id=\"i\" x1=\"38\" x2=\"38\" y1=\"230.96\" y2=\"171.86\" xlinkHref=\"#b\"></linearGradient>\n        <linearGradient id=\"c\" x1=\"37.84\" x2=\"226.06\" y1=\"47.43\" y2=\"47.43\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#fcb645\"></stop>\n          <stop offset=\"1\" stopColor=\"#e3a129\"></stop>\n        </linearGradient>\n        <linearGradient id=\"j\" x1=\"38.38\" x2=\"38.38\" y1=\"198.04\" y2=\"193.37\" xlinkHref=\"#c\"></linearGradient>\n        <linearGradient\n          id=\"k\"\n          x1=\"223.04\"\n          x2=\"223.04\"\n          y1=\"198.04\"\n          y2=\"193.37\"\n          xlinkHref=\"#c\"\n        ></linearGradient>\n        <linearGradient id=\"l\" x1=\"43.98\" x2=\"217.44\" y1=\"313.74\" y2=\"313.74\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#623c57\"></stop>\n          <stop offset=\"1\" stopColor=\"#3d1931\"></stop>\n        </linearGradient>\n      </defs>\n      <g style={{ isolation: 'isolate' }}>\n        <path\n          fill=\"url(#d)\"\n          d=\"M236.27 34.78l-.6 30.02-.22 11.41-2.95 150.6-.2 10.11-1.6 81.88H30.74L25.99 76.21l-.23-11.41-.59-30.02h211.1z\"\n        ></path>\n        <path\n          d=\"M235.67 64.8l-.22 11.41H25.99l-.23-11.41h209.91z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.7\"\n        ></path>\n        <path fill=\"url(#a)\" d=\"M16.7 14.51h228.02v50.81H16.7z\"></path>\n        <path\n          d=\"M16.7 14.51h228.02V31.1H16.7z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.55\"\n        ></path>\n        <path\n          fill=\"url(#e)\"\n          d=\"M252.77 4.14l-.09.53-1.28 6.73-2.34 12.44H12.38L10.04 11.4 8.76 4.67l-.1-.53h244.11z\"\n        ></path>\n        <path fill=\"url(#f)\" d=\"M27.14 35.51h207.15v21H27.14z\"></path>\n        <path\n          d=\"M31.78 39.01h202.51v-3.5H27.14v21h4.64v-17.5z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.85\"\n        ></path>\n        <path fill=\"#f3b67b\" d=\"M220.07 79.83l-1.84 228.64h5.06l4.16-228.64h-7.38z\"></path>\n        <path\n          d=\"M220.7 307.95l1.84-228.12h-2.47l-1.84 228.64h5.06l.02-.52h-2.61z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.5\"\n        ></path>\n        <path fill=\"#fee0cc\" d=\"M226.05 79.83l-4.15 228.25h-3.67v.39h5.06l4.16-228.64h-1.4z\"></path>\n        <path fill=\"#f3b67b\" d=\"M34.25 79.6l4.4 228.6 5.06-.23-2.08-228.65-7.38.28z\"></path>\n        <path\n          d=\"M41.11 307.64L36.72 79.55l-2.47.05 4.4 228.6 5.06-.23v-.52l-2.6.19z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.5\"\n        ></path>\n        <path fill=\"#fee0cc\" d=\"M40.23 79.35l2.08 228.26-3.67.21.01.38 5.06-.23-2.08-228.65-1.4.03z\"></path>\n        <path fill=\"#f3b67b\" d=\"M53.68 23.84h-12.3L40 7.77l-1.15-3.64h14.38l-.44 2.6z\"></path>\n        <path\n          fill=\"#f3b67b\"\n          d=\"M147.26.9l-.32 3.24-1.93 19.7h-26.86l.33-19.7.02-1.29L147.26.9z\"\n          opacity=\"0.5\"\n        ></path>\n        <path\n          d=\"M252.68 4.67l-1.28 6.73H10.04L8.76 4.67h243.92z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.55\"\n        ></path>\n        <path fill=\"url(#g)\" d=\"M0 0h257.1v6.73H0z\"></path>\n        <path\n          d=\"M188.24 0l-.5 6.74h-22.52l.24-6.74h22.78zM98.41 0l-.06 6.74h-39.4L58 0h40.41z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          fill=\"url(#h)\"\n          d=\"M213.58 78.41l-.43 24.81-.17 9.44-3.49 200.47H51.95l-3.5-200.47-.16-9.44-.44-24.81h165.73z\"\n        ></path>\n        <path\n          d=\"M232.5 226.81l-.2 10.11h-21.48l.17-10.11h21.51z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path\n          fill=\"url(#b)\"\n          d=\"M237.27 173.42l-.26 5.44-.11 2.26-.11 2.66-.45 9.59-.22 4.67-.11 2.15-1.39 29.47h-25.04l.14-29.47.02-2.15.02-2.33v-2.34l.06-9.59.02-2.66v-2.26l.03-5.44h27.4z\"\n        ></path>\n        <path\n          d=\"M237.01 178.86l-.22 4.92h-26.97l.02-4.92h27.17z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"#fddbc5\" d=\"M240.6 181.13h-31.03v-8.04h32.27l-1.24 8.04z\"></path>\n        <path\n          d=\"M50.62 236.92h-21.5l-.2-10.11h21.53l.17 10.11z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path\n          fill=\"url(#i)\"\n          d=\"M51.84 229.66H26.8l-1.39-29.47-.11-2.15-.22-4.67-.45-9.59-.11-2.66-.11-2.26-.26-5.44h27.4l.03 5.44v2.27l.02 2.65.06 9.59v2.34l.01 2.33.02 2.15.15 29.47z\"\n        ></path>\n        <path\n          d=\"M24.4 178.86l.23 4.92h26.96l-.01-4.92H24.4z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"#fddbc5\" d=\"M20.81 181.13h31.03v-8.04H19.57l1.24 8.04z\"></path>\n        <path fill=\"#bb7d2a\" d=\"M36.91 42.51h190.08v9.85H36.91z\"></path>\n        <path fill=\"url(#c)\" d=\"M37.84 43.28h188.22v8.29H37.84z\"></path>\n        <path\n          d=\"M99.34 52.35H64.85l-6.77-9.84h34.47l6.79 9.84zm27.03 0H113.4l-6.79-9.84h12.99l6.77 9.84z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M51.69 200.19H25.41l-.11-2.15-.11-2.33h26.47l.01 2.33.02 2.15z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"url(#j)\" d=\"M51.67 198.04H25.3l-.22-4.67h26.58v2.34l.01 2.33z\"></path>\n        <path\n          d=\"M37.24 198.04h-3.48l-5.57-4.67h10.49l-1.44 4.67z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M236.23 195.71l-.11 2.33-.11 2.15h-26.29l.02-2.15.02-2.33h26.47z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"url(#k)\" d=\"M236.34 193.37l-.22 4.67h-26.38l.02-2.33v-2.34h26.58z\"></path>\n        <path\n          d=\"M222.26 198.04h-3.48l-5.57-4.67h10.48l-1.43 4.67z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path fill=\"url(#l)\" d=\"M43.98 308.69h173.47v10.11H43.98z\"></path>\n        <path\n          d=\"M75.98 308.69L74.9 318.8H56.5l-.65-10.11h20.13z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M138.19 308.68c-.21 3.47-.39 6.93-.56 10.11h-18.92l-1.08-10.11z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.15\"\n        ></path>\n        <path\n          d=\"M199.58 308.68l-.6 10.11h-9l-1-10.11zM87.41 308.69l-.56 10.11h-5.97l-1.69-10.11h8.22z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#98616c\"\n          opacity=\"0.45\"\n        ></path>\n        <path\n          fill=\"#231f20\"\n          stroke=\"#231f20\"\n          strokeMiterlimit=\"10\"\n          d=\"M54.95 84.1h150v225h-150z\"\n          opacity=\"0.59\"\n        ></path>\n\n        <foreignObject x=\"53\" y=\"82\" width=\"150\" height=\"225\">\n          {children}\n        </foreignObject>\n      </g>\n\n      {index === 0 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M143.46 61.65l-3.94-8.88h-18.29l-4 8.88h-3.89l15.32-33.84h3.55l15.31 33.84zm-20.74-12.29H138l-7.6-17.14z\"\n        ></path>\n      )}\n      {index === 1 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M143.12 36.45a8.12 8.12 0 01-5.32 7.82c4 1.2 7.2 3.51 7.2 8.16 0 5.81-4.85 9.22-12.2 9.22h-14.93v-33.6h14.31c6.62 0 10.94 3.26 10.94 8.4zm-3.84.52c0-3.36-2.64-5.52-7.44-5.52h-10.22V43h9.93c4.57 0 7.73-2 7.73-6zm1.88 15.22c0-3.7-3.08-5.81-8.93-5.81h-10.61v11.86h11.28c5.1 0 8.26-2.24 8.26-6.05z\"\n        ></path>\n      )}\n      {index === 2 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M132.85 62.22c-9.7 0-16.85-7.63-16.85-17.33s7.11-17.42 17-17.42a17.48 17.48 0 0113.1 5.33l-2.59 2.78c-2.83-2.69-6-4.61-10.56-4.61-7.44 0-13 6-13 13.83s5.61 13.92 13 13.92c4.61 0 7.63-1.78 10.85-4.85l2.49 2.45c-3.5 3.55-7.29 5.9-13.44 5.9z\"\n        ></path>\n      )}\n      {index === 3 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M128.1 61.65h-11.67v-33.6h11.67c10.56 0 17.86 7.24 17.86 16.75s-7.3 16.85-17.86 16.85zm0-30.1h-7.87v26.59h7.87c8.49 0 13.92-5.76 13.92-13.25s-5.43-13.34-13.92-13.34z\"\n        ></path>\n      )}\n      {index === 4 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M122.91 31.5V43h18.34v3.46h-18.34v11.73h20.74v3.46h-24.53v-33.6h24.29v3.45z\"\n        ></path>\n      )}\n      {index === 5 && (\n        <path fill=\"#3d1931\" d=\"M123.25 31.55v12h18.19V47h-18.19v14.65h-3.79v-33.6h24.14v3.5z\"></path>\n      )}\n      {index === 6 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M132 62.22c-10.56 0-17.09-7.68-17.09-17.33 0-9.26 6.77-17.42 16.85-17.42a17.72 17.72 0 0112.53 4.46l-2.45 2.88A14.32 14.32 0 00131.6 31c-7.44 0-12.77 6.29-12.77 13.83 0 8.06 5.14 14 13.3 14a15.86 15.86 0 009.7-3.36V47.1H131.6v-3.41h13.88v13.4A20.39 20.39 0 01132 62.22z\"\n        ></path>\n      )}\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Types\nimport type { CrimeTile } from 'types/tdr';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Sass\nimport './SceneTile.scss';\n\ntype SceneTileProps = {\n  /**\n   * Scene tile\n   */\n  tile: CrimeTile;\n  /**\n   * The optional answer index\n   */\n  index?: number;\n  /**\n   * Optional callback when a value is selected\n   */\n  onSelectValue?: GenericFunction;\n};\n\n/**\n * Scene tile component\n */\nexport function SceneTile({ tile, index, onSelectValue }: SceneTileProps) {\n  const { language } = useLanguage();\n  return (\n    <div className={clsx('scene-tile', `scene-tile--${tile.type}`)}>\n      <Popover content={tile.description[language]}>\n        <h4 className=\"scene-tile__title\">{tile.title[language]}</h4>\n      </Popover>\n      <ul className=\"scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          const isInative = index !== undefined && !isActive;\n          return (\n            <li key={`${tile.id}-value-${i}`}>\n              <Button\n                className={clsx(\n                  'scene-tile__button',\n                  `scene-tile__button--${tile.type}`,\n                  isInative && 'scene-tile__button--inactive'\n                )}\n                icon={isActive ? <CheckCircleFilled className=\"scene-tile__icon\" /> : undefined}\n                onClick={onSelectValue ? () => onSelectValue({ tileId: tile.id, value: i }) : () => {}}\n              >\n                {entry[language]}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Sass\nimport './SuggestionEasel.scss';\n\ntype SuggestionEaselProps = {\n  /**\n   * Unique identifier for the input\n   */\n  id: string;\n  /**\n   * Function to be called when the input changes\n   */\n  onChangeInput?: GenericFunction;\n  /**\n   * Function to be called when the user presses enter\n   */\n  onPressEnter?: GenericFunction;\n  /**\n   * Value of the input\n   */\n  value?: string;\n};\n\n/**\n * Component that renders a suggestion easel\n */\nexport function SuggestionEasel({ id, onChangeInput, onPressEnter, value }: SuggestionEaselProps) {\n  const { translate } = useLanguage();\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div>\n          <Input\n            placeholder={translate('Escreva dica aqui', 'Write here')}\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"suggestion-easel__input\"\n            bordered={false}\n            onPressEnter={onPressEnter}\n            autoComplete=\"off\"\n            readOnly={!onChangeInput}\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Types\nimport type { GamePlayers } from 'types/player';\nimport type { Achievement, AchievementReference } from 'types/achievements';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  if (achievements.length === 0) return <></>;\n\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n// Components\nimport { Title, TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: TitleProps;\n  childrenContainerProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  childrenContainerProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = childrenContainerProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks/useBlurCards';\n// Components\nimport { Translate } from 'components/language';\n// Sass\nimport './ImageBlurButton.scss';\n\ntype ImageBlurButtonProps = {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n};\n\nexport function ImageBlurButton({ cardId, ghost = true }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled, shouldBeBlurred } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost={ghost} onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        {shouldBeBlurred(cardId) ? (\n          <>\n            <EyeOutlined /> <Translate pt=\"Descredar\" en=\"Focus\" />\n          </>\n        ) : (\n          <>\n            <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n          </>\n        )}\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { ImageBlurButton } from './ImageBlurButton';\n// Sass\nimport './ImageBlurButtonContainer.scss';\n\ninterface ImageBlurButtonContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * The content the component is wrapping\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The position of the button (default: bottom)\n   */\n  position?: 'top' | 'bottom';\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n}\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  children,\n  className = '',\n  position = 'bottom',\n  ghost = true,\n  ...rest\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...rest}>\n      {position === 'top' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n      {children}\n      {position === 'bottom' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image, ImageProps } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Sass\nimport './ImageCard.scss';\n\nexport type ImageCardProps = {\n  /**\n   * The id of the image\n   */\n  id: string;\n  /**\n   * The width of the card (Default: 200px)\n   */\n  cardWidth?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Enables or disables the preview (default: true)\n   */\n  preview?: ImageProps['preview'];\n  /**\n   * Replacement image when the preview is open\n   */\n  previewImageId?: string;\n  /**\n   * The file extension for the image (default: jpg)\n   */\n  fileExtension?: 'jpg' | 'png' | 'gif';\n  /**\n   * Forces height to be the same as the width\n   */\n  square?: boolean;\n};\n\n/**\n * Renders an Image Card on tdi\n */\nexport const ImageCard = ({\n  id,\n  cardWidth = 200,\n  className = '',\n  preview = true,\n  previewImageId = '',\n  fileExtension = 'jpg',\n  square = false,\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${id[id.length - 1]}`;\n\n  const imageURL = id.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(id);\n\n  const previewConfig = typeof preview === 'boolean' ? {} : preview;\n\n  return (\n    <div\n      className={clsx(\n        baseClass,\n        isBlurred && `${baseClass}--blur`,\n        square && `${baseClass}--square`,\n        className\n      )}\n      style={{ height: square ? `${cardWidth}px` : undefined }}\n    >\n      <Image\n        width={cardWidth}\n        src={`${baseUrl}/${imageURL}.${fileExtension}`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          isBlurred || !preview\n            ? false\n            : {\n                ...previewConfig,\n                maskClassName: clsx(`${baseClass}__preview-mask`, previewConfig?.maskClassName),\n                src: Boolean(previewImageId)\n                  ? `${baseUrl}/${previewImageId.replace(/-/g, '/')}.${fileExtension}`\n                  : previewConfig?.src,\n              }\n        }\n      />\n    </div>\n  );\n};\n","import { ImageCard, ImageCardProps } from './ImageCard';\n\ntype ImageCardBackProps = Omit<ImageCardProps, 'id'> & { id?: ImageCardId };\n\nexport const ImageCardBack = ({ id = 'back-default', ...rest }: ImageCardBackProps) => {\n  return <ImageCard id={id} {...rest} />;\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\nimport { DownCircleOutlined, UpCircleOutlined } from '@ant-design/icons';\n//  Components\nimport { Translate } from 'components/language';\nimport { DebugOnly } from 'components/debug';\nimport { ImageBlurButtonContainer } from './ImageBlurButtonContainer';\n// Sass\nimport './ImageCardButton.scss';\n\ntype ImageCardButtonProps = {\n  /**\n   * The id of the image\n   */\n  id: string;\n  /**\n   * The content, usually a ImageCard component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name for the container\n   */\n  className?: string;\n  /**\n   * The position of the button (default: top)\n   */\n  buttonPosition?: 'top' | 'bottom';\n  /**\n   * The button is over the image (default: false)\n   */\n  over?: boolean;\n  /**\n   * Button icon replacement\n   */\n  icon?: ReactNode;\n  /**\n   * The function to be called when the button is clicked\n   */\n  onClick?: (...args: any) => void;\n  /**\n   * Disables the button (default: false)\n   */\n  disabled?: boolean;\n  /**\n   * The text for the button\n   */\n  buttonText?: ReactNode;\n  /**\n   * The props for the button\n   */\n  buttonProps?: Omit<ButtonProps, 'onClick' | 'disabled'>;\n};\n\nexport function ImageCardButton({\n  id,\n  children,\n  className = '',\n  buttonPosition = 'top',\n  over = false,\n  icon,\n  onClick,\n  disabled = false,\n  buttonText,\n  buttonProps = {},\n}: ImageCardButtonProps) {\n  const isTop = buttonPosition === 'top';\n\n  const iconComponent = icon ?? (isTop ? <DownCircleOutlined /> : <UpCircleOutlined />);\n\n  const { className: buttonClassName, ...restButtonProps } = buttonProps;\n\n  const button = onClick ? (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={over}\n      className={clsx(\n        'image-card-button__button',\n        over && 'image-card-button__button--over',\n        over && `image-card-button__button--over-${buttonPosition}`,\n        buttonClassName\n      )}\n      onClick={() => onClick(id)}\n      disabled={disabled}\n      {...restButtonProps}\n    >\n      {iconComponent}\n      {buttonText ?? <Translate pt=\"Selecionar\" en=\"Select\" />}\n      {iconComponent}\n    </Button>\n  ) : (\n    <></>\n  );\n\n  return (\n    <div className={clsx('image-card-button', className)}>\n      <ImageBlurButtonContainer cardId={id} position={buttonPosition === 'bottom' ? 'top' : 'bottom'}>\n        <DebugOnly>{id}</DebugOnly>\n        <div className=\"image-card-button__container\">\n          {isTop && button}\n          {children}\n          {!isTop && button}\n        </div>\n      </ImageBlurButtonContainer>\n    </div>\n  );\n}\n","import { LegacyRef, ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Image, ImageProps } from 'antd';\n// Hooks\nimport { useCardWidthByContainerRef } from 'hooks/useCardWidth';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard, ImageCardButton } from '.';\n// Sass\nimport './ImageCardHand.scss';\n\ntype ImageCardHandProps = {\n  /**\n   * The list of card ids\n   */\n  hand: ImageCardId[];\n  /**\n   * Function to trigger when clicking on the select button\n   */\n  onSelectCard?: GenericFunction;\n  /**\n   * Select button custom label\n   */\n  selectButtonText?: ReactNode;\n  /**\n   * Select button custom icon\n   */\n  selectButtonIcon?: ReactNode;\n  /**\n   * Select button custom class\n   */\n  selectButtonClass?: string;\n  /**\n   * Disable select button\n   */\n  disabledSelectButton?: boolean;\n  /**\n   * Optional custom class name for the hand container\n   */\n  className?: string;\n  /**\n   * The size of the card\n   */\n  cardSize?: number;\n  /**\n   * If no card size is provided, the ratio is used instead to determine card size (default 8)\n   */\n  sizeRatio?: number;\n  /**\n   * Minimum width of a card (default 80)\n   */\n  minCardSize?: number;\n  /**\n   * Cache showing which cards have been selected and should be highlighted\n   */\n  selectedCards?: BooleanDictionary;\n  /**\n   * Custom card class\n   */\n  cardClassName?: string;\n  /**\n   * Enable preview (default: true)\n   */\n  preview?: boolean;\n  /**\n   * The Image group preview object\n   */\n  imageGroupPreview?: ImageProps['preview'];\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonText,\n  selectButtonIcon,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n  selectedCards = {},\n  cardClassName = '',\n  preview = true,\n  imageGroupPreview,\n}: ImageCardHandProps) {\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const [cardWidth, containerRef] = useCardWidthByContainerRef(Math.max(sizeRatio, 6), {\n    minWidth: minCardSize,\n  });\n\n  return (\n    <Image.PreviewGroup preview={imageGroupPreview}>\n      <div className={clsx('image-card-hand', className)} ref={containerRef as LegacyRef<HTMLDivElement>}>\n        {hand.map((cardId, index) => {\n          return (\n            <div\n              key={`hand-${cardId}`}\n              className={clsx(\n                'image-card-hand__card-container',\n                getAnimationClass('slideInUp', {\n                  delay: index,\n                })\n              )}\n            >\n              <ImageCardButton\n                onClick={onSelectCard}\n                id={cardId}\n                buttonProps={{ className: selectButtonClass }}\n                icon={selectButtonIcon}\n                buttonText={selectButtonText}\n                disabled={disabledSelectButton}\n              >\n                <ImageCard\n                  id={cardId}\n                  cardWidth={cardSize || cardWidth}\n                  className={clsx(selectedCards[cardId] && 'image-card-hand__selected', cardClassName)}\n                  preview={preview}\n                />\n              </ImageCardButton>\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","// Components\nimport { ImageCard } from './ImageCard';\n// Sass\nimport './ImageCardPreloadHand.scss';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard id={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","import { ImageCardsIcon } from 'icons/ImageCardsIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CardHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ImageCardsIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { PlayersIcon } from 'icons/PlayersIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PlayersHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<PlayersIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { StarIcon } from 'icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { ClockIcon } from 'icons/ClockIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { LegacyRef, ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce, useMeasure } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Types\nimport type { GamePlayers } from 'types/player';\nimport type { GameRanking } from 'types/game';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Helpers\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [ref, { height }] = useMeasure();\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx(\n        'ranking-board',\n        seconds > 4 && 'ranking-board--hidden',\n        seconds === 4 && getAnimationClass('fadeIn')\n      )}\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      <div\n        className=\"ranking-board__row\"\n        id=\"ranking-row-placeholder\"\n        style={{ opacity: 0 }}\n        ref={ref as LegacyRef<HTMLDivElement>}\n      >\n        <div className=\"ranking-board__cell-crown\">\n          <CrownFilled className=\"ranking-board__crown-icon\" />\n        </div>\n        <div className=\"ranking-board__cell-position\">#0</div>\n        <div className=\"ranking-board__cell-player\">\n          <div className=\"ranking-board__avatar\">\n            <Avatar id=\"A\" />\n          </div>\n          <div className=\"ranking-board__name\">Placeholder</div>\n        </div>\n        <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n          <div className=\"ranking-board__cell-points\">0</div>\n        </Tooltip>\n\n        <GainedPoints gainedPoints={0} playerId=\"A\" />\n\n        <Tooltip title=\"Total\" color=\"gold\">\n          <span className=\"ranking-board__cell-points-total\">0</span>\n        </Tooltip>\n      </div>\n\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            // id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Types\nimport type { GamePlayers } from 'types/player';\nimport type { GameRanking } from 'types/game';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  white?: boolean;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  white,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title white={white}>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { ComponentProps, ReactNode } from 'react';\nimport clsx from 'clsx';\n// Sass\nimport './SpeechBubble.scss';\n\ntype SpeechBubbleProps = {\n  children: ReactNode;\n  direction?: 'left' | 'right' | 'top' | 'bottom';\n  shadow?: boolean;\n  size?: 'small' | 'medium' | 'large';\n} & ComponentProps<'div'>;\n\nexport function SpeechBubble({ children, direction = 'left', shadow, size, ...rest }: SpeechBubbleProps) {\n  const baseClass = 'speech-bubble';\n  return (\n    <div\n      {...rest}\n      className={clsx(\n        baseClass,\n        `${baseClass}--${direction}`,\n        shadow && `${baseClass}--shadow`,\n        size && `${baseClass}--${size}`\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","import type { SubmitAnswerPayload } from './types';\nimport type { UseStep } from 'hooks/useStep';\nimport { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst submitAction = httpsCallable(functions, 'megamixSubmitAction');\n\nexport function useOnSubmitSeedAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-seed',\n    onSuccess: () => setStep(3),\n    successMessage: translate('Dados enviados com sucesso', 'Data submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seus dados',\n      'Oops, the application found an error while trying to submit your data'\n    ),\n  });\n\n  return (payload: SubmitAnswerPayload) => {\n    request({\n      action: 'SUBMIT_SEEDS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitTrackAnswerAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-task',\n    onSuccess: () => setStep(3),\n    successMessage: translate('Tarefa enviada com sucesso', 'Track submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua tarefa',\n      'Oops, the application found an error while trying to submit your task'\n    ),\n  });\n\n  return (payload: SubmitAnswerPayload) => {\n    request({\n      action: 'SUBMIT_TRACK_ANSWER',\n      ...payload,\n    });\n  };\n}\n","import { useEffect } from 'react';\n// Types\nimport type { GamePlayer } from 'types/player';\n\nexport function useColorizeBackground(user: GamePlayer, currentRound: number = 0) {\n  const team = user?.team?.[currentRound - 1];\n\n  // Colorize background\n  useEffect(() => {\n    if (team) {\n      const appElement = document.getElementById('app');\n      if (appElement) {\n        if (team === 'L') {\n          appElement.classList.add('background-sad');\n        } else {\n          appElement.classList.remove('background-sad');\n        }\n      }\n    }\n    return () => {\n      const appElement = document.getElementById('app');\n      appElement?.classList.remove('background-sad');\n    };\n  }, [team]);\n}\n","import { StepProps } from 'antd';\n// Types\nimport { GameRound } from 'types/game';\nimport { MovieCard } from 'types/tdr';\nimport { SeedEntry } from './types';\n\nexport const buildSeedingSteps = (\n  seeds: SeedEntry[],\n  translate: (pt: string, en: string, custom?: string | undefined) => string\n): StepProps[] => {\n  return seeds.map((seed) => {\n    switch (seed.type) {\n      case 'arte-ruim':\n        return {\n          title: translate('Hobby Artístico', 'Artistic Hobby'),\n          description: translate('Se expresse!', 'Express yourself!'),\n        };\n\n      case 'contadores-historias':\n        return {\n          title: translate('Torpedo da sua mãe', 'Text from your mom'),\n          description: translate('O que ela quer agora?', 'What does she want now?'),\n        };\n\n      case 'labirinto-secreto':\n        return {\n          title: translate('Postando no Insta', 'Instagram post'),\n          description: translate('Não existe sexy demais!', 'Do it for the likes!'),\n        };\n\n      case 'mente-coletiva':\n        return {\n          title: translate('Tik Tok', 'Tik Tok'),\n          description: translate('Sempre temos um tempinho!', \"There's always time!\"),\n        };\n      case 'party':\n      case 'onda-telepatica':\n        return {\n          title: translate('Tarefa de Casa', 'Homework'),\n          description: translate('Não pode deixar pra depois!', \"You can't leave it for tomorrow!\"),\n        };\n      case 'polemica-da-vez':\n        return {\n          title: translate('Redes sociais', 'Social Media'),\n          description: translate('Dê uma olhada no twitter', 'Check it out twitter'),\n        };\n      case 'retrato-falado':\n        return {\n          title: translate('Flashback', 'Flashback'),\n          description: translate('Um evento traumatizante', 'A traumatizing event'),\n        };\n      case 'ue-so-isso':\n        return {\n          title: translate('Torpedo do Amigo', \"A friend's text\"),\n          description: translate('Responda!', 'Reply!'),\n        };\n      case 'clubber':\n        return {\n          title: translate('Look', 'Outfit'),\n          description: translate('Como ir pra balada', 'How to be cool'),\n        };\n      default:\n        return {};\n    }\n  });\n};\n\nexport const showDJPruPruPruStep = (round: GameRound) => {\n  if (round.current <= 1 || !round) return 0; // true\n\n  if (round.current === Math.round(round.total / 2)) return 0;\n\n  if (round.current === round.total) return 0;\n\n  return 1; // false\n};\n\nexport const getMovieTitles = (movies: MovieCard[]) => {\n  return {\n    A: `${movies[0].prefix} ${movies[1].suffix}`,\n    B: `${movies[1].prefix} ${movies[2].suffix}`,\n    C: `${movies[3].prefix} ${movies[4].suffix}`,\n    D: `${movies[4].prefix} ${movies[5].suffix}`,\n  };\n};\n","// Type\nimport type { Track } from '../utils/types';\n// Components\nimport { AlienCommunicationIcon } from 'icons/AlienCommunicationIcon';\nimport { AnonymousIcon } from 'icons/AnonymousIcon';\nimport { BoxingGlovesIcon } from 'icons/BoxingGlovesIcon';\nimport { ChoiceIcon } from 'icons/ChoiceIcon';\nimport { ColorWheelIcon } from 'icons/ColorWheelIcon';\nimport { CrimeSceneIcon } from 'icons/CrimeSceneIcon';\nimport { CriminalIcon } from 'icons/CriminalIcon';\nimport { CrossWordsIcon } from 'icons/CrossWordsIcon';\nimport { DetectiveIcon } from 'icons/DetectiveIcon';\nimport { DirectionsIcon } from 'icons/DirectionsIcon';\nimport { DreamIcon } from 'icons/DreamIcon';\nimport { FairyTaleIcon } from 'icons/FairyTaleIcon';\nimport { GuessIcon } from 'icons/GuessIcon';\nimport { LoveIcon } from 'icons/LoveIcon';\nimport { MagicDoorIcon } from 'icons/MagicDoorIcon';\nimport { MirrorIcon } from 'icons/MirrorIcon';\nimport { MonsterIcon } from 'icons/MonsterIcon';\nimport { MovieTheaterIcon } from 'icons/MovieTheaterIcon';\nimport { PassportIcon } from 'icons/PassportIcon';\nimport { PathIcon } from 'icons/PathIcon';\nimport { PictureIcon } from 'icons/PictureIcon';\nimport { QueueIcon } from 'icons/QueueIcon';\nimport { ReviewIcon } from 'icons/ReviewIcon';\nimport { RevolverIcon } from 'icons/RevolverIcon';\nimport { SheepIcon } from 'icons/SheepIcon';\nimport { SkiingIcon } from 'icons/SkiingIcon';\nimport { TDIcon } from 'icons/TDIcon';\nimport { TrendingIcon } from 'icons/TrendingIcon';\nimport { TrickOrTreatIcon } from 'icons/TrickOrTreatIcon';\nimport { WavelengthDeviceIcon } from 'icons/WavelengthDeviceIcon';\n\ntype TrackIconProps = {\n  track: Track;\n};\n\nexport const TrackIcon = ({ track }: TrackIconProps) => {\n  const IconComponent =\n    {\n      'arte-ruim': PictureIcon,\n      'comunicacao-alienigena': AlienCommunicationIcon,\n      'contadores-historias': FairyTaleIcon,\n      'crimes-hediondos': CrimeSceneIcon,\n      'cruza-palavras': CrossWordsIcon,\n      'detetives-imaginativos': DetectiveIcon,\n      'dilema-dos-esquiadores': SkiingIcon,\n      'espiao-entre-nos': PassportIcon,\n      'fileira-de-fatos': QueueIcon,\n      'galeria-de-sonhos': DreamIcon,\n      'labirinto-secreto': PathIcon,\n      'megamix-best-of-three': ChoiceIcon,\n      'megamix-this-that': DirectionsIcon,\n      'megamix-who-said-this': AnonymousIcon,\n      'mente-coletiva': SheepIcon,\n      'namoro-ou-amizade': LoveIcon,\n      'na-rua-do-medo': TrickOrTreatIcon,\n      'onda-telepatica': WavelengthDeviceIcon,\n      'palheta-de-cores': ColorWheelIcon,\n      'polemica-da-vez': TrendingIcon,\n      'porta-dos-desesperados': MagicDoorIcon,\n      'quem-nao-mata': RevolverIcon,\n      'quem-sou-eu': MirrorIcon,\n      'retrato-falado': MonsterIcon,\n      'super-campeonato': BoxingGlovesIcon,\n      'testemunha-ocular': CriminalIcon,\n      'ta-na-cara': ReviewIcon,\n      'ue-so-isso': GuessIcon,\n      'vamos-ao-cinema': MovieTheaterIcon,\n    }?.[track.game] ?? TDIcon;\n\n  return <IconComponent />;\n};\n","export const TITLES: Record<string, DualLanguageValue> = {\n  'arte-ruim': {\n    pt: 'Arte Ruim Pra Dedéu',\n    en: 'Questionable Art',\n  },\n  'comunicacao-alienigena': {\n    pt: 'Comunicação Alienígena',\n    en: 'Alien Communication',\n  },\n  'contadores-historias': {\n    pt: 'Contadores de Histórias',\n    en: 'Storytellers',\n  },\n  'crimes-hediondos': {\n    pt: 'Crimes Hediondos',\n    en: 'Horrific Crimes',\n  },\n  'cruza-palavras': {\n    pt: 'Cruza Palavras',\n    en: 'Mixed Clues',\n  },\n  'detetives-imaginativos': {\n    pt: 'Detetives Imaginativos',\n    en: 'Detective Agency',\n  },\n  'dilema-dos-esquiadores': {\n    pt: 'O Dilema do Esquiador',\n    en: \"The Skier's Dilemma\",\n  },\n  'espiao-entre-nos': {\n    pt: 'Espião Entre Nós',\n    en: 'Spy the Spies',\n  },\n  'fileira-de-fatos': {\n    pt: 'Fileira de Fatos',\n    en: 'Facts Lineup',\n  },\n  'galeria-de-sonhos': {\n    pt: 'Galeria de Sonhos',\n    en: 'Dream Gallery',\n  },\n  'labirinto-secreto': {\n    pt: 'Labirinto Secreto',\n    en: 'Secret Labyrinth',\n  },\n  'megamix-best-of-three': {\n    pt: 'Melhor de 3',\n    en: 'Best of 3',\n  },\n  'megamix-this-that': {\n    pt: 'Isso ou Aquilo?',\n    en: 'This or That?',\n  },\n  'megamix-who-said-this': {\n    pt: 'Quem Disse Isso?',\n    en: 'Who Said This?',\n  },\n  'mente-coletiva': {\n    pt: 'Mente Coletiva',\n    en: 'Herd Mind',\n  },\n  'na-rua-do-medo': {\n    pt: 'Na Rua do Medo',\n    en: 'Fear Street',\n  },\n  'namoro-ou-amizade': {\n    pt: 'Namoro ou Amizade',\n    en: 'Awkward Dates',\n  },\n  'onda-telepatica': {\n    pt: 'Ondas Telepáticas',\n    en: 'Telepathic Waves',\n  },\n  'palheta-de-cores': {\n    pt: 'Palheta de Cores',\n    en: 'Color Palette',\n  },\n  'polemica-da-vez': {\n    pt: 'Polêmica da Vez',\n    en: \"That's Polemic!\",\n  },\n  'porta-dos-desesperados': {\n    pt: 'Porta dos Desesperados',\n    en: 'Obscure Doors',\n  },\n  'retrato-falado': {\n    pt: 'Retrato Falado Monstruoso',\n    en: 'Monster Sketch',\n  },\n  'quem-nao-mata': {\n    pt: 'Quem Não Mata, Morre',\n    en: 'Mortal Standoff',\n  },\n  'quem-sou-eu': {\n    pt: 'Quem Sou Eu?',\n    en: 'Who Am I?',\n  },\n  'super-campeonato': {\n    pt: 'Super Campeonato',\n    en: 'Ultimate Championship',\n  },\n  'ta-na-cara': {\n    pt: 'Tá Na Cara',\n    en: 'Guess Who What?',\n  },\n  'testemunha-ocular': {\n    pt: 'Testemunha Ocular',\n    en: 'Eye Witness',\n  },\n  'ue-so-isso': {\n    pt: 'Ué, só isso?',\n    en: \"That's it?\",\n  },\n  'vamos-ao-cinema': {\n    pt: 'Vamos no cinema?',\n    en: 'Movie night!',\n  },\n};\n\nexport const INSTRUCTIONS: Record<string, DualLanguageValue> = {\n  'arte-ruim': {\n    pt: 'Uma imagem vale mais que mil palavras',\n    en: \"That's art!\",\n  },\n  'comunicacao-alienigena': {\n    pt: 'Vamos falar com os ETs',\n    en: 'Let us talk to the aliens',\n  },\n  'contadores-historias': {\n    pt: 'Conte uma história',\n    en: 'Tell us a story',\n  },\n  'crimes-hediondos': {\n    pt: 'Desvenda o crime!',\n    en: 'Solve the crime!',\n  },\n  'cruza-palavras': {\n    pt: 'Coloque a dica na grade de palavras!',\n    en: 'Place the clue in the word grid!',\n  },\n  'detetives-imaginativos': {\n    pt: 'Há um impostor entre a gente!',\n    en: 'There is an impostor among us!',\n  },\n  'dilema-dos-esquiadores': {\n    pt: 'Escolha uma montanha para esquiar!',\n    en: 'Choose a mountain to ski!',\n  },\n  'espiao-entre-nos': {\n    pt: 'Onde você está?',\n    en: 'Where are we?',\n  },\n  'fileira-de-fatos': {\n    pt: 'Coloque a fila de números na ordem!',\n    en: 'Place the line of numbers in order!',\n  },\n  'galeria-de-sonhos': {\n    pt: 'Um tema, um sonho, várias images',\n    en: 'A theme, a dream, many images',\n  },\n  'labirinto-secreto': {\n    pt: 'Vamos andar pela floresta',\n    en: \"Let's walk into the woods\",\n  },\n  'megamix-best-of-three': {\n    pt: 'Qual opção você escolhe?',\n    en: 'Which option do you choose?',\n  },\n  'megamix-this-that': {\n    pt: 'Qual opção você escolhe?',\n    en: 'Which option do you choose?',\n  },\n  'megamix-who-said-this': {\n    pt: 'Quem tem mais cara de ter disso isso?',\n    en: \"Who could've possibly said this?\",\n  },\n  'mente-coletiva': {\n    pt: 'Junte-se as ovelhas!',\n    en: 'Join the herd!',\n  },\n  'na-rua-do-medo': {\n    pt: 'Gostosuras ou travessuras?',\n    en: 'Trick or treat?',\n  },\n  'namoro-ou-amizade': {\n    pt: 'Selecione o melhor partido',\n    en: \"Who's the best catch?\",\n  },\n  'onda-telepatica': {\n    pt: 'Para onde o ponteiro está apontando?',\n    en: 'Where is the pointer pointing to?',\n  },\n  'palheta-de-cores': {\n    pt: 'Selecione a melhor cor',\n    en: 'Select the best color swatch',\n  },\n  'polemica-da-vez': {\n    pt: 'Quantas curtidas isso ganha?',\n    en: 'How many likes, huh?',\n  },\n  'porta-dos-desesperados': {\n    pt: 'Qual a porta é a saída?',\n    en: 'What door is the exit?',\n  },\n  'quem-nao-mata': {\n    pt: 'Mate alguém...',\n    en: 'Kill someone...',\n  },\n  'quem-sou-eu': {\n    pt: 'Decifre os símbolos!',\n    en: 'Decipher the glyphs',\n  },\n  'retrato-falado': {\n    pt: 'Qual o melhor monstro?',\n    en: 'What is the best monster?',\n  },\n  'super-campeonato': {\n    pt: 'Quem ganha essa batalha?',\n    en: 'Who will win this battle?',\n  },\n  'ta-na-cara': {\n    pt: 'E esse aí? O que acha?',\n    en: 'What about this one? What do you think?',\n  },\n  'testemunha-ocular': {\n    pt: 'Quem é o criminoso?',\n    en: 'Who is the perpetrator?',\n  },\n  'ue-so-isso': {\n    pt: 'Escreva uma dica para ser eliminada',\n    en: 'Write a clue to be eliminated',\n  },\n  'vamos-ao-cinema': {\n    pt: 'Vamos ver qual filme?',\n    en: 'But what movie?',\n  },\n};\n","// Type\nimport type { Track } from '../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { INSTRUCTIONS } from '../utils/constants';\n\ntype TrackInstructionsProps = {\n  track: Track;\n};\n\nexport const TrackInstructions = ({ track }: TrackInstructionsProps) => {\n  const { dualTranslate } = useLanguage();\n\n  const instruction: DualLanguageValue = INSTRUCTIONS?.[track.game] ?? {\n    pt: 'Se vire nos 30!',\n    en: 'Do something!',\n  };\n\n  return <>{dualTranslate(instruction)}</>;\n};\n","import { useMemo } from 'react';\n// AntDesign Resources\nimport { Tooltip } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { VIPLineIcon } from 'icons/VIPLineIcon';\nimport { ClubberAvatar } from '../../../components/avatars/ClubberAvatar';\n\ntype MinigameTitleProps = {\n  players: GamePlayers;\n  currentRound: number;\n};\n\nexport function ClubLine({ players, currentRound }: MinigameTitleProps) {\n  const { winners, losers } = useMemo(() => {\n    const playersList = sortPlayers(players);\n\n    return {\n      winners: playersList.filter((player) => player.team[currentRound - 1] === 'W'),\n      losers: playersList.filter((player) => player.team[currentRound - 1] === 'L'),\n    };\n  }, [players, currentRound]);\n\n  return (\n    <div className=\"club-line\">\n      <div className=\"club-line__background\"></div>\n      <div className=\"club-line__clubbers\">\n        <div className=\"club-line__area\">\n          {winners.map((player) => (\n            <div className=\"club-line__player\" key={`${player.id}-${player.clubberId}`}>\n              <Tooltip title={player.name}>\n                <ClubberAvatar\n                  avatarId={player.avatarId}\n                  id={player.clubberId}\n                  className=\"club-line__clubber\"\n                  animate\n                />\n              </Tooltip>\n            </div>\n          ))}\n        </div>\n        <VIPLineIcon className=\"club-line__vip-icon\" />\n        <div className=\"club-line__area\">\n          {losers.map((player) => (\n            <div\n              className=\"club-line__player club-line__player--trash\"\n              key={`${player.id}-${player.clubberId}`}\n            >\n              <Tooltip title={player.name}>\n                <ClubberAvatar\n                  key={`${player.id}-${player.clubberId}`}\n                  avatarId={player.avatarId}\n                  id={player.clubberId}\n                  className=\"club-line__clubber\"\n                />\n              </Tooltip>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Amt Design Resources\nimport { Space } from 'antd';\n// Icons\nimport { UnderConstructionIcon } from 'icons/UnderConstructionIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\n\nexport function FallbackComponent(_: unknown) {\n  return (\n    <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n      <IconAvatar size=\"large\" icon={<UnderConstructionIcon />} />\n      <Title size=\"xx-small\">\n        <Translate pt=\"Algo errado não está certo\" en=\"Something wrong is not right\" />\n      </Title>\n    </Space>\n  );\n}\n","// Types\nimport type { SeedEntry } from './types';\n// Utils\nimport { mockClue } from 'mock/clues';\nimport { mockDrawing } from 'mock/drawing';\nimport { getRandomItem } from 'utils/helpers';\n\nexport function mockSeeding(seeds: SeedEntry[]) {\n  const data: PlainObject = {};\n  seeds.forEach((seed) => {\n    switch (seed.type) {\n      case 'arte-ruim':\n        data[seed.card.id] = JSON.stringify(mockDrawing());\n        break;\n      case 'contadores-historias':\n        data.prompt = getRandomItem(seed.prompts);\n        break;\n      case 'labirinto-secreto':\n        const ids = getIds(seed.cards);\n        data[seed.tree.id] = getRandomItem(ids);\n        break;\n      case 'mente-coletiva':\n        data.answers = [mockClue(), mockClue('low')];\n        break;\n      case 'onda-telepatica':\n        data.wave = mockClue();\n        break;\n      case 'polemica-da-vez':\n        data.likeTweet = getRandomItem([true, false]);\n        break;\n      case 'retrato-falado':\n        data[seed.card.id] = JSON.stringify(mockDrawing());\n        break;\n      case 'ue-so-isso':\n        data.singleClue = mockClue('high');\n        break;\n      case 'party':\n        data.partyAnswers = seed.cards.reduce((acc: StringDictionary, card) => {\n          acc[card.id] = mockClue('high');\n          return acc;\n        }, {});\n        break;\n      case 'clubber':\n        data.clubberId = seed.outfits[0];\n        break;\n      default:\n        return {};\n    }\n  });\n\n  return data;\n}\n\nexport function mockSelection(options: unknown[], propertyName?: string) {\n  const random = getRandomItem(options) as PlainObject;\n  return propertyName ? random[propertyName] : random;\n}\n\nexport function mockText() {\n  return getRandomItem(['bola', 'bolas', 'prata', 'prato', 'pirulito', 'domingo']);\n}\n\nexport function getIds(list: PlainObject[]) {\n  return list.map((entry) => entry.id);\n}\n","// Utils\nimport { DualTranslate } from 'components/language';\n\n// Components\nimport { Title } from 'components/text';\n\ntype MinigameTitleProps = {\n  title: DualLanguageValue;\n};\n\nexport function MinigameTitle({ title }: MinigameTitleProps) {\n  return (\n    <Title size=\"small\" white level={2} className=\"minigame-title__number\">\n      <DualTranslate>{title}</DualTranslate>\n    </Title>\n  );\n}\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getColorFromIndex } from 'utils/helpers';\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { CanvasSVG } from 'components/canvas';\nimport { TransparentButton } from 'components/buttons';\n\nexport const TrackArteRuim = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const cardWidth = useCardWidth(5, {\n    minWidth: 250,\n    maxWidth: 270,\n  });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    if (track.variant === 'cards') {\n      onSelect(mockSelection(track.data.cards, 'id'));\n    }\n\n    if (track.variant === 'drawings') {\n      onSelect(mockSelection(track.data.options, 'playerId'));\n    }\n  });\n\n  if (track.variant === 'cards') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Arte Ruim Pra Dedéu', en: 'Questionable Art' }} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Dentre as cartas abaixo, qual melhor descreve essa linda ilustração?\n                <br />\n                Foi você quem desenhou? Lembre-se que a resposta correta não é importante, e sim o que a\n                maioria escolher.\n              </>\n            }\n            en={\n              <>\n                Among the cards below, which one best describes the beautiful illustration?\n                <br />\n                <em>\n                  Is that your drawing? Remember that the correct answer is not important, but what the\n                  majority will choose.\n                </em>\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <CanvasSVG drawing={track.data.option.drawing} width={cardWidth} className=\"a-drawing\" />\n        </Space>\n\n        <Space className=\"space-container\">\n          {track.data.cards.map((card: TextCard, index: number) => (\n            <TransparentButton\n              key={card.id}\n              disabled={isLoading || user.ready}\n              onClick={() =>\n                onSubmitAnswer({\n                  data: { value: card.id },\n                })\n              }\n            >\n              <Card header={LETTERS[index]} color={getColorFromIndex(index)}>\n                {card.text}\n              </Card>\n            </TransparentButton>\n          ))}\n        </Space>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Arte Ruim Pra Dedéu', en: 'Questionable Art' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dentre as ilustrações abaixo, qual melhor descreve a carta?\n              <br />\n              Foi você quem desenhou? Lembre-se que a resposta correta não é importante, e sim o que a maioria\n              escolher.\n            </>\n          }\n          en={\n            <>\n              Among the illustrations below, which one best fits the card?\n              <br />\n              <em>\n                Is that your drawing? Remember that the correct answer is not important, but what the majority\n                will choose.\n              </em>\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card header=\"A\" color={getColorFromIndex(0)}>\n          {track.data.cards[1].text}\n        </Card>\n      </Space>\n\n      <div className=\"a-drawings\">\n        {track.data.options.map((entry: PlainObject) => (\n          <div className=\"a-drawings__entry\">\n            <CanvasSVG drawing={entry.drawing} width={cardWidth} className=\"a-drawing\" />\n\n            <Space className=\"space-container\">\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() => onSelect(entry.playerId)}\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { Fragment } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\nimport { RightSquareOutlined } from '@ant-design/icons';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { TransparentButton } from 'components/buttons';\nimport { TreeOneIcon } from 'icons/TreeOneIcon';\nimport { TreeTwoIcon } from 'icons/TreeTwoIcon';\nimport { TreeThreeIcon } from 'icons/TreeThreeIcon';\nimport { MapIcon } from 'icons/MapIcon';\n\nexport const TrackLabirintoSecreto = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: number) => {\n    onSubmitAnswer({\n      data: { value: String(value) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Labirinto Secreto', en: 'Secret Labyrinth' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Para atravessar a floresta, você precisa passar por essas 3 árvores.\n              <br />\n              Com mapa feito de adjetivos (que útil), qual rota você selecionaria ir da{' '}\n              <TextHighlight>{track.data.trees[0].text}</TextHighlight> ao{' '}\n              <TextHighlight>{track.data.trees[2].text}</TextHighlight>?\n            </>\n          }\n          en={\n            <>\n              To cross the woods, you need to pass by 3 trees.\n              <br />\n              With a map made of adjectives (wow, so useful), what route would to select to go from{' '}\n              <TextHighlight>{track.data.trees[0].text}</TextHighlight> to{' '}\n              <TextHighlight>{track.data.trees[2].text}</TextHighlight>?\n            </>\n          }\n        />\n      </Instruction>\n\n      <div className=\"cm-trees\">\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeOneIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[0].text}</div>\n        </div>\n\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeTwoIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[1].text}</div>\n        </div>\n\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeThreeIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[2].text}</div>\n        </div>\n      </div>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(0)}\n        >\n          {'A'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[0]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(1)}\n        >\n          {'B'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[1]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(2)}\n        >\n          {'C'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[2]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { BookPages } from 'components/game/BookPages';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackContadoresHistorias = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.cards));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Contadores de Histórias', en: 'Storytellers' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"space-container contained margin\">\n        <Instruction contained>\n          <Translate\n            pt=\"Dada a dica abaixo, qual das cartas é a resposta correta?\"\n            en=\"Given the clue below, which card is the correct answer?\"\n          />\n        </Instruction>\n\n        <BookPages\n          className=\"c-book-pages\"\n          leftPage={\n            <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n              <ImageCard id=\"back-question\" cardWidth={100} />\n            </Space>\n          }\n          rightPage={<div className=\"c-book-content\">{track.data?.prompt ?? track.data?.options ?? '?'}</div>}\n        />\n\n        <Image.PreviewGroup>\n          <Space className=\"space-container\">\n            {track.data.cards.map((cardId: ImageCardId) => {\n              return (\n                <Space className=\"space-container\" direction=\"vertical\">\n                  <ImageBlurButtonContainer cardId={cardId}>\n                    <ImageCard id={cardId} cardWidth={cardWidth} />\n                  </ImageBlurButtonContainer>\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() => onSelect(cardId)}\n                  >\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                  </Button>\n                </Space>\n              );\n            })}\n          </Space>\n        </Image.PreviewGroup>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button } from 'antd';\n// Types\nimport type { CrimesHediondosCard } from 'types/tdi';\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Icons\nimport { KnifeIcon } from 'icons/KnifeIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { LoupeIcon } from 'icons/LoupeIcon';\nimport { MetricHighlight } from 'components/metrics/MetricHighlight';\nimport { CrimeItemCard } from 'components/cards/CrimeItemCard';\nimport { SceneTile } from 'components/game/SceneTile';\n\nexport const TrackCrimesHediondos = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(12, { minWidth: 100, maxWidth: 130 });\n\n  const { isLoading } = useLoading();\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.cards, 'id') },\n    });\n  });\n\n  const icon = track.variant === 'weapon' ? <KnifeIcon /> : <LoupeIcon />;\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Crimes Hediondos', en: 'Horrific Crimes' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              O médico legista examinou o crime e chegou às conclusões abaixo.\n              <br />\n              Selecione qual{' '}\n              <MetricHighlight icon={icon} iconPlacement=\"before\">\n                {track.variant === 'weapon' ? 'arma' : 'evidencia'}\n              </MetricHighlight>{' '}\n              você acha que foi usada no crime.\n            </>\n          }\n          en={\n            <>\n              The forensic scientist examined the body and came to those conclusions below.\n              <br />\n              Select the one{' '}\n              <MetricHighlight icon={icon} iconPlacement=\"before\">\n                {track.variant}\n              </MetricHighlight>{' '}\n              you think took part in the crime.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-table\">\n        {Boolean(track.data.scenes.causeOfDeath) && (\n          <SceneTile tile={track.data.scenes.causeOfDeath} index={track.data.crimeIndexes.causeOfDeath} />\n        )}\n        {Boolean(track.data.scenes.reasonForEvidence) && (\n          <SceneTile\n            tile={track.data.scenes.reasonForEvidence}\n            index={track.data.crimeIndexes.reasonForEvidence}\n          />\n        )}\n\n        <SceneTile tile={track.data.scenes.location} index={track.data.crimeIndexes.location} />\n        <SceneTile tile={track.data.scenes.sceneA} index={track.data.crimeIndexes.sceneA} />\n        <SceneTile tile={track.data.scenes.sceneB} index={track.data.crimeIndexes.sceneB} />\n        <SceneTile tile={track.data.scenes.sceneC} index={track.data.crimeIndexes.sceneC} />\n      </ul>\n\n      <ul className=\"h-cards\">\n        {track.data.cards.map((card: CrimesHediondosCard) => {\n          return (\n            <li key={card.id} className=\"margin\">\n              <CrimeItemCard item={card} cardWidth={cardWidth} isSelected={user?.data?.value === card.id} />\n\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: card.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","// Sass\nimport clsx from 'clsx';\nimport { ReactNode } from 'react';\nimport './SpreadsheetGrid.scss';\n\ntype SpreadsheetGridProps = {\n  /**\n   * Number of columns\n   */\n  columns: number;\n  /**\n   * Number of rows\n   */\n  rows: number;\n  /**\n   * Add the blank top left corner cell\n   */\n  topLeftCorner?: boolean;\n  /**\n   * Content of the grid, usually SpreadsheetCell components\n   */\n  children?: ReactNode;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\nexport function SpreadsheetGrid({ columns, rows, topLeftCorner, children, className }: SpreadsheetGridProps) {\n  return (\n    <div\n      className={clsx('spreadsheet-grid', className)}\n      style={{ gridTemplateColumns: `repeat(${columns}, 1fr)`, gridTemplateRows: `repeat(${rows}, auto)` }}\n      role=\"table\"\n    >\n      {topLeftCorner && <SpreadsheetCell header></SpreadsheetCell>}\n      {children}\n    </div>\n  );\n}\n\ntype SpreadsheetCellProps = {\n  /**\n   * The content of the Cell\n   */\n  children?: ReactNode;\n  /**\n   * Style cell as header\n   */\n  header?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\nexport function SpreadsheetCell({ children, header, className }: SpreadsheetCellProps) {\n  return (\n    <span className={clsx('spreadsheet-cell', header && 'spreadsheet-cell--header', className)} role=\"cell\">\n      {children}\n    </span>\n  );\n}\n","// AntDesign Resources\nimport { Button, ButtonProps, Space } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { SpreadsheetCell, SpreadsheetGrid } from 'components/general/SpreadsheetGrid';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\n\nexport const TrackCruzaPalavras = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (position: number) => {\n    onSubmitAnswer({\n      data: { value: String(position) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2, 3]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Cruza Palavras', en: 'Mixed Clues' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Bob, o robot, escreveu a dica péssima abaixo usando sua \"inteligência artificial\", e agora?\n              <br />\n              Aonde ela se encaixa na grade para que combine com a linha e a coluna?\n              <br />\n              Clique na célula apropriada!\n            </>\n          }\n          en={\n            <>\n              Bob the bot wrote this terrible clue below using its AI.\n              <br />\n              Where does it fit in the grid where it would match the column and row?\n              <br />\n              Click the appropriate grid cell!\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Avatar id=\"A\" size=\"large\" /> <SpeechBubble shadow>{track.data.clue.text}</SpeechBubble>\n      </Space>\n\n      <Space className=\"space-container\">\n        <SpreadsheetGrid columns={3} rows={3} topLeftCorner>\n          <SpreadsheetCell header>{track.data.cards[0].text}</SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[1].text}</SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[2].text}</SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(0)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(1)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[3].text}</SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(2)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(3)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n        </SpreadsheetGrid>\n      </Space>\n    </>\n  );\n};\n\nfunction CellPlusButton({ onClick, loading, ...rest }: ButtonProps) {\n  return (\n    <Button onClick={onClick} shape=\"circle\" loading={loading} {...rest}>\n      {!loading && <PlusCircleFilled />}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { AVATARS, BOTS_LIST } from 'utils/avatars';\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackDetetivesImaginativos = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const cardWidth = useCardWidth(7, { minWidth: 200, maxWidth: 270 });\n  const { language } = useLanguage();\n  const { isLoading } = useLoading();\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.cards) },\n    });\n  });\n\n  if (track.variant === 'impostor') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Detetives Imaginativos', en: 'Detective Agency' }} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Você é o impostor e não sabe a palavra-secreta. Os outros jogadores escolheram as cartas\n                abaixo que supostamente combinam com a palavra-secreta.\n              </>\n            }\n            en={\n              <>\n                You are the impostor and don't know the secret clue. The other players played the cards below\n                and they all supposed to match the secret clue.\n              </>\n            }\n          />\n        </Instruction>\n\n        <Image.PreviewGroup>\n          <ul className=\"d-table\">\n            {track.data.table.map((cardId: ImageCardId, index: number) => {\n              const bot = BOTS_LIST[index];\n              return (\n                <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                  <ImageBlurButtonContainer\n                    cardId={cardId}\n                    className={clsx(\n                      'd-table__card',\n                      user?.data?.value === cardId && 'd-table__card--selected'\n                    )}\n                  >\n                    <ImageCard\n                      key={`table-focus-${cardId}`}\n                      id={cardId}\n                      cardWidth={cardWidth * 0.6}\n                      className=\"d-table__image-card\"\n                    />\n                  </ImageBlurButtonContainer>\n\n                  <div className=\"d-table__player-info\">\n                    <Avatar id={bot.avatarId} className=\"d-table__player-avatar\" size=\"default\" />\n                    <span\n                      className=\"d-table__player-bar\"\n                      style={{ backgroundColor: AVATARS[bot.avatarId].color }}\n                    />\n                    <span className=\"d-table__player-name\">\n                      {bot.name}, {AVATARS[bot.avatarId].description[language]}\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n          </ul>\n        </Image.PreviewGroup>\n\n        <Instruction contained>\n          <Translate\n            pt={<>Qual das suas cartas você usaria para passar despercebido?</>}\n            en={<>Which card in your hand would play so you can blend in with the others?</>}\n          />\n        </Instruction>\n\n        <Image.PreviewGroup>\n          <Space className=\"space-container\">\n            {track.data.cards.map((cardId: ImageCardId) => {\n              return (\n                <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                  <ImageBlurButtonContainer\n                    cardId={cardId}\n                    className={clsx(\n                      'd-table__card',\n                      user?.data?.value === cardId && 'd-table__card--selected'\n                    )}\n                  >\n                    <ImageCard\n                      key={`table-focus-${cardId}`}\n                      id={cardId}\n                      cardWidth={cardWidth * 0.75}\n                      className=\"d-table__image-card\"\n                    />\n                  </ImageBlurButtonContainer>\n\n                  <Space className=\"space-container\">\n                    <Button\n                      shape=\"round\"\n                      type=\"primary\"\n                      disabled={user.ready}\n                      loading={isLoading}\n                      onClick={() =>\n                        onSubmitAnswer({\n                          data: { value: cardId },\n                        })\n                      }\n                    >\n                      <Translate pt=\"Selecionar\" en=\"Select\" />\n                    </Button>\n                  </Space>\n                </div>\n              );\n            })}\n          </Space>\n        </Image.PreviewGroup>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Detetives Imaginativos', en: 'Detective Agency' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dentre as cartas abaixo, uma delas é do impostor! Você sabe qual é?\n              <br />\n              Selecione a carta que você acha <strong>NÃO</strong> combina com as outras duas.\n            </>\n          }\n          en={\n            <>\n              Among the cards below, one belongs to the impostor! Do you know which one?\n              <br />\n              Select the card that does <strong>NOT</strong> match the others.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Image.PreviewGroup>\n        <ul className=\"d-table\">\n          {track.data.cards.map((cardId: ImageCardId, index: number) => {\n            const bot = BOTS_LIST[index];\n            return (\n              <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                <ImageBlurButtonContainer\n                  cardId={cardId}\n                  className={clsx('d-table__card', user?.data?.value === cardId && 'd-table__card--selected')}\n                >\n                  <ImageCard\n                    key={`table-focus-${cardId}`}\n                    id={cardId}\n                    cardWidth={cardWidth}\n                    className=\"d-table__image-card\"\n                  />\n                </ImageBlurButtonContainer>\n\n                <div className=\"d-table__player-info\">\n                  <Avatar id={bot.avatarId} className=\"d-table__player-avatar\" size=\"default\" />\n                  <span\n                    className=\"d-table__player-bar\"\n                    style={{ backgroundColor: AVATARS[bot.avatarId].color }}\n                  />\n                  <span className=\"d-table__player-name\">\n                    {bot.name}, {AVATARS[bot.avatarId].description[language]}\n                  </span>\n                </div>\n                <Space className=\"space-container\">\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() =>\n                      onSubmitAnswer({\n                        data: { value: cardId },\n                      })\n                    }\n                  >\n                    <Translate pt=\"Esse é o impostor\" en=\"This is the impostor\" />\n                  </Button>\n                </Space>\n              </div>\n            );\n          })}\n        </ul>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { SkiingIcon } from 'icons/SkiingIcon';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { TransparentButton } from 'components/buttons';\nimport { SnowHillIcon } from 'icons/SnowHillIcon';\nimport clsx from 'clsx';\n\nexport const TrackDilemaDosEsquiadores = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([track.data.dilemma.left, track.data.dilemma.right]));\n  });\n\n  const [mouseX, setMouseX] = useState<number | null>(null);\n  const [direction, setDirection] = useState<'left' | 'right'>('left');\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMouseX(e.clientX);\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Check if the mouse is on the left or right side of the screen\n    if (mouseX !== null) {\n      const screenWidth = window.innerWidth;\n      const threshold = screenWidth / 2;\n\n      if (mouseX <= threshold) {\n        setDirection('left');\n      } else {\n        setDirection('right');\n      }\n    }\n  }, [mouseX]);\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Dilema do Esquiador', en: \"Skiers' Dilemma\" }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Você tem os pensamentos mais filosóficos quando você está esquiando ladeira abaixo.\n                <br />\n                Selecione a opção apropriada para a questão séria:\n              </>\n            }\n            en={\n              <>\n                You have the most philosophical shower thoughts while skiing downhill.\n                <br />\n                Select the best option below:\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" direction=\"vertical\">\n          <div className=\"dd-animated-skiier\">\n            <IconAvatar\n              icon={<SkiingIcon />}\n              size={84}\n              className={clsx('dd-animated-skiier__skiier', `dd-animated-skiier__skiier--${direction}`)}\n            />\n          </div>\n          <Card header={translate('Dica', 'Clue')} color=\"red\">\n            {track.data.dilemma.prompt}\n          </Card>\n\n          <Space className=\"space-container\">\n            <div className=\"dd-buttons\">\n              <TransparentButton\n                onClick={() => onSelect(track.data.dilemma.left)}\n                disabled={user.ready || isLoading}\n                className=\"dd-button\"\n              >\n                <span className=\"dd-button__hill dd-button__hill--left\">\n                  <IconAvatar icon={<SnowHillIcon />} size={64} />\n                </span>\n                <span className=\"dd-button__text\">{track.data.dilemma.left}</span>\n              </TransparentButton>\n              <TransparentButton\n                onClick={() => onSelect(track.data.dilemma.right)}\n                disabled={user.ready || isLoading}\n                className=\"dd-button\"\n              >\n                <span className=\"dd-button__hill\">\n                  <IconAvatar icon={<SnowHillIcon />} size={64} />\n                </span>\n                <span className=\"dd-button__text\">{track.data.dilemma.right}</span>\n              </TransparentButton>\n            </div>\n          </Space>\n        </Space>\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockText } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackEspiaoEntreNos = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [answer, setAnswer] = useState('');\n\n  const onSubmit = () => {\n    if (answer.length > 1) {\n      onSubmitAnswer({\n        data: { value: answer },\n      });\n    }\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockText() },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: '', en: '' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você está em um(a) <TextHighlight>{track.data.location.name}</TextHighlight>. Você é um(a){' '}\n              <TextHighlight>{track.data.location.roles[track.data.roleIndex]}</TextHighlight>.<br />\n              Agora, responda à pergunta abaixo com uma resposta simples.\n            </>\n          }\n          en={\n            <>\n              You are at/in/on a <TextHighlight>{track.data.location.name}</TextHighlight>. You are a{' '}\n              <TextHighlight>{track.data.location.roles[track.data.roleIndex]}</TextHighlight>.<br />\n              Now, simply answer the following question.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card>{track.data.question}</Card>\n      </Space>\n\n      <Instruction contained>\n        <Translate\n          pt={<>Responda à pergunta abaixo com uma resposta simples.</>}\n          en={<>Answer the prompt below with a simple answer.</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Input\n          onChange={(e) => setAnswer(e.target.value)}\n          placeholder={translate('Escreva aqui', 'Answer here')}\n          onPressEnter={onSubmit}\n          disabled={isLoading || user.ready}\n        />\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          disabled={user.ready || answer.length < 2}\n          loading={isLoading}\n          onClick={onSubmit}\n        >\n          <Translate pt=\"Selecionar\" en=\"Select\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Avatar, Space } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { EmojiCard } from 'components/cards/EmojiCard';\nimport { TransparentButton } from 'components/buttons';\n\nconst reference = [\n  {\n    id: '3',\n    text: {\n      pt: 'Vish',\n      en: 'Oh...',\n    },\n  },\n  {\n    id: '15',\n    text: {\n      pt: 'Quê?',\n      en: 'What?',\n    },\n  },\n  {\n    id: '7',\n    text: {\n      pt: 'Nó!',\n      en: 'Wow...',\n    },\n  },\n];\n\nexport const TrackFileiraDeFatos = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const width = useCardWidth(8, {\n    gap: 16,\n    minWidth: 100,\n    maxWidth: 200,\n    margin: 32,\n  });\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.scenarios, 'text'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Fileira de Fatos', en: 'Facts Lineup' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate pt=\"Qual das situações é a pior?\" en=\"Which of the following situations is the worst?\" />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          {track.data.scenarios.map((entry: TextCard, index: number) => (\n            <TransparentButton\n              key={`position-${entry.text}`}\n              style={{ width: `${width}px` }}\n              disabled={isLoading}\n              onClick={() => onSelect(entry.text)}\n            >\n              <div className=\"scenario\">\n                <Avatar>{LETTERS[index]}</Avatar>\n                <div className=\"scenario__tagline\">\n                  <DualTranslate>{reference[index].text}</DualTranslate>\n                </div>\n                <EmojiCard id={reference[index].id} className=\"scenario__emoji\" />\n                {entry && <div className=\"scenario__card\">{entry.text}</div>}\n              </div>\n            </TransparentButton>\n          ))}\n        </Space>\n      </Space>\n    </>\n  );\n};\n\n// type ChevronProps = {\n//   player: GamePlayer;\n//   value: number;\n//   reveal?: boolean;\n// };\n\n// export function Chevron({ player, value, reveal }: ChevronProps) {\n//   const color = getAvatarColorById(player.avatarId);\n//   return (\n//     <div className=\"ff-chevron\">\n//       <ChevronImage color={color}>\n//         <span className=\"ff-chevron__value\">{reveal ? value : '?'}</span>\n//       </ChevronImage>\n//       <div className=\"ff-chevron__name\">{player.name}</div>\n//     </div>\n//   );\n// }\n\n// type ChevronImageProps = {\n//   children: ReactNode;\n//   color: string;\n// };\n\n// function ChevronImage({ children, color }: ChevronImageProps) {\n//   return (\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n//       <path\n//         fill={color}\n//         d=\"M115.8 461.5L244 501.56a8.52 8.52 0 009.8-3.65L400.91 260.5a8.58 8.58 0 000-9L253.82 14.09a8.54 8.54 0 00-9.8-3.66L115.8 50.5a8.54 8.54 0 00-4.89 12.35l106.7 189a8.55 8.55 0 010 8.4l-106.7 189a8.54 8.54 0 004.89 12.35\"\n//       ></path>\n//       <path\n//         fill=\"#000000\"\n//         opacity=\"0.5\"\n//         d=\"M142.94 101.4l133.68-41.56a8.53 8.53 0 015.69.22l-28.49-46a8.51 8.51 0 00-9.8-3.65L115.8 50.5a8.54 8.54 0 00-4.89 12.35L137 109a8.52 8.52 0 016-7.6\"\n//       ></path>\n//       <path\n//         fill=\"#000000\"\n//         d=\"M246.57 512a18.66 18.66 0 01-5.55-.85L112.8 471.08a18.58 18.58 0 01-10.64-26.87l37.25-66a10 10 0 1117.49 9.88l-36.33 64.33 125.33 39.21L391.88 256 245.9 20.37 120.57 59.54l105.79 187.32a18.71 18.71 0 010 18.28l-40.26 71.29a10 10 0 01-17.49-9.88L208.45 256 102.16 67.79a18.58 18.58 0 0110.64-26.87L241 .85a18.58 18.58 0 0121.34 8l147.1 237.36a18.49 18.49 0 010 19.58L262.36 503.2a18.58 18.58 0 01-15.79 8.8z\"\n//       ></path>\n//       <foreignObject x=\"241.18\" y=\"219.18\" width=\"121.5\" height=\"65.89\">\n//         {children}\n//       </foreignObject>\n//     </svg>\n//   );\n// }\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Card } from 'components/cards';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\n\nexport const TrackGaleriaDeSonhos = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.cards));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Galeria dos Sonhos', en: 'Dream Gallery' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Com o tema abaixo, qual <CardHighlight>carta-sonho</CardHighlight> é a mais provável dos outros\n              jogadores também visitarem?\n            </>\n          }\n          en={\n            <>\n              With the theme below, which <CardHighlight>Dream Card</CardHighlight> best relates to it?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card header={translate('Tema', 'Theme')} color=\"orange\">\n        {track.data.theme.text}\n      </Card>\n\n      <Image.PreviewGroup>\n        <Space className=\"space-container\">\n          {track.data.cards.map((cardId: ImageCardId) => {\n            return (\n              <Space className=\"space-container\" direction=\"vertical\">\n                <ImageBlurButtonContainer cardId={cardId}>\n                  <ImageCard id={cardId} cardWidth={cardWidth} />\n                </ImageBlurButtonContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(cardId)}\n                >\n                  <Translate pt=\"Selecionar\" en=\"Select\" />\n                </Button>\n              </Space>\n            );\n          })}\n        </Space>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\n\nexport const TrackMenteColetiva = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSubmit = (answer: string) => {\n    onSubmitAnswer({\n      data: { value: answer },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmit(mockSelection(track.data.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Mente Coletiva', en: 'Herd Mind' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"space-container contained margin\">\n        <Instruction contained>\n          <Translate\n            pt=\"Qual das respostas provavelmente viria na sua cabeça primeiro ao ver a pergunta?\"\n            en=\"Which of the answers would probably come to your mind first when you see the question?\"\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <Card className=\"m-question-wrapper\" color=\"yellow\">\n            <GroupQuestionCard question={track.data.question} overrideNumber={2} />\n          </Card>\n        </Space>\n\n        <Space className=\"space-container\" wrap>\n          {track.data.options.map((option: string) => (\n            <Button key={option} onClick={() => onSubmit(option)} size=\"large\" disabled={isLoading}>\n              {option}\n            </Button>\n          ))}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// Types\nimport type { DatingCandidateCard, DatingCandidateImageCard } from 'types/tdr';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { DualTranslate, Translate } from 'components/language';\n\ntype CandidateProps = {\n  head: DatingCandidateImageCard;\n  body: DatingCandidateImageCard;\n  interest: DatingCandidateCard;\n  need: DatingCandidateCard;\n  funFact: DatingCandidateCard;\n};\n\nexport const Candidate = ({ head, body, interest, need, funFact }: CandidateProps) => {\n  return (\n    <div className=\"noa-candidate\">\n      <div className=\"noa-candidate__image\">\n        <div className=\"noa-candidate__text\">\n          <DualTranslate>{head.name}</DualTranslate>\n        </div>\n        <ImageCard cardWidth={100} id={head.id} preview={false} />\n        <ImageCard cardWidth={100} id={body.id} preview={false} />\n        <div className=\"noa-candidate__text\">\n          <DualTranslate>{body.name}</DualTranslate>\n        </div>\n      </div>\n      <div className=\"noa-candidate__info\">\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Curto/Quero\" en=\"I enjoy/wish to\" />\n          </div>\n          {interest.text}\n        </div>\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Quero alguém que\" en=\"I want someone who\" />\n          </div>\n          {need.text}\n        </div>\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Uma coisa sobre mim\" en=\"Something about me\" />\n          </div>\n          {funFact.text}\n        </div>\n      </div>\n    </div>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { DatingCandidateImageCard } from 'types/tdr';\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Candidate } from '../Candidate';\n\nexport const TrackNamoroOuAmizade = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.heads, 'id'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Namoro ou Amizade?', en: 'Love or Friendship?' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dos <strong>3 partidos</strong> abaixo, qual é o melhor?\n            </>\n          }\n          en={\n            <>\n              From <strong>3 candidates</strong> below, which one is the best one?\n            </>\n          }\n        />\n      </Instruction>\n\n      <div className=\"noa-candidates\">\n        {track.data.heads.map((head: DatingCandidateImageCard, index: number) => {\n          return (\n            <Space className=\"space-container\" direction=\"vertical\" key={head.id}>\n              <Candidate\n                head={head}\n                body={track.data.bodies[index]}\n                interest={track.data.interests[index]}\n                need={track.data.needs[index]}\n                funFact={track.data.funFacts[index]}\n              />\n              <Button\n                onClick={() => onSelect(head.id)}\n                disabled={user.ready || isLoading}\n                className=\"noa-button\"\n                key={head.id}\n                type=\"primary\"\n                shape=\"round\"\n              >\n                <Translate pt=\"Esse\" en=\"This one\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Avatar, Button, Space } from 'antd';\n// Types\nimport type { StreetCard, TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { TransparentButton } from 'components/buttons';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\nimport { StreetIcon } from 'icons/StreetIcon';\nimport { IconAvatar } from 'components/avatars';\n\nexport const TrackNaRuaDoMedo = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(\n      track.variant === 'kids'\n        ? mockSelection(['0', '1'])\n        : mockSelection(track.data.options.map((h: StreetCard) => h.id))\n    );\n  });\n\n  if (track.variant === 'kids') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Na Rua do Medo', en: 'Fear Street' }} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Estamos indo de porta em porta buscar doces...\n                <br />\n                Mas qual rua devemos ir? A rua com mais doces? A rua com menos medo?\n              </>\n            }\n            en={\n              <>\n                We're trick-or-treating...\n                <br />\n                Which street should we hit first? The one with more candy? The one with less horror?\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" direction=\"vertical\">\n          <TransparentButton\n            className=\"n-street\"\n            disabled={user.ready || isLoading}\n            onClick={() => onSelect('0')}\n          >\n            <Space direction=\"vertical\" align=\"center\" className=\"margin\">\n              <Avatar style={{ backgroundColor: 'brown' }}>A</Avatar>\n              <IconAvatar icon={<StreetIcon />} size=\"large\" />\n            </Space>\n            <div className=\"n-street__houses\">\n              {track.data.options['0'].map((house: StreetCard) => (\n                <HouseCard key={`A-${house.id}`} card={house} candyLeftover={0} preview={false} />\n              ))}\n            </div>\n          </TransparentButton>\n          <TransparentButton\n            className=\"n-street\"\n            disabled={user.ready || isLoading}\n            onClick={() => onSelect('1')}\n          >\n            <Space direction=\"vertical\" align=\"center\" className=\"margin\">\n              <Avatar style={{ backgroundColor: 'dodgerblue' }}>B</Avatar>\n              <IconAvatar icon={<StreetIcon />} size=\"large\" />\n            </Space>\n            <div className=\"n-street__houses\">\n              {track.data.options['1'].map((house: StreetCard) => (\n                <HouseCard key={`B-${house.id}`} card={house} candyLeftover={0} preview={false} />\n              ))}\n            </div>\n          </TransparentButton>\n        </Space>\n      </>\n    );\n  }\n\n  // TODO: This variant does not exist yet\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Na Rua do Medo', en: 'Fear Street' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você estava tranquilo em casa e <strong>6 crianças</strong> apareceram na sua porta. Qual das\n              opções você escolheria para dar pra eles? Assustar ou guloseimas?\n            </>\n          }\n          en={\n            <>\n              You are hanging out at home and <strong>6 kids</strong> showed up at our door. Which of the\n              options do you choose to give to them? Scare 'em or give treats?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        {track.data.options.map((house: StreetCard) => (\n          <Space direction=\"vertical\" key={house.id} className=\"space-container n-street-house\">\n            <HouseCard card={house} candyLeftover={0} preview={false} />\n            <Button\n              shape=\"round\"\n              type=\"primary\"\n              disabled={user.ready || isLoading}\n              onClick={() => onSelect(house.id)}\n              loading={isLoading}\n            >\n              <Translate pt=\"Selecionar\" en=\"Select\" />\n            </Button>\n          </Space>\n        ))}\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\nimport { getColorModifier } from 'games/onda-telepatica/utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackOndaTelepatica = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const [position, setPosition] = useState(0);\n\n  const onSelect = (value: string) => {\n    if (!isLoading && !user.ready) {\n      onSubmitAnswer({\n        data: { value },\n      });\n    }\n  };\n\n  // // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(['left', 'center', 'right']));\n  });\n\n  const cardSideClass = 'o-card__side';\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Onda Telepática', en: 'Telepathic Waves' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Com a carta de as duas ideias opostas e a dica abaixo, você acha que o Medidor de Ondas\n              Telepáticas apontaria para a <TextHighlight>Esquerda</TextHighlight>,{' '}\n              <TextHighlight>Centro</TextHighlight> ou <TextHighlight>Direita</TextHighlight>?\n            </>\n          }\n          en={\n            <>\n              With the card of the two opposing ideas and the clue below, do you think the Wavelength\n              Measuring device would point to the <TextHighlight>Left</TextHighlight>,{' '}\n              <TextHighlight>Center</TextHighlight>, or <TextHighlight>Right</TextHighlight>?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card>{track.data.option.value}</Card>\n\n      <div className=\"o-simple-dial\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669.93 340\" width=\"40vw\">\n          <path\n            fill=\"#181d44\"\n            d=\"M669.88 329.88a440.53 440.53 0 00-27.31-127.68C591.16 83.26 472.81 0 335 0h-.22C198.2.07 80.75 81.88 28.66 199.16A439.25 439.25 0 000 332a7.67 7.67 0 007.68 8h654.63a7.7 7.7 0 007.21-5 7.78 7.78 0 00.41-1.68l-.05-3.44z\"\n          ></path>\n          <path\n            fill=\"#b8b2a6\"\n            d=\"M119.67 121.48a303.5 303.5 0 00-61.93 91.22 401 401 0 00-25.59 120 7 7 0 00.43 2.75A6.86 6.86 0 0039 340h295.86L181.06 73.61a300.5 300.5 0 00-61.39 47.87z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('left')}\n            onMouseEnter={() => setPosition(-1)}\n          ></path>\n\n          <path\n            fill=\"#c2acc7\"\n            d=\"M630.39 330.85A402.06 402.06 0 00606 215.46 302.44 302.44 0 00487.05 77L335.19 340h288.44a6.88 6.88 0 006.44-4.52 7.56 7.56 0 00.36-1.51c0-1.04-.02-2.08-.04-3.12z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('right')}\n            onMouseEnter={() => setPosition(1)}\n          ></path>\n          <path\n            fill=\"#96a6a8\"\n            d=\"M331.32 32.7h-.2a295 295 0 00-150.06 40.91L334.86 340h.33L487.05 77a295 295 0 00-155.73-44.3z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('center')}\n            onMouseEnter={() => setPosition(0)}\n          ></path>\n\n          <path\n            fill=\"#ff0004\"\n            d=\"M336.46 24.24a1.5 1.5 0 0 0-3 0L326.65 340a1.48 1.48 0 0 0 .45 1.1l6.81 6.73a1.51 1.51 0 0 0 2.11 0l6.81-6.73a1.48 1.48 0 0 0 .45-1.1Z\"\n            className={clsx('o-simple-dial__pointer', `o-simple-dial__pointer--p${position}`)}\n          ></path>\n        </svg>\n      </div>\n\n      <div className={clsx('o-card')}>\n        <div\n          className={clsx(\n            cardSideClass,\n            `${cardSideClass}--left`,\n            `${cardSideClass}--L${getColorModifier(track.data.card.left)}`\n          )}\n        >\n          <span className=\"o-card__arrow\">\n            <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n          </span>\n          <span className=\"o-card__text\">{track.data.card.left}</span>\n        </div>\n        <div\n          className={clsx(\n            cardSideClass,\n            `${cardSideClass}--right`,\n            `${cardSideClass}--R${getColorModifier(track.data.card.right)}`\n          )}\n        >\n          <span className=\"o-card__arrow\">\n            <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n          </span>\n          <span className=\"o-card__text\">{track.data.card.right}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function SimpleDial() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669.93 340\">\n      <path\n        fill=\"#181d44\"\n        d=\"M669.88 329.88a440.53 440.53 0 00-27.31-127.68C591.16 83.26 472.81 0 335 0h-.22C198.2.07 80.75 81.88 28.66 199.16A439.25 439.25 0 000 332a7.67 7.67 0 007.68 8h654.63a7.7 7.7 0 007.21-5 7.78 7.78 0 00.41-1.68l-.05-3.44z\"\n      ></path>\n      <path\n        fill=\"#b8b2a6\"\n        d=\"M119.67 121.48a303.5 303.5 0 00-61.93 91.22 401 401 0 00-25.59 120 7 7 0 00.43 2.75A6.86 6.86 0 0039 340h295.86L181.06 73.61a300.5 300.5 0 00-61.39 47.87z\"\n      ></path>\n      <path\n        fill=\"#96a6a8\"\n        d=\"M331.32 32.7h-.2a295 295 0 00-150.06 40.91L334.86 340h.33L487.05 77a295 295 0 00-155.73-44.3z\"\n      ></path>\n      <path\n        fill=\"#c2acc7\"\n        d=\"M630.39 330.85A402.06 402.06 0 00606 215.46 302.44 302.44 0 00487.05 77L335.19 340h288.44a6.88 6.88 0 006.44-4.52 7.56 7.56 0 00.36-1.51c0-1.04-.02-2.08-.04-3.12z\"\n      ></path>\n    </svg>\n  );\n}\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { TransparentButton } from 'components/buttons';\nimport { CharacterCard } from 'components/cards/CharacterCard';\n\nexport const TrackPalhetaDeCores = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (color: string) => {\n    onSubmitAnswer({\n      data: { value: color },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.palette));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Palheta de Cores', en: 'Color Palette' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={<>Selecione a cor que melhor representa o personagem abaixo!</>}\n            en={<>Select the color that best represents the character below!</>}\n          />\n        </Instruction>\n\n        <Card header={translate('Dica', 'Clue')} color=\"red\">\n          <CharacterCard character={track.data.card} className=\"grayscale\" size={200} />\n        </Card>\n\n        <Space className=\"space-container k-palette\" wrap>\n          {track.data.palette.map((color: string) => {\n            return (\n              <TransparentButton\n                onClick={() => onSelect(color)}\n                className=\"k-swatch-button\"\n                disabled={user.read || isLoading}\n                key={color}\n              >\n                <SplatterSVG color={color} />\n              </TransparentButton>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n\ntype SplatterSVGProps = {\n  color: string;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function SplatterSVG({ color, ...rest }: SplatterSVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 494.11 511.04\" {...rest}>\n      <path\n        fill={color}\n        d=\"M228.54 0h35.93a4.71 4.71 0 001.3.7c27.26 5 48.92 19.17 65.61 41 13.89 18.12 23 38.05 20.86 61.68-.63 6.91-2.09 13.82-2 20.71.12 7.66 6.12 12.85 13.67 11.74a42 42 0 0014.62-5.55c17.16-10 35.31-15.24 55.25-12.26 27.14 4 51.12 26.19 58 53.26 7.35 29-3 59.73-25.55 76.79-14.57 11-31.25 14.29-49 15.54-14.61 1-24.33 10.1-29.58 23.39-5.11 12.92-2.78 24.76 7.31 34.73 4.49 4.44 9 8.85 13.5 13.3 17.49 17.35 28.24 38.14 30.44 62.73 2.4 26.77-5.22 50.77-21.48 72.23-44 58-133.58 54-171.09-8.39-9.08-15.11-15-32.1-22.78-48-3.63-7.38-7.36-15.08-12.73-21.14-12.88-14.54-34-16.34-53.09-6-12.18 6.57-20.6 17.13-29.76 27A73.21 73.21 0 014.9 387.52C2.41 380.4 1.59 372.7 0 365.28v-4c.34-2.26.82-4.52 1-6.8 2.2-27.35 22.3-52.14 48.79-59.39 10.7-2.92 21.71-4.67 32.5-7.28 16.67-4 28.74-17 30.45-32.32 1.95-17.45-6.31-33.26-21.72-41.45-4.4-2.33-8.91-4.44-13.31-6.77-19.58-10.38-28-26.24-24.72-46.46 3.2-19.73 19-33.44 38.86-34.2 10.44-.39 19.85 3.32 29.55 6.12 14.11 4.07 25-.16 22.21-19.54a84 84 0 011-31.1c10.26-42.42 36.89-69.48 79.33-80.57 1.56-.44 3.12-1 4.6-1.52z\"\n      ></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// AntDesign Resources\nimport { Button } from 'antd';\nimport { CheckCircleFilled, DislikeFilled, LikeFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from 'components/avatars';\n// Sass\nimport './SocialProfile.scss';\nimport { Translate } from 'components/language';\n\ntype SocialProfileProps = {\n  /**\n   * The avatar id to be used.\n   */\n  avatarId: string;\n  /**\n   * The name of the user.\n   */\n  name: ReactNode;\n  /**\n   * The handle of the user.\n   */\n  handle: ReactNode;\n  /**\n   * Whether the user is verified or not.\n   */\n  verified?: boolean;\n  /**\n   * The class name to be appended to the container.\n   */\n  className?: string;\n};\n\n/**\n * The social profile component that can be used a twitter or an instagram profile.\n */\nexport function SocialProfile({ avatarId, name, handle, verified, className }: SocialProfileProps) {\n  return (\n    <div className={clsx('profile', className)}>\n      <Avatar id={avatarId} size=\"large\" className=\"profile__avatar\" />\n      <span className=\"profile__name\">\n        {name} {verified && <CheckCircleFilled style={{ color: 'dodgerBlue' }} />}\n      </span>\n      <span className=\"profile__handle\">{handle}</span>\n    </div>\n  );\n}\n\ntype TweetProps = SocialProfileProps & {\n  /**\n   * The content of the tweet.\n   */\n  children: ReactNode;\n  /**\n   * The function to be called when the like button is clicked.\n   */\n  onLike?: () => void;\n  /**\n   * The function to be called when the dislike button is clicked.\n   */\n  onDislike?: () => void;\n  /**\n   * Whether the buttons should be disabled or not.\n   */\n  disabled?: boolean;\n};\n\nexport function Tweet({\n  avatarId,\n  name,\n  handle,\n  verified,\n  className,\n  children,\n  onLike,\n  onDislike,\n  disabled,\n}: TweetProps) {\n  return (\n    <div className={clsx('tweet', className)}>\n      <SocialProfile avatarId={avatarId} name={name} handle={handle} verified={verified} />\n      <span className=\"tweet__text\">{children}</span>\n      <div className=\"tweet__buttons\">\n        <Button block icon={<LikeFilled />} onClick={onLike} disabled={disabled}>\n          <Translate pt=\"Curtir\" en=\"Like\" />\n        </Button>\n        <Button block icon={<DislikeFilled />} onClick={onDislike} disabled={disabled}>\n          <Translate pt=\"Não curto\" en=\"Dislike\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Tweet } from 'components/game/SocialProfile';\n\nexport const TrackPolemicaDaVez = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: number) => {\n    onSubmitAnswer({\n      data: { value: String(value) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Polêmica da Vez', en: \"That's Polemic\" }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Observe a twitada abaixo, qual a porcentagem de <strong>curtidas</strong> entre os jogadores\n                você acha que ele ganhou?\n              </>\n            }\n            en={\n              <>\n                Based on the tweet below, what percentage of <strong>likes</strong> among the players do you\n                think it got?\n              </>\n            }\n          />\n        </Instruction>\n\n        <Tweet\n          avatarId=\"A\"\n          name=\"Bob\"\n          handle=\"@imnotarobot\"\n          verified\n          onLike={() => {}}\n          onDislike={() => {}}\n          disabled\n        >\n          {track.data.card.text}\n        </Tweet>\n\n        <Space className=\"space-container\">\n          {track.data.options.map((option: number) => {\n            return (\n              <Button\n                key={`option-${option}`}\n                onClick={() => onSelect(option)}\n                size=\"large\"\n                disabled={isLoading || user.ready}\n                type=\"primary\"\n                shape=\"round\"\n              >\n                {option}%\n              </Button>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { Book } from 'games/porta-dos-desesperados/components/Book';\nimport { DoorFrame } from 'components/game/DoorFrame';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackPortaDosDesesperados = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const doorWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.doors));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Porta dos Desesperados', en: 'Obscure Doors' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              A pista está nas páginas do livro.\n              <br />\n              Selecione a porta correta que mais se relaciona com o livro.\n            </>\n          }\n          en={\n            <>\n              The clue is in the pages of the book.\n              <br />\n              Select the door that best fits the clue.\n            </>\n          }\n        />\n      </Instruction>\n      <Image.PreviewGroup>\n        <Space className=\"space-container\">\n          {track.data.doors.map((cardId: ImageCardId) => {\n            return (\n              <Space className=\"space-container\" direction=\"vertical\" key={cardId}>\n                <ImageBlurButtonContainer cardId={cardId}>\n                  <DoorFrame width={doorWidth}>\n                    <ImageCard id={cardId} cardWidth={150} />\n                  </DoorFrame>\n                </ImageBlurButtonContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(cardId)}\n                >\n                  <Translate pt=\"Esse é a saída\" en=\"This is the exit\" />\n                </Button>\n              </Space>\n            );\n          })}\n        </Space>\n      </Image.PreviewGroup>\n\n      <Space className=\"i-book-container\">\n        <Image.PreviewGroup>\n          <Book>\n            <ImageBlurButtonContainer cardId={track.data.book}>\n              <ImageCard id={track.data.book[0]} cardWidth={140} />\n            </ImageBlurButtonContainer>\n            <ImageBlurButtonContainer cardId={track.data.book}>\n              <ImageCard id={track.data.book?.[1] || track.data.book[0]} cardWidth={140} />\n            </ImageBlurButtonContainer>\n          </Book>\n        </Image.PreviewGroup>\n      </Space>\n    </>\n  );\n};\n","import clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Avatar } from 'components/avatars';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { ShooterIcon } from 'icons/ShooterIcon';\nimport { sortPlayers } from 'utils/helpers';\n\nexport const TrackQuemNaoMata = ({ onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(Object.keys(players)));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Quem Não Mata, Morre!', en: 'Mortal Standoff' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Estamos num impasse! O primeiro a se mexer leva bala! Em quem você atira primeiro? (Pode ser\n                você mesmo)\n              </>\n            }\n            en={<>A standoff! Who are you going to shoot first? (It could be yourself)</>}\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" wrap>\n          {sortPlayers(players).map((player, index, arr) => {\n            return (\n              <div key={player.id} className=\"qnm-shooter\">\n                <IconAvatar\n                  icon={<ShooterIcon />}\n                  size={48}\n                  className={clsx(index >= arr.length / 2 && 'qnm-shooter__reverse')}\n                />\n                <Button\n                  icon={<Avatar id={player.avatarId} size=\"small\" />}\n                  onClick={() => onSelect(player.id)}\n                  type=\"primary\"\n                  loading={isLoading}\n                  disabled={user.ready}\n                >\n                  {player.name}\n                </Button>\n              </div>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { CanvasSVG } from 'components/canvas';\nimport { MonsterCard } from 'components/cards/MonsterCard';\n\nexport const TrackRetratoFalado = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const cardWidth = useCardWidth(5, { minWidth: 250, maxWidth: 270 });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.options, 'playerId'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Retrato Falado Monstruoso', en: 'Monster Sketch' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Dentre as ilustrações abaixo, qual melhor ilustra o mostro?\n                <br />\n                Foi você quem desenhou? Você pode votar em si mesmo se quiser.\n              </>\n            }\n            en={\n              <>\n                Among the illustrations below, which one best illustrates the monster?\n                <br />\n                Is that your drawing? You may vote for yourself if you want.\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <MonsterCard currentMonster={track.data.card} showControls cardWidth={200} />\n        </Space>\n\n        <div className=\"a-drawings\">\n          {track.data.options.map((entry: PlainObject) => (\n            <div className=\"a-drawings__entry\" key={entry.playerId}>\n              <CanvasSVG drawing={entry.drawing} width={cardWidth} className=\"a-drawing\" />\n\n              <Space className=\"space-container\">\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(entry.playerId)}\n                >\n                  <Translate pt=\"Selecionar\" en=\"Select\" />\n                </Button>\n              </Space>\n            </div>\n          ))}\n        </div>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\nimport type { FightingContender } from 'games/super-campeonato/utils/type';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\n\nexport const TrackSuperCampeonato = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(6, { minWidth: 200, maxWidth: 270 });\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.contenders, 'id') },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Super Campeonato', en: 'Ultimate Championship' }} />\n      <Instruction contained>\n        <Translate\n          pt={<>É a batalha final, qual desses dois venceria esse desafio?</>}\n          en={<>It's the final showdown, which one of these two would win this challenge?</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card header={translate('Desafio', 'Challenge')} color=\"purple\">\n          {track.data.challenge.text}\n        </Card>\n      </Space>\n\n      <Space className=\"space-container center\">\n        {track.data.contenders.map((contender: FightingContender, index: number) => {\n          return (\n            <Space direction=\"vertical\" key={contender.id}>\n              <ImageBlurButtonContainer cardId={contender.id}>\n                <CharacterCard\n                  size={cardWidth}\n                  overlayColor={index === 0 ? 'red' : 'blue'}\n                  character={contender}\n                />\n              </ImageBlurButtonContainer>\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: contender.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Types\nimport type { SuspectCard as SuspectCardType } from 'types/tdi';\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Card } from 'components/cards';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\nimport { Avatar } from 'components/avatars';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nexport const TrackTestemunhaOcular = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.suspects, 'id'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Testemunha Ocular', en: 'Eye Witness' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt=\"Uma testemunha deu essa resposta ao tentar falar quem era o criminoso à polícia.\"\n            en=\"A witness gave this answer when trying to explain who the perpetrator was to the police.\"\n          />\n        </Instruction>\n\n        <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n          {track.data.question.question}\n        </Card>\n\n        <Space className=\"space-container\">\n          <Avatar id=\"A\" size=\"large\" />{' '}\n          <SpeechBubble shadow size=\"small\">\n            {track.data.answer ? (\n              <Translate en=\"YES\" pt=\"SIM\" />\n            ) : (\n              <>\n                <Translate en=\"NO\" pt=\"NÃO\" />\n              </>\n            )}{' '}\n            <IconAvatar\n              size=\"large\"\n              icon={track.data.answer ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n            />\n          </SpeechBubble>\n        </Space>\n\n        <Instruction contained>\n          <Translate\n            pt=\"Qual dos suspeito você acha que é o criminoso?\"\n            en=\"Which one of them is the perpetrator?\"\n          />\n        </Instruction>\n\n        <Image.PreviewGroup>\n          <Space className=\"space-container\">\n            {track.data.suspects.map((suspect: SuspectCardType) => {\n              return (\n                <Space className=\"space-container\" direction=\"vertical\" key={suspect.id}>\n                  <SuspectCard suspect={suspect} width={cardWidth} />\n\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() => onSelect(suspect.id)}\n                  >\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                  </Button>\n                </Space>\n              );\n            })}\n          </Space>\n        </Image.PreviewGroup>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { SuggestionEasel } from 'components/game/SuggestionEasel';\nimport { TransparentButton } from 'components/buttons';\n\nexport const TrackUeSoIsso = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSubmitClue = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitClue(mockSelection(track.data.cards, 'text'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Ué, só isso?', en: \"That's it?\" }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Jogando <strong>Ué, Só Isso</strong>, você recebeu as seguintes pistas que estão de alguma\n                forma relacionadas à palavra secreta:\n              </>\n            }\n            en={\n              <>\n                Playing the game <strong>That's it</strong>, you received the following clues that are somehow\n                related to the secret word:\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" wrap>\n          {track.data.options.map((option: string) => (\n            <SuggestionEasel id={option} key={option} value={option} />\n          ))}\n        </Space>\n\n        <Instruction contained>\n          <Translate pt=\"Qual você acha que é a palavra secreta?\" en=\"Which one is the secret word?\" />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          {track.data.cards.map((card: TextCard, index: number) => (\n            <TransparentButton key={card.id} disabled={isLoading} onClick={() => onSubmitClue(card.text)}>\n              <Card header={LETTERS[index]} randomColor>\n                {card.text}\n              </Card>\n            </TransparentButton>\n          ))}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { MovieCard } from 'components/cards/MovieCard';\nimport { MovieReviewCard } from 'components/cards/MovieReviewCard';\n\nexport const TrackVamosAoCinema = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(['A', 'B', 'C', 'D']));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Vamos ao Cinema!', en: 'Movie Night!' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Decidimos que o filme que mais se encaixa nas críticas abaixo é o que vamos assistir! Qual filme\n              você quer ver?\n            </>\n          }\n          en={\n            <>\n              We decided that we will watch a movie that best match both reviews bellow! Which movie do you\n              prefer?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <MovieReviewCard\n          type=\"positive\"\n          text={track.data.reviews.good.text}\n          highlights={track.data.reviews.good.highlights}\n        />\n\n        <MovieReviewCard\n          type=\"negative\"\n          text={track.data.reviews.bad.text}\n          highlights={track.data.reviews.bad.highlights}\n        />\n      </Space>\n\n      <Space className=\"v-movies\">\n        <Space className=\"space-container\" direction=\"vertical\">\n          <MovieCard movie={track.data.movies[0]} disableSuffix prefixColor=\"Khaki\" />\n          <MovieCard movie={track.data.movies[1]} prefixColor=\"aquamarine\" suffixColor=\"Khaki\" />\n          <MovieCard movie={track.data.movies[2]} disablePrefix suffixColor=\"aquamarine\" />\n        </Space>\n        <div className=\"v-movie-buttons\">\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'Khaki', color: 'black' }}\n            onClick={() => onSelect('A')}\n            disabled={isLoading || user.ready}\n          >\n            A\n          </Button>\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'aquamarine', color: 'black' }}\n            onClick={() => onSelect('B')}\n            disabled={isLoading || user.ready}\n          >\n            B\n          </Button>\n        </div>\n        <div className=\"v-movie-buttons\">\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'LightGreen', color: 'black' }}\n            onClick={() => onSelect('C')}\n            disabled={isLoading || user.ready}\n          >\n            C\n          </Button>\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'Plum', color: 'black' }}\n            onClick={() => onSelect('D')}\n            disabled={isLoading || user.ready}\n          >\n            D\n          </Button>\n        </div>\n        <Space className=\"space-container\" direction=\"vertical\">\n          <MovieCard movie={track.data.movies[3]} disableSuffix prefixColor=\"LightGreen\" />\n          <MovieCard movie={track.data.movies[4]} prefixColor=\"Plum\" suffixColor=\"LightGreen\" />\n          <MovieCard movie={track.data.movies[5]} disablePrefix suffixColor=\"Plum\" />\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { TransparentButton } from 'components/buttons';\n\nexport const TrackMegamixBestOfThree = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (index: number) => {\n    onSubmitAnswer({\n      data: { value: String(index) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Melhor de 3', en: 'Best of 3' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n          {track.data.card.question}\n        </Card>\n\n        <Space className=\"space-container\">\n          <TransparentButton onClick={() => onSelect(0)} disabled={isLoading || user.ready}>\n            <Card header=\"A\" color=\"red\">\n              {track.data.card.options[0]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(1)} disabled={isLoading || user.ready}>\n            <Card header=\"B\" color=\"purple\">\n              {track.data.card.options[1]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(2)} disabled={isLoading || user.ready}>\n            <Card header=\"C\" color=\"blue\">\n              {track.data.card.options[2]}\n            </Card>\n          </TransparentButton>\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nimport { TransparentButton } from 'components/buttons';\n\nexport const TrackMegamixThisThat = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (index: number) => {\n    onSubmitAnswer({\n      data: { value: String(index) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Isso ou Aquilo?', en: 'This or That?' }} />\n      <RuleInstruction type=\"action\">\n        <Translate pt=\"Selecione qual você prefere:\" en=\"Select which one you prefer:\" />\n      </RuleInstruction>\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Space className=\"space-container\">\n          <TransparentButton onClick={() => onSelect(0)} disabled={isLoading || user.ready}>\n            <Card header={translate('Isso', 'This')} color=\"red\">\n              {track.data.card.options[0]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(1)} disabled={isLoading || user.ready}>\n            <Card header={translate('Aquilo', 'That')} color=\"blue\">\n              {track.data.card.options[1]}\n            </Card>\n          </TransparentButton>\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Types\nimport type { AlienSign, TrackProps } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { TransparentButton } from 'components/buttons';\nimport { IconAvatar } from 'components/avatars';\nimport { AlienIcon } from 'icons/AlienIcon';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\nimport { SignCard } from 'components/cards/SignCard';\n\nexport const TrackComunicacaoAlienigena = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(String(mockSelection(track.data.items)));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Comunicação Alienígena', en: 'Alien Communication' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Um alienígena que não fala nossa língua está pedindo um objeto.\n                <br />\n                Qual o objeto que ele quer?\n              </>\n            }\n            en={\n              <>\n                An alien who doesn't speak our language is asking for an object.\n                <br />\n                What object do they want?\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <IconAvatar icon={<AlienIcon />} size=\"large\" />{' '}\n          <SpeechBubble shadow>\n            <Space className=\"space-container\">\n              {track.data.attributes.map((attribute: AlienSign, index: number) => {\n                return (\n                  <span>\n                    <SignCard id={String(track.data.signs[index])} />\n                    <DualTranslate>{attribute.name}</DualTranslate>\n                  </span>\n                );\n              })}\n            </Space>\n          </SpeechBubble>\n        </Space>\n\n        <Instruction contained>\n          <Translate\n            pt={<>Selecione o objeto que tem a ver com a palavra que o alienígena está pedindo.</>}\n            en={<>Select the object that has to do with the word the alien is asking for.</>}\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          {track.data.items.map((itemId: number) => {\n            return (\n              <TransparentButton\n                key={`item-${itemId}`}\n                onClick={() => onSelect(String(itemId))}\n                disabled={isLoading}\n              >\n                <ItemCard id={String(itemId)} width={80} />\n              </TransparentButton>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","import { useMemo } from 'react';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\nimport type { TrackProps } from '../../utils/types';\nimport type { FightingContender } from 'games/super-campeonato/utils/type';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { PlayerGlyphs } from 'games/quem-sou-eu/components/PlayerGlyphs';\n\nexport const TrackQuemSouEu = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(7, { minWidth: 150, maxWidth: 270 });\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.contenders, 'id') },\n    });\n  });\n\n  const botPlayer: GamePlayer = useMemo(() => {\n    const selectedGlyphs: BooleanDictionary = {};\n    track.data.positive.forEach((glyph: number) => {\n      selectedGlyphs[glyph] = true;\n    });\n    track.data.negative.forEach((glyph: number) => {\n      selectedGlyphs[glyph] = false;\n    });\n    return { id: 'A', avatarId: 'A', name: 'Bob', selectedGlyphs, ready: false, updatedAt: 0 };\n  }, [track.data]);\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Quem Sou Eu?', en: 'Who Am I?' }} />\n      <Instruction contained>\n        <Translate\n          pt=\"Decifre os símbolos e selecione o personagem que mais tem aver com eles.\"\n          en=\"Decipher the glyphs and select the character that has the most to do with them.\"\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <PlayerGlyphs player={botPlayer} glyphWidth={50} />\n      </Space>\n\n      <Space className=\"space-container center\">\n        {track.data.contenders.map((contender: FightingContender) => {\n          return (\n            <Space direction=\"vertical\" key={contender.id}>\n              <CharacterCard size={cardWidth} character={contender} />\n\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: contender.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Card } from 'components/cards';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { IconAvatar } from 'components/avatars';\n\nexport const TrackTaNaCara = ({ track, onSubmitAnswer }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([true, false]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Tá Na Cara', en: 'Guess Who What?' }} />\n      <Instruction contained>\n        <Translate\n          pt=\"É bem óbvio só de olhar pra essa pessoa. Mas só pra confirmar, responda essa pergunta de acordo\n              com o que você acha.\"\n          en=\"It's pretty obvious just by looking at this person. But just to confirm, answer this question:\"\n        />\n      </Instruction>\n\n      <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n        {track.data.question.question}\n      </Card>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SuspectCard suspect={track.data.suspect} width={cardWidth} />\n      </Space>\n\n      <Space className=\"space-container\">\n        <Button\n          size=\"large\"\n          icon={<IconAvatar icon={<SpeechBubbleDeclinedIcon />} />}\n          onClick={() => onSelect('no')}\n          disabled={isLoading}\n          shape=\"round\"\n        >\n          <Translate en=\"NO\" pt=\"NÃO\" />\n        </Button>\n\n        <Button\n          size=\"large\"\n          icon={<IconAvatar icon={<SpeechBubbleAcceptedIcon />} />}\n          onClick={() => onSelect('yes')}\n          disabled={isLoading}\n          shape=\"round\"\n        >\n          <Translate en=\"YES\" pt=\"SIM\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Types\nimport type { TrackProps } from '../../utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nimport { TransparentButton } from 'components/buttons';\nimport { AvatarCard } from 'components/avatars';\nimport { Card } from 'components/cards';\n\nexport const TrackMegamixWhoSaidThis = ({ track, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (playerId: PlayerId) => {\n    onSubmitAnswer({\n      data: { value: playerId },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.card.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Quem disse isso?', en: 'Who Said This?' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt=\"Selecione qual jogador você acha que disse esse fato:\"\n          en=\"Select the player who said this fact:\"\n        />\n      </RuleInstruction>\n      <Card hideHeader>\"{track.data.card.text}\"</Card>\n\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Space className=\"space-container\">\n          {track.data.card.options.map((playerId: PlayerId) => {\n            const player = players[playerId];\n            return (\n              <TransparentButton onClick={() => onSelect(playerId)} disabled={isLoading || user.ready}>\n                <AvatarCard player={player} withName />\n              </TransparentButton>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\nimport type { GameRound } from 'types/game';\nimport type { Track } from './utils/types';\n// Components\nimport { Step, type StepProps } from 'components/steps';\nimport { ClubLine } from './components/ClubLine';\nimport { FallbackComponent } from './components/FallbackComponent';\nimport { TrackArteRuim } from './components/Tracks/TrackArteRuim';\nimport { TrackLabirintoSecreto } from './components/Tracks/TrackLabirintoSecreto';\nimport { TrackContadoresHistorias } from './components/Tracks/TrackContadoresHistorias';\nimport { TrackCrimesHediondos } from './components/Tracks/TrackCrimesHediondos';\nimport { TrackCruzaPalavras } from './components/Tracks/TrackCruzaPalavras';\nimport { TrackDetetivesImaginativos } from './components/Tracks/TrackDetetivesImaginativos';\nimport { TrackDilemaDosEsquiadores } from './components/Tracks/TrackDilemaDosEsquiadores';\nimport { TrackEspiaoEntreNos } from './components/Tracks/TrackEspiaoEntreNos';\nimport { TrackFileiraDeFatos } from './components/Tracks/TrackFileiraDeFatos';\nimport { TrackGaleriaDeSonhos } from './components/Tracks/TrackGaleriaDeSonhos';\nimport { TrackMenteColetiva } from './components/Tracks/TrackMenteColetiva';\nimport { TrackNamoroOuAmizade } from './components/Tracks/TrackNamoroOuAmizade';\nimport { TrackNaRuaDoMedo } from './components/Tracks/TrackNaRuaDoMedo';\nimport { TrackOndaTelepatica } from './components/Tracks/TrackOndaTelepatica';\nimport { TrackPalhetaDeCores } from './components/Tracks/TrackPalhetaDeFores';\nimport { TrackPolemicaDaVez } from './components/Tracks/TrackPolemicaDaVez';\nimport { TrackPortaDosDesesperados } from './components/Tracks/TrackPortaDosDesesperados';\nimport { TrackQuemNaoMata } from './components/Tracks/TrackQuemNaoMata';\nimport { TrackRetratoFalado } from './components/Tracks/TrackRetratoFalado';\nimport { TrackSuperCampeonato } from './components/Tracks/TrackSuperCampeonato';\nimport { TrackTestemunhaOcular } from './components/Tracks/TrackTestemunhaOcular';\nimport { TrackUeSoIsso } from './components/Tracks/TrackUeSoIsso';\nimport { TrackVamosAoCinema } from './components/Tracks/TrackVamosAoCinema';\nimport { TrackMegamixBestOfThree } from './components/Tracks/TrackMegamixBestOfThree';\nimport { TrackMegamixThisThat } from './components/Tracks/TrackMegamixThisThat';\nimport { TrackComunicacaoAlienigena } from './components/Tracks/TrackComunicacaoAlienigena';\nimport { TrackQuemSouEu } from './components/Tracks/TrackQuemSouEu';\nimport { TrackTaNaCara } from './components/Tracks/TrackTaNaCara';\nimport { TrackMegamixWhoSaidThis } from './components/Tracks/TrackMegamixWhoSaidThis';\n\ntype StepTrackProps = {\n  round: GameRound;\n  track: Track;\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitAnswer: GenericFunction;\n} & Pick<StepProps, 'announcement'>;\n\nexport const StepTrack = ({ announcement, ...rest }: StepTrackProps) => {\n  const TrackComponent =\n    {\n      'arte-ruim': TrackArteRuim,\n      'comunicacao-alienigena': TrackComunicacaoAlienigena,\n      'contadores-historias': TrackContadoresHistorias,\n      'crimes-hediondos': TrackCrimesHediondos,\n      'cruza-palavras': TrackCruzaPalavras,\n      'detetives-imaginativos': TrackDetetivesImaginativos,\n      'dilema-dos-esquiadores': TrackDilemaDosEsquiadores,\n      'espiao-entre-nos': TrackEspiaoEntreNos,\n      'fileira-de-fatos': TrackFileiraDeFatos,\n      'galeria-de-sonhos': TrackGaleriaDeSonhos,\n      'labirinto-secreto': TrackLabirintoSecreto,\n      'megamix-best-of-three': TrackMegamixBestOfThree,\n      'megamix-this-that': TrackMegamixThisThat,\n      'megamix-who-said-this': TrackMegamixWhoSaidThis,\n      'mente-coletiva': TrackMenteColetiva,\n      'namoro-ou-amizade': TrackNamoroOuAmizade,\n      'na-rua-do-medo': TrackNaRuaDoMedo,\n      'onda-telepatica': TrackOndaTelepatica,\n      'palheta-de-cores': TrackPalhetaDeCores,\n      'polemica-da-vez': TrackPolemicaDaVez,\n      'porta-dos-desesperados': TrackPortaDosDesesperados,\n      'quem-nao-mata': TrackQuemNaoMata,\n      'quem-sou-eu': TrackQuemSouEu,\n      'retrato-falado': TrackRetratoFalado,\n      'super-campeonato': TrackSuperCampeonato,\n      'testemunha-ocular': TrackTestemunhaOcular,\n      'ta-na-cara': TrackTaNaCara,\n      'ue-so-isso': TrackUeSoIsso,\n      'vamos-ao-cinema': TrackVamosAoCinema,\n    }?.[rest.track.game] ?? FallbackComponent;\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <TrackComponent {...rest} />\n      <ClubLine players={rest.players} currentRound={rest.round.current} />\n    </Step>\n  );\n};\n","// Type\nimport type { Track } from '../utils/types';\n// Utils\nimport { TITLES } from '../utils/constants';\n// Components\nimport { DualTranslate } from 'components/language';\n\ntype TrackTitleProps = {\n  track: Track;\n};\n\nexport const TrackTitle = ({ track }: TrackTitleProps) => {\n  const instruction: DualLanguageValue = TITLES?.[track.game] ?? {\n    pt: 'Nome do Jogo',\n    en: 'Game Title',\n  };\n\n  return <DualTranslate>{instruction}</DualTranslate>;\n};\n","// Types\nimport type { GameRound } from 'types/game';\n// Components\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\nexport function DJInstructions({ round }: { round: GameRound }): JSX.Element {\n  if (round.current <= 1) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Fala galera! Eu sou o DJ PruPruPru!\n              <br />O objetivo desse jogo é <strong>entrar</strong> e <strong>permanecer</strong> na área VIP!\n              <br />\n              Você consegue isso se você sempre responder com a maioria! Não importa se está certo ou errado.\n              <br />\n              Ao responder com a maioria, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight>{' '}\n              ponto por entrar na área VIP ou <PointsHighlight type=\"positive\">2</PointsHighlight> points se\n              você estiver lá.\n              <br /> Vamos aos hits!\n            </>\n          }\n          en={\n            <>\n              Yo my party people! I'm DJ PruPruPru!\n              <br />\n              The goal of the game is to <strong>join</strong> and <strong>stay</strong> in the VIP area!\n              <br />\n              You achieve this by always answering the tracks with the majority. It doesn't matter if it's\n              wrong or right.\n              <br />\n              When answering with the majority, you gain <PointsHighlight type=\"positive\">\n                1\n              </PointsHighlight>{' '}\n              point for joining the VIP area or <PointsHighlight type=\"positive\">2</PointsHighlight> points if\n              you're already there.\n              <br />\n              Let's play those hits!\n            </>\n          }\n        />\n      </Instruction>\n    );\n  }\n\n  if (round.current === Math.round(round.total / 2)) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              DJ PruPruPru está de volta!\n              <br />\n              Estamos no meio da noite! Você está conseguindo ficar na área VIP?\n            </>\n          }\n          en={\n            <>\n              DJ PruPruPru back here!\n              <br />\n              We're halfway. Are you able to stay in the VIP area?\n            </>\n          }\n        />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Última rodada! Ganha quem estiver na área VIP com mais pontos!\n            <br />\n            Será que será você?\n          </>\n        }\n        en={\n          <>\n            It's the last round! The player with the most points in the VIP area will win!\n            <br />\n            Will that be you?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Types\nimport type { PhaseProps, GameRound } from 'types/game';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitTrackAnswerAPIRequest } from './utils/api-requests';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { showDJPruPruPruStep } from './utils/helpers';\n// Icons\nimport { DJIcon } from 'icons/DJIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { TrackIcon } from './components/TrackIcon';\nimport { TrackInstructions } from './components/TrackInstructions';\nimport { StepTrack } from './StepTrack';\nimport { TrackTitle } from './components/TrackTitle';\nimport { DJInstructions } from './components/RulesBlobs';\nimport { Translate } from 'components/language';\nimport { DJPruPruPruSound } from 'components/audio/DJPruPruPruSound';\n\nexport function PhaseTrack({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep, goToNextStep } = useStep(showDJPruPruPruStep(state.round));\n\n  // Dynamic background\n  useColorizeBackground(user, state?.round?.current);\n\n  const onSubmitAnswer = useOnSubmitTrackAnswerAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<TrackIcon track={state.track} />}\n      title={\n        <>\n          <Avatar size=\"large\" style={{ backgroundColor: 'DimGray', verticalAlign: 'middle' }}>\n            {state.round.current}\n          </Avatar>{' '}\n          <TrackTitle track={state.track} />\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <TrackInstructions track={state.track} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.TRACK}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<DJIcon />}\n          title={<DJAnnouncementTitle round={state.round} />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={state?.round?.current < 2 ? 20 : 7}\n          unskippable\n          type=\"block\"\n        >\n          <DJPruPruPruSound />\n          <DJInstructions round={state.round} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepTrack\n          track={state.track}\n          round={state.round}\n          players={players}\n          announcement={announcement}\n          onSubmitAnswer={onSubmitAnswer}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nfunction DJAnnouncementTitle({ round }: { round: GameRound }) {\n  if (round.current < 2) return <Translate pt=\"A Balada\" en=\"The Club\" />;\n  if (round.current === Math.round(round.total / 2))\n    return <Translate pt=\"E tamo só esquentando\" en=\"We're halfway!\" />;\n  return <Translate pt=\"Última música\" en=\"The last song\" />;\n}\n","import { useEffect, useState } from 'react';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { SeedEntryArteRuim } from '../../utils/types';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'icons/PanicIcon';\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\n\ntype SeedArteRuimProps = {\n  seed: SeedEntryArteRuim;\n  updateData: GenericComponent;\n};\n\nexport function SeedArteRuim({ seed, updateData }: SeedArteRuimProps) {\n  const { translate } = useLanguage();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 13,\n    autoStart: false,\n    onExpire: () => {\n      updateData(\n        {\n          [seed.card.id]: JSON.stringify(lines),\n        },\n        true\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 2) {\n      setTimesUp(true);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Para ajudar aliviar o estresse de ser sensual na balada, você resolveu se expressar artisticamente\"\n          en=\"To help relieve the stress of being incredibly hot in the club, you decided to express yourself through art\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Você tem <TimeHighlight>10 segundos</TimeHighlight> para desenhar a carta abaixo. Quando\n                estiver pronto, aperte o botão, o texto irá aparecer, então desenhe rápido!\n              </>\n            }\n            en={\n              <>\n                You have <TimeHighlight>10 seconds</TimeHighlight> to draw the card below. When you're ready,\n                press the button so the text will show up and then draw fast!\n              </>\n            }\n          />\n        </Instruction>\n        <Button onClick={start} type=\"primary\" disabled={isRunning}>\n          <Translate pt=\"Começar\" en=\"Start\" />\n        </Button>\n\n        <Card size=\"large\" header={translate('Desenhe', 'Draw')} className=\"a-draw__card\" color=\"yellow\">\n          {isRunning ? (\n            <>\n              {seed.card.text}\n              <span className=\"a-draw__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n            </>\n          ) : (\n            '?'\n          )}\n        </Card>\n        {isRunning && <ArteRuimTimerSound />}\n        {isTimesUp ? (\n          <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n        ) : isRunning ? (\n          <DrawingCanvas lines={lines} setLines={setLines} />\n        ) : (\n          <DrawingCanvas lines={[]} setLines={NOOP} />\n        )}\n      </Space>\n    </div>\n  );\n}\n","import { capitalize } from 'lodash';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\nimport { HeartOutlined, MessageOutlined, SendOutlined } from '@ant-design/icons';\n// Types\nimport type { GamePlayer } from 'types/player';\nimport type { SeedEntryLabirintoSecreto } from '../../utils/types';\n// Components\nimport { BikiniModelIcon } from 'icons/BikiniModelIcon';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { SocialProfile } from 'components/game/SocialProfile';\n\ntype SeedLabirintoSecretoProps = {\n  seed: SeedEntryLabirintoSecreto;\n  updateData: GenericComponent;\n  user: GamePlayer;\n};\n\nexport function SeedLabirintoSecreto({ seed, updateData, user }: SeedLabirintoSecretoProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você decidiu postar uma foto piranhuda no Instagram antes de se arrumar...\"\n          en=\"You decided to post a thirst trap on Instagram before getting ready...\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Para não pensarem mal de você, você escolheu <TextHighlight>{seed.tree.text}</TextHighlight>{' '}\n                como a legenda de impacto da sua postagem. Agora escolha o melhor adjetivo que vai bem com\n                ela.\n              </>\n            }\n            en={\n              <>\n                Thinking about the haters, you chose <TextHighlight>{seed.tree.text}</TextHighlight> as a\n                caption. Now select the best adjective to go with it.\n              </>\n            }\n          />\n        </Instruction>\n\n        <div className=\"cm-instagram\">\n          <SocialProfile\n            avatarId={user.avatarId}\n            name={user.name}\n            handle={<Translate pt=\"Logo ali, Brasil\" en=\"Somewhere\" />}\n            className=\"cm-instagram__user\"\n          />\n          <div className=\"cm-instagram__picture\">\n            <BikiniModelIcon />\n          </div>\n          <div className=\"cm-instagram__buttons\">\n            <HeartOutlined /> <MessageOutlined /> <SendOutlined />\n          </div>\n          <div className=\"cm-instagram__post\">\n            <strong>{user.name.toLowerCase()}</strong> {capitalize(seed.tree.text)}...\n          </div>\n        </div>\n\n        <Space className=\"space-container\" wrap>\n          {seed.cards.map((card) => (\n            <Button\n              key={card.id}\n              onClick={() => updateData({ [seed.tree.id]: card.id }, true)}\n              type=\"primary\"\n            >\n              {card.text}\n            </Button>\n          ))}\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","import { useEffectOnce } from 'react-use';\n// AntDesign Resources\nimport { Button, Segmented, Space } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\nimport type { SeedEntryClubberOutfit } from '../../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { ClubberAvatar } from '../../../../components/avatars/ClubberAvatar';\n\ntype SeedClubberProps = {\n  seed: SeedEntryClubberOutfit;\n  updateData: GenericComponent;\n  user: GamePlayer;\n  onSubmitData: GenericFunction;\n  data: PlainObject;\n};\n\nexport function SeedClubber({ seed, updateData, user, data, onSubmitData }: SeedClubberProps) {\n  const { isLoading } = useLoading();\n\n  useEffectOnce(() => {\n    updateData({ clubberId: seed.outfits[0] });\n  });\n\n  const clubbers = (seed.outfits ?? []).map((cId: string, index: number) => ({\n    label: (\n      <div className=\"clubber-selection\">\n        <ClubberAvatar avatarId={user.avatarId} id={cId} />\n        <div>{LETTERS[index]}</div>\n      </div>\n    ),\n    value: cId,\n  }));\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Escolha o que você vai usar pra balada\"\n          en=\"Choose what you want to wear for this party\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Segmented\n          options={clubbers}\n          value={data.clubberId}\n          onChange={(clubberId) => updateData({ clubberId })}\n        />\n\n        <Button onClick={() => onSubmitData({ data })} disabled={isLoading || user.ready}>\n          <Translate pt=\"Confirmar roupa\" en=\"Confirm outfit\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Types\nimport type { SeedEntryOndaTelepatica } from '../../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\n\ntype SeedOndaTelepaticaProps = {\n  seed: SeedEntryOndaTelepatica;\n  updateData: GenericComponent;\n};\n\nexport function SeedOndaTelepatica({ seed, updateData }: SeedOndaTelepaticaProps) {\n  const [value, setValue] = useState('');\n  const { translate } = useLanguage();\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você ainda estuda e precisa terminar sua tarefa de casa...\"\n          en=\"You're still in school and needs to finish your homework...\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                A tarefa é escrever algo simples relacionado ao tema abaixo, pode ser uma palavra, duas, uma\n                expressão.\n                <br />\n                Vamos tira 10!\n              </>\n            }\n            en={\n              <>\n                The task is easy: Write something simple that matches the theme below. It could be a word,\n                two, or a phrase.\n                <br />\n                Let's get that A+!\n              </>\n            }\n          />\n        </Instruction>\n\n        <Card header={translate('Tarefa', 'Homework')} color=\"purple\">\n          {/* TODO: Verify */}\n          {String(seed.card)}\n        </Card>\n\n        <Input\n          onChange={(e) => setValue(e.target.value)}\n          size=\"large\"\n          placeholder={translate('Escreva aqui', 'Write here')}\n          onPressEnter={() => updateData({ wave: value }, true)}\n        />\n\n        <Space>\n          <Button\n            disabled={value.length < 2}\n            onClick={() => updateData({ wave: value }, true)}\n            type=\"primary\"\n          >\n            <Translate pt=\"Enviar dever de casa\" en=\"Submit homework\" />\n          </Button>\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","// Types\nimport type { SeedEntryPolemicaDaVez } from '../../utils/types';\n// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Tweet } from 'components/game/SocialProfile';\n\ntype SeedPolemicaDaVezProps = {\n  seed: SeedEntryPolemicaDaVez;\n  updateData: GenericComponent;\n};\n\nexport function SeedPolemicaDaVez({ seed, updateData }: SeedPolemicaDaVezProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt={\n            <>\n              Vamos procrastinar:\n              <br />\n              Você abre o Twitter e vê esse tópico. Curte ou não curte?\n            </>\n          }\n          en={\n            <>\n              Let's procrastinate:\n              <br />\n              You open twitter and see this tweet. Like or Dislike?\n            </>\n          }\n        />\n      </Title>\n\n      <Tweet\n        avatarId=\"A\"\n        name=\"Bob\"\n        handle=\"@imnotarobot\"\n        verified\n        onLike={() => updateData({ likeTweet: true }, true)}\n        onDislike={() => updateData({ likeTweet: false }, true)}\n      >\n        {seed.card.text}\n      </Tweet>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useAudio } from 'react-use';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { SeedEntryRetratoFalado } from '../../utils/types';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'icons/PanicIcon';\nimport { MonsterCard } from 'components/cards/MonsterCard';\nimport { ImageCardPreloadHand } from 'components/image-cards';\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer.mp3');\n\ntype SeedRetratoFaladoProps = {\n  seed: SeedEntryRetratoFalado;\n  updateData: GenericComponent;\n};\n\nexport function SeedRetratoFalado({ seed, updateData }: SeedRetratoFaladoProps) {\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 33,\n    autoStart: false,\n    onExpire: () => {\n      updateData(\n        {\n          [seed.card.id]: JSON.stringify(lines),\n        },\n        true\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 2) {\n      setTimesUp(true);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"De repente, você se lembra de um evento muito traumático na sua vida, uma monstro te atacou uma vez...\"\n          en=\"Suddenly you have a glimpse of memory from the day a monster attacked you...\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Você tem <strong>30 segundos</strong> para desenhar a carta abaixo.\n                <br />\n                Desenhá-lo é a única coisa que te acalma. Quando estiver pronto, aperte o botão!\n              </>\n            }\n            en={\n              <>\n                You have <strong>30 seconds</strong> to draw the card below.\n                <br />\n                Drawing it is the only thing that calms you down. When you're ready, press the button!\n              </>\n            }\n          />\n        </Instruction>\n        <Button onClick={start} type=\"primary\" disabled={isRunning}>\n          <Translate pt=\"Começar\" en=\"Start\" />\n        </Button>\n\n        {isRunning && audio}\n        <div className=\"monster-container\">\n          {isRunning && <span className=\"a-draw__timer\">{seconds > 1 ? seconds - 2 : 0}</span>}\n\n          <MonsterCard\n            currentMonster={isRunning ? seed.card : { id: 'md-bs-000', orientation: seed.card.orientation }}\n            showControls\n            cardWidth={250}\n          />\n\n          {isTimesUp ? (\n            <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n          ) : isRunning ? (\n            <DrawingCanvas lines={lines} setLines={setLines} />\n          ) : (\n            <DrawingCanvas lines={[]} setLines={NOOP} />\n          )}\n        </div>\n      </Space>\n\n      <ImageCardPreloadHand hand={[seed.card.id]} />\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype SVGPhoneProps = {\n  children: ReactNode;\n};\n\nexport function SVGPhone({ children }: SVGPhoneProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 453.03 800\" className=\"svg-phone\">\n      <path\n        d=\"M394.81 0H58.21A58.22 58.22 0 000 58.28v683.5A58.19 58.19 0 0058.21 800h336.6a58.23 58.23 0 0058.21-58.22V58.28A58.26 58.26 0 00394.81 0zM143.45 35.39h166.17c4.2 0 7.61 6.27 7.61 14s-3.41 14.05-7.61 14.05H143.45c-4.22 0-7.57-6.29-7.57-14.05s3.35-14 7.57-14zm83.06 707.09a37.17 37.17 0 1137.11-37.2 37.22 37.22 0 01-37.11 37.2zm182.9-127.36H43.64V98.33h365.77v516.79z\"\n        fill=\"#464749\"\n      ></path>\n      <foreignObject x=\"43\" y=\"98\" width=\"365\" height=\"516\">\n        {children}\n      </foreignObject>\n    </svg>\n  );\n}\n","import moment from 'moment';\nimport { useState } from 'react';\nimport clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Types\nimport type { SeedEntryUeSoIsso } from '../../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { SVGPhone } from '../SVGPhone';\n\ntype SeedUeSoIssoProps = {\n  seed: SeedEntryUeSoIsso;\n  updateData: GenericComponent;\n};\n\nconst now = moment().format('MMMM YYYY, h:mm');\n\nexport function SeedUeSoIsso({ seed, updateData }: SeedUeSoIssoProps) {\n  const [value, setValue] = useState('');\n  const { translate } = useLanguage();\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você recebeu o torpedo de um amigo e precisa responder antes de se arrumar\"\n          en=\"You received the following text message from a friend and you must answer it before leaving\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SVGPhone>\n          <div className=\"ff-phone\">\n            <div className=\"ff-phone__contact\">\n              <Avatar id=\"B\" size=\"large\" />\n              <div className=\"ff-phone__name\">Bob {'>'}</div>\n            </div>\n            <div className=\"ff-phone__thread\">\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Ow\" en=\"Dude\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"fala aí\" en=\"Answer this\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Diga uma palavra relacionada à...\" en=\"Say a single word related to...\" />\n              </div>\n              <div className=\"ff-phone__timestamp\">\n                <Translate pt=\"Recebido\" en=\"Received\" /> {now}\n              </div>\n              <div\n                className={clsx('ff-phone__message ff-phone__message--important', getAnimationClass('tada'))}\n              >\n                {seed.card.text}\n              </div>\n            </div>\n          </div>\n        </SVGPhone>\n\n        <Input\n          onChange={(e) => setValue(e.target.value)}\n          size=\"large\"\n          placeholder={translate('Escreva aqui', 'Write here')}\n          onPressEnter={() => updateData({ singleClue: value }, true)}\n        />\n\n        <Button block onClick={() => updateData({ singleClue: value }, true)} type=\"primary\">\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\nimport { FlagFilled, HeartFilled, MessageFilled } from '@ant-design/icons';\n// Types\nimport type { SeedEntryMenteColetiva } from '../../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { SixPackIcon } from 'icons/SixPackIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { SVGPhone } from '../SVGPhone';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\n\ntype SeedMenteColetivaProps = {\n  seed: SeedEntryMenteColetiva;\n  updateData: GenericComponent;\n};\n\nexport function SeedMenteColetiva({ seed, updateData }: SeedMenteColetivaProps) {\n  const { translate } = useLanguage();\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Depois de ver alguns vídeos, você decidiu fazer esse teste no TikTok\"\n          en=\"After watching some videos, you decided to do this test on TikTok\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SVGPhone>\n          <div className=\"tt-phone\">\n            <div className=\"tt-phone__header\">\n              <span>STEM</span>\n              <span>Following</span>\n              <span>For You</span>\n            </div>\n\n            <div className=\"tt-phone__icons\">\n              <Avatar id=\"D\" size=\"large\" />\n              <MessageFilled />\n              <HeartFilled />\n              <FlagFilled />\n            </div>\n\n            <div className=\"tt-phone__background\">\n              <SixPackIcon />\n            </div>\n\n            <div className=\"tt-phone__question\">\n              <GroupQuestionCard question={seed.card} overrideNumber={2} />\n            </div>\n          </div>\n        </SVGPhone>\n        <Space className=\"space-container\">\n          <Input\n            onChange={(e) => setValue1(e.target.value)}\n            size=\"large\"\n            placeholder={translate('Resposta 1', 'Answer 1')}\n          />\n          <Input\n            onChange={(e) => setValue2(e.target.value)}\n            size=\"large\"\n            placeholder={translate('Resposta 2', 'Answer 2')}\n          />\n        </Space>\n        <Button\n          block\n          onClick={() => updateData({ answers: [value1, value2] }, true)}\n          disabled={!value1 || !value2}\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import moment from 'moment';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { SeedEntryContadoresHistorias } from '../../utils/types';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { SVGPhone } from '../SVGPhone';\nimport { ImageCard } from 'components/image-cards';\n\nconst now = moment().format('MMMM YYYY, h:mm');\n\ntype SeedContadoresHistoriasProps = {\n  seed: SeedEntryContadoresHistorias;\n  updateData: GenericComponent;\n};\n\nexport function SeedContadoresHistorias({ seed, updateData }: SeedContadoresHistoriasProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Sua mãe te mandou uma mensagem e você precisa responder antes de se arrumar\"\n          en=\"Your mom sent you a message and you must answer it before leaving\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SVGPhone>\n          <div className=\"ff-phone\">\n            <div className=\"ff-phone__contact\">\n              <Avatar id=\"B\" />\n              <div className=\"ff-phone__name\">\n                <Translate pt=\"Mamãe\" en=\"Mommy\" /> {'>'}\n              </div>\n            </div>\n            <div className=\"ff-phone__thread\">\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Filho(a)\" en=\"Dear\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"O que é isso?\" en=\"What is this?\" />\n              </div>\n              <div className=\"ff-phone__timestamp\">\n                <Translate pt=\"Recebido\" en=\"Received\" /> {now}\n              </div>\n              <div className=\"ff-phone__message\">\n                <ImageCard id={seed.card} cardWidth={100} />\n              </div>\n            </div>\n          </div>\n        </SVGPhone>\n\n        <Instruction>\n          <Translate\n            pt=\"Você pode clicar na imagem para ampliá-la.\"\n            en=\"You can click on the image to enlarge it.\"\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" wrap>\n          {seed.prompts.map((prompt) => (\n            <Button\n              key={prompt.id}\n              onClick={() => updateData({ prompt: prompt.text }, true)}\n              type=\"primary\"\n              size=\"large\"\n            >\n              {prompt.text}\n            </Button>\n          ))}\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Types\nimport type { SeedEntryParty } from '../../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction, RuleInstruction, Title } from 'components/text';\n\ntype SeedPartyProps = {\n  seed: SeedEntryParty;\n  updateData: GenericComponent;\n};\n\nexport function SeedParty({ seed, updateData }: SeedPartyProps) {\n  const { translate } = useLanguage();\n  const [answers, setAnswers] = useState<StringDictionary>({});\n\n  const updateAnswers = (key: string, value: string) => {\n    setAnswers((v) => ({ ...v, [key]: value }));\n  };\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate pt=\"Responda as perguntas a seguir\" en=\"Answer the following prompts\" />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <RuleInstruction type=\"rule\">\n          <Translate\n            pt={\n              <>\n                Seja criativo nas respostas, porém evite palavras que possam entregar sua identidade.\n                <br />\n                Nem todas as repostar serão utilizadas no jogo.\n              </>\n            }\n            en={\n              <>\n                Be creative, but avoid words that may give away your identity.\n                <br />\n                Not all answers will be used in the game.\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <Instruction contained>\n          <Space direction=\"vertical\">\n            {seed.cards.map((card) => {\n              return (\n                <div className=\"\" key={card.id}>\n                  <label htmlFor={`input-${card.id}`}>\n                    <DualTranslate>{card.text}</DualTranslate>\n                  </label>\n                  <Input\n                    id={`input-${card.id}`}\n                    size=\"large\"\n                    value={answers?.[card?.id] ?? ''}\n                    placeholder={translate('Escreva aqui', 'Write here')}\n                    onChange={(event) => updateAnswers(card.id, event.target.value)}\n                  />\n                </div>\n              );\n            })}\n          </Space>\n        </Instruction>\n\n        <Button\n          block\n          onClick={() => updateData({ partyAnswers: answers }, true)}\n          type=\"primary\"\n          disabled={Object.keys(answers).length < seed.cards.length}\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Steps } from 'antd';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\nimport type { SeedEntry } from './utils/types';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useStep } from 'hooks/useStep';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { buildSeedingSteps } from './utils/helpers';\nimport { mockSeeding } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { Title } from 'components/text';\nimport { SeedArteRuim } from './components/Seeds/SeedArteRuim';\nimport { SeedLabirintoSecreto } from './components/Seeds/SeedLabirintoSecreto';\nimport { SeedClubber } from './components/Seeds/SeedClubber';\nimport { SeedOndaTelepatica } from './components/Seeds/SeedOndaTelepatica';\nimport { SeedPolemicaDaVez } from './components/Seeds/SeedPolemicaDaVez';\nimport { SeedRetratoFalado } from './components/Seeds/SeedRetratoFalado';\nimport { SeedUeSoIsso } from './components/Seeds/SeedUeSoIsso';\nimport { SeedMenteColetiva } from './components/Seeds/SeedMenteColetiva';\nimport { SeedContadoresHistorias } from './components/Seeds/SeedContadoresHistorias';\nimport { SeedParty } from './components/Seeds/SeedParty';\n\ntype StepSeedingProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitData: GenericFunction;\n} & Pick<StepProps, 'announcement'>;\n\nexport const StepSeeding = ({ announcement, user, onSubmitData }: StepSeedingProps) => {\n  const { step: currentStep, goToNextStep } = useStep(0);\n\n  const [data, setData] = useState<PlainObject>({});\n  const { translate } = useLanguage();\n\n  const updateData = (objValue: PlainObject, next = false) => {\n    setData((v) => ({ ...v, ...objValue }));\n    if (next) {\n      goToNextStep();\n    }\n  };\n\n  const seeds = user.seeds ?? [];\n  const items = buildSeedingSteps(seeds, translate);\n  const currentSeed: SeedEntry = seeds[currentStep];\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        {seeds.length > 1 ? (\n          <Translate pt=\"Termine todas suas obrigações\" en=\"Finish all your chores\" />\n        ) : (\n          <Translate pt=\"Hora de se arrumar\" en=\"Time to get ready\" />\n        )}\n      </Title>\n      <div className=\"full-width container center\">\n        <Steps current={currentStep} items={items} />\n        {/* DEV only */}\n        {Boolean(currentSeed?.type) && <DevMock seeds={seeds} onSubmitData={onSubmitData} />}\n\n        {currentSeed?.type === 'arte-ruim' && <SeedArteRuim seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'contadores-historias' && (\n          <SeedContadoresHistorias seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'labirinto-secreto' && (\n          <SeedLabirintoSecreto seed={currentSeed} updateData={updateData} user={user} />\n        )}\n\n        {currentSeed?.type === 'mente-coletiva' && (\n          <SeedMenteColetiva seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'onda-telepatica' && (\n          <SeedOndaTelepatica seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'polemica-da-vez' && (\n          <SeedPolemicaDaVez seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'retrato-falado' && (\n          <SeedRetratoFalado seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'ue-so-isso' && <SeedUeSoIsso seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'party' && <SeedParty seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'clubber' && (\n          <SeedClubber\n            seed={currentSeed}\n            updateData={updateData}\n            user={user}\n            onSubmitData={onSubmitData}\n            data={data}\n          />\n        )}\n      </div>\n    </Step>\n  );\n};\n\ntype DevMockProps = {\n  onSubmitData: GenericFunction;\n  seeds: SeedEntry[];\n};\n\nfunction DevMock({ onSubmitData, seeds }: DevMockProps) {\n  // DEV\n  useMock(() => {\n    onSubmitData({ data: mockSeeding(seeds) });\n  });\n\n  return <></>;\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitSeedAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { SmsIcon } from 'icons/SmsIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSeeding } from './StepSeeding';\n\nexport function PhaseSeeding({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitData = useOnSubmitSeedAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<SmsIcon />}\n      title={<Translate pt=\"Seu amigo te chamou pra balada!\" en=\"Your friend invited to the club!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        {user?.seeds?.length > 1 ? (\n          <Translate\n            pt=\"Mas antes de ir, você tem que fazer suas obrigações...\"\n            en=\"But before that, you must finish some chores...\"\n          />\n        ) : (\n          <Translate pt=\"Mas antes de ir, escolha seu modelito\" en=\"Time to get ready!!!\" />\n        )}\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.SEEDING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSeeding players={players} announcement={announcement} onSubmitData={onSubmitData} user={user} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Components\nimport { PlayersHighlight } from 'components/metrics/PlayersHighlight';\n\ntype WinningCountProps = {\n  winners: number;\n  total: number;\n};\n\nexport function WinningCount({ winners, total }: WinningCountProps) {\n  return (\n    <Space className=\"space-container\">\n      <PlayersHighlight>{winners}</PlayersHighlight> <span>vs</span>{' '}\n      <PlayersHighlight className=\"grayscale\">{total - winners}</PlayersHighlight>\n    </Space>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultArteRuim({ track, winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  if (track.variant === 'drawings') {\n    const winningArtworks: PlainObject[] = track.data.options.filter((option: PlainObject) => {\n      return winningValues.includes(option.playerId);\n    });\n\n    return (\n      <>\n        <Instruction>\n          <Translate pt=\"A arte mais votada foi\" en=\"The most popular art was\" />:\n        </Instruction>\n        <div className=\"track-result-values__cards\">\n          {winningArtworks.map((value) => (\n            <div key={value.playerId} className=\"track-result-values__text-value\">\n              <CanvasSVG drawing={value.drawing} width={width} className=\"a-drawing\" />\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  const winningCards: PlainObject[] = track.data.cards.filter((option: PlainObject) => {\n    return winningValues.includes(option.id);\n  });\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningCards.map((value) => (\n          <div key={value.id} className=\"track-result-values__text-value\">\n            {value.text}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultCruzaPalavras({ track, winningValues }: ResultComponentProps) {\n  const cheatSheet: PlainObject = {\n    0: [track.data.cards[0].text, track.data.cards[2].text],\n    1: [track.data.cards[0].text, track.data.cards[3].text],\n    2: [track.data.cards[1].text, track.data.cards[2].text],\n    3: [track.data.cards[1].text, track.data.cards[3].text],\n  };\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {cheatSheet[value][0]} {'+'} {cheatSheet[value][1]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { Candidate } from '../Candidate';\n\nexport function ResultNamoroOuAmizade({\n  track,\n  winningValues,\n  winningTeam,\n  playersList,\n}: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O melhor partido foi\" en=\"The best match was\" />:{' '}\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          const index = track.data.heads.findIndex((head: PlainObject) => head.id === value);\n          return (\n            <Candidate\n              key={value}\n              head={track.data.heads[index]}\n              body={track.data.bodies[index]}\n              interest={track.data.interests[index]}\n              need={track.data.needs[index]}\n              funFact={track.data.funFacts[index]}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps, StreetCard } from '../../utils/types';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\n\nexport function ResultNaRuaDoMedo({ track, winningValues, winningTeam, playersList }: ResultComponentProps) {\n  if (track.variant === 'house') {\n    const winningCards: StreetCard[] = track.data.options.filter((option: PlainObject) => {\n      return winningValues.includes(option.id);\n    });\n\n    return (\n      <>\n        <Instruction>\n          <Translate pt=\"A escolha mais popular foi\" en=\"The most popular choice was\" />:\n        </Instruction>\n        <div className=\"track-result-values__cards\">\n          {winningCards.map((card) => (\n            <div key={card.id} className=\"track-result-values__text-value\">\n              <HouseCard card={card} candyLeftover={0} preview={false} />\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"A rua mais votada foi\" en=\"The most voted street was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {LETTERS[Number(value)]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultRetratoFalado({ track, winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  const winningArtworks: PlainObject[] = track.data.options.filter((option: PlainObject) => {\n    return winningValues.includes(option.playerId);\n  });\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O monstro escolhido foi\" en=\"The best monster was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningArtworks.map((value) => (\n          <div className=\"track-result-values__text-value\" key={value.drawing}>\n            <CanvasSVG drawing={value.drawing} width={width} className=\"a-drawing\" />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Utils\nimport { getMovieTitles } from '../../utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultVamosAoCinema({\n  track,\n  winningValues,\n  winningTeam,\n  playersList,\n}: ResultComponentProps) {\n  const movies: StringDictionary = getMovieTitles(track.data.movies);\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"A filme mais votado foi\" en=\"The most popular movie was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          return (\n            <div key={`winning-${value}`} className=\"track-result-values__text-value\">\n              {movies[value]}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultMegamix({ track, winningValues, winningTeam, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {track.data.card.options[Number(value)]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\n\nexport function ResultImage({ winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As cartas mais votadas foram\" en=\"Most voted cards are\" />\n        ) : (\n          <Translate pt=\"A carta mais votada foi\" en=\"Most voted card is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ImageBlurButtonContainer cardId={cardId} key={`table-focus-${cardId}`} className=\"margin\">\n            <ImageCard id={cardId} cardWidth={width} className=\"d-table__image-card\" />\n          </ImageBlurButtonContainer>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\nexport function ResultText({ winningTeam, winningValues, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As votadas foram\" en=\"Most voted ones are\" />\n        ) : (\n          <Translate pt=\"A mais votada foi\" en=\"Most voted one is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {value}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\nimport { CharacterCard } from 'components/cards/CharacterCard';\n\nexport function ResultCharacter({ winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As personagens mais votadas foram\" en=\"Most voted characters are\" />\n        ) : (\n          <Translate pt=\"A personagem mais votada foi\" en=\"Most voted character is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ImageBlurButtonContainer cardId={cardId} key={cardId}>\n            <CharacterCard\n              size={width}\n              character={{\n                id: cardId,\n                name: { pt: '', en: '' },\n              }}\n              overlayColor=\"yellow\"\n            />\n          </ImageBlurButtonContainer>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\nexport function ResultOndaTelepatica({ winningTeam, winningValues, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As votadas foram\" en=\"Most voted ones are\" />\n        ) : (\n          <Translate pt=\"A mais votada foi\" en=\"Most voted one is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {value === 'center' && <Translate pt=\"Centro\" en=\"Center\" />}\n            {value === 'left' && <Translate pt=\"Esquerda\" en=\"Left\" />}\n            {value === 'right' && <Translate pt=\"Direita\" en=\"Right\" />}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ItemCard } from 'components/cards/ItemCard';\n\nexport function ResultComunicacaoAlienigena({ winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"Os objetos mais votados foram\" en=\"Most voted objects are\" />\n        ) : (\n          <Translate pt=\"O objeto mais votado foi\" en=\"Most voted object is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ItemCard\n            id={String(cardId)}\n            key={`table-focus-${cardId}`}\n            width={80}\n            className=\"d-table__image-card\"\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { IconAvatar } from 'components/avatars';\n\nexport function ResultTaNaCara({ winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As respostas votadas foram\" en=\"Most voted answers are\" />\n        ) : (\n          <Translate pt=\"A resposta mais votada foi\" en=\"Most voted answer is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={`answer-${value}`} className=\"track-result-values__text-value\">\n            <IconAvatar\n              size=\"large\"\n              icon={value === 'yes' ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { Fragment } from 'react';\n// AntDesign Resources\nimport { RightSquareOutlined } from '@ant-design/icons';\n// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { MapIcon } from 'icons/MapIcon';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultLabirintoSecreto({ track, winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O caminho mais votado foi\" en=\"The most popular path was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          const index = Number(value);\n          const entry = track.data?.options?.[index] ?? {};\n          return (\n            <div key={index} className=\"cm-clues__clue cm-clues__clue--small\">\n              {LETTERS[Number(value)]}\n              <IconAvatar icon={<MapIcon />} size={48} />\n              {Object.values<PlainObject>(entry).map((option, index, arr) => {\n                return (\n                  <Fragment key={`${option.playerId}-${index}`}>\n                    <span className=\"cm-clues__clue-text\">{option.text}</span>\n                    {arr.length - 1 > index && <RightSquareOutlined />}\n                  </Fragment>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { SplatterSVG } from '../Tracks/TrackPalhetaDeFores';\n\nexport function ResultPalhetaDeCores({ winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As amostras mais selecionadas foram\" en=\"The most selected swatches were\" />\n        ) : (\n          <Translate pt=\"A amostra mais selecionada foi\" en=\"The most selected swatch was\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            <SplatterSVG color={value} style={{ color: value }} width={48} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\n\nexport function ResultQuemNaoMata({ winningValues, players }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"Os jogadores mais foram\" en=\"Most voted players are\" />\n        ) : (\n          <Translate pt=\"O jogador mais votado foi\" en=\"Most voted player is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            <AvatarName player={players[value]} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { ResultComponentProps } from '../../utils/types';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarCard } from 'components/avatars';\nimport { Card } from 'components/cards';\n\nexport function ResultWhoSaidThis({ track, winningValues, players }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"Os votadas foram\" en=\"Most voted ones are\" />\n        ) : (\n          <Translate pt=\"O mais votada foi\" en=\"Most voted one is\" />\n        )}\n        :\n      </Instruction>\n\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value}>\n            <AvatarCard player={players[value]} withName size=\"small\" />\n          </div>\n        ))}\n      </div>\n      <div className=\"track-result-values__cards\">\n        <Card size=\"small\" hideHeader>\n          \"{track.data.card.text}\"\n        </Card>\n      </div>\n    </>\n  );\n}\n","// Type\nimport type { ResultComponentProps } from '../utils/types';\n// Components\nimport { WinningCount } from './WinningCount';\nimport { FallbackComponent } from './FallbackComponent';\nimport { ResultArteRuim } from './Results/ResultArteRuim';\nimport { ResultCruzaPalavras } from './Results/ResultCruzaPalavras';\nimport { ResultNamoroOuAmizade } from './Results/ResultNamoroOuAmizade';\nimport { ResultNaRuaDoMedo } from './Results/ResultNaRuaDoMedo';\nimport { ResultRetratoFalado } from './Results/ResultRetratoFalado';\nimport { ResultVamosAoCinema } from './Results/ResultVamosNoCinema';\nimport { ResultMegamix } from './Results/ResultMegamix';\nimport { ResultImage } from './Results/ResultImage';\nimport { ResultText } from './Results/ResultText';\nimport { ResultCharacter } from './Results/ResultCharacter';\nimport { ResultOndaTelepatica } from './Results/ResultOndaTelepatica';\nimport { ResultComunicacaoAlienigena } from './Results/ResultComunicacaoAlienigena';\nimport { ResultTaNaCara } from './Results/ResultTaNaCara';\nimport { ResultLabirintoSecreto } from './Results/ResultLabirintoSecreto';\nimport { ResultPalhetaDeCores } from './Results/ResultPalhetaDeCores';\nimport { ResultQuemNaoMata } from './Results/ResultQuemNaoMata';\nimport { ResultWhoSaidThis } from './Results/ResultWhoSaidThis';\n\nexport const ResultValueDelegator = (props: ResultComponentProps) => {\n  const ResultComponent =\n    {\n      'arte-ruim': ResultArteRuim,\n      'comunicacao-alienigena': ResultComunicacaoAlienigena,\n      'contadores-historias': ResultImage,\n      'crimes-hediondos': ResultImage,\n      'cruza-palavras': ResultCruzaPalavras,\n      'detetives-imaginativos': ResultImage,\n      'dilema-dos-esquiadores': ResultText,\n      'espiao-entre-nos': ResultText,\n      'fileira-de-fatos': ResultText,\n      'galeria-de-sonhos': ResultImage,\n      'labirinto-secreto': ResultLabirintoSecreto,\n      'megamix-best-of-three': ResultMegamix,\n      'megamix-this-that': ResultMegamix,\n      'megamix-who-said-this': ResultWhoSaidThis,\n      'mente-coletiva': ResultText,\n      'namoro-ou-amizade': ResultNamoroOuAmizade,\n      'na-rua-do-medo': ResultNaRuaDoMedo,\n      'onda-telepatica': ResultOndaTelepatica,\n      'palheta-de-cores': ResultPalhetaDeCores,\n      'polemica-da-vez': ResultText,\n      'porta-dos-desesperados': ResultImage,\n      'quem-nao-mata': ResultQuemNaoMata,\n      'quem-sou-eu': ResultCharacter,\n      'retrato-falado': ResultRetratoFalado,\n      'super-campeonato': ResultCharacter,\n      'testemunha-ocular': ResultImage,\n      'ta-na-cara': ResultTaNaCara,\n      'ue-so-isso': ResultText,\n      'vamos-ao-cinema': ResultVamosAoCinema,\n    }?.[props.track.game] ?? FallbackComponent;\n\n  return (\n    <>\n      <WinningCount winners={props.winningTeam.length} total={props.playersList.length} />\n      <ResultComponent {...props} />\n    </>\n  );\n};\n","import { has } from 'lodash';\nimport { ReactNode } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\n\ntype SpacePlayerCheckWrapperProps = {\n  playersList: GamePlayer[];\n  paths: string[];\n  children: ReactNode;\n};\nexport function SpacePlayerCheckWrapper({ playersList, paths, children }: SpacePlayerCheckWrapperProps) {\n  const okToProceed = playersList.every((player) => {\n    return paths.every((path) => {\n      return has(player, path);\n    });\n  });\n\n  if (okToProceed) {\n    return (\n      <Space className=\"space-container\" align=\"center\" wrap>\n        {children}\n      </Space>\n    );\n  }\n\n  return <></>;\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CanvasSVG } from 'components/canvas';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteArteRuim({ track, playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n  });\n\n  if (track.variant === 'drawings') {\n    return (\n      <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n        {playersList.map((player) => {\n          const drawing = track.data.options.find(\n            (entry: PlainObject) => entry.playerId === player.data.value\n          );\n          return (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div>{player.name}</div>\n              {Boolean(drawing) && (\n                <CanvasSVG drawing={drawing.drawing} width={width} className=\"a-drawing\" />\n              )}\n            </div>\n          );\n        })}\n      </SpacePlayerCheckWrapper>\n    );\n  }\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const card = track.data.cards.find((entry: PlainObject) => entry.id === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n            <div className=\"player-vote__value\">{Boolean(card) && card.text}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteCruzaPalavras({ track, playersList }: VoteComponentProps) {\n  const cheatSheet: PlainObject = {\n    0: [track.data.cards[0].text, track.data.cards[2].text],\n    1: [track.data.cards[0].text, track.data.cards[3].text],\n    2: [track.data.cards[1].text, track.data.cards[2].text],\n    3: [track.data.cards[1].text, track.data.cards[3].text],\n  };\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div>{player.name}</div>\n          <div key={player.data.value} className=\"track-result-values__text-value\">\n            {cheatSheet[player.data.value][0]} {'+'} {cheatSheet[player.data.value][1]}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { Candidate } from '../Candidate';\n\nexport function VoteNamoroOuAmizade({ track, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const index = track.data.heads.findIndex((head: PlainObject) => head.id === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            {index > -1 && (\n              <Candidate\n                key={`date-${player.id}`}\n                head={track.data.heads[index]}\n                body={track.data.bodies[index]}\n                interest={track.data.interests[index]}\n                need={track.data.needs[index]}\n                funFact={track.data.funFacts[index]}\n              />\n            )}\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteNaRuaDoMedo({ track, playersList }: VoteComponentProps) {\n  if (track.variant === 'house') {\n    return (\n      <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n        {playersList.map((player) => {\n          const house = track.data.options.find((entry: PlainObject) => entry.id === player.data.value);\n          return (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div>{player.name}</div>\n              <HouseCard card={house} candyLeftover={0} preview={false} />\n            </div>\n          );\n        })}\n      </SpacePlayerCheckWrapper>\n    );\n  }\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n            <div className=\"player-vote__value\">{LETTERS[player.data.value]}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CanvasSVG } from 'components/canvas';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteRetratoFalado({ track, playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const drawing = track.data.options.find((entry: PlainObject) => entry.playerId === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            {Boolean(drawing) && <CanvasSVG drawing={drawing.drawing} width={width} className=\"a-drawing\" />}\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Utils\nimport { getMovieTitles } from '../../utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteVamosAoCinema({ track, playersList }: VoteComponentProps) {\n  const movies: StringDictionary = getMovieTitles(track.data.movies);\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            <div className=\"player-vote__value\">{movies[player.data.value]}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteMegamix({ track, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <Tooltip title={track.data.card.options[Number(player.data.value)]}>\n            <div className=\"player-vote__value\">{track.data.card.options[Number(player.data.value)]}</div>\n          </Tooltip>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\n\nexport function VoteImagesTrack({ playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 4, {\n    gap: 8,\n    minWidth: 50,\n    maxWidth: 120,\n    margin: 8,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ImageBlurButtonContainer cardId={player.data.value}>\n            <ImageCard id={player.data.value} cardWidth={width} className=\"d-table__image-card\" />\n          </ImageBlurButtonContainer>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteValue({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <Tooltip title={player.data.value}>\n            <div className=\"player-vote__value\">{player.data.value}</div>\n          </Tooltip>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteOndaTelepatica({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <div className=\"player-vote__value\">\n            {player.data?.value === 'center' && <Translate pt=\"Centro\" en=\"Center\" />}\n            {player.data?.value === 'left' && <Translate pt=\"Esquerda\" en=\"Left\" />}\n            {player.data?.value === 'right' && <Translate pt=\"Direita\" en=\"Right\" />}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteCharacterTrack({ playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 4, {\n    gap: 8,\n    minWidth: 50,\n    maxWidth: 120,\n    margin: 8,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ImageBlurButtonContainer cardId={player.data.value}>\n            <CharacterCard\n              size={width}\n              character={{\n                id: player.data.value,\n                name: { pt: '', en: '' },\n              }}\n            />\n          </ImageBlurButtonContainer>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SplatterSVG } from '../Tracks/TrackPalhetaDeFores';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VotePalhetaDeCores({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <SplatterSVG color={player.data.value} style={{ color: player.data.value }} width={48} />\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteQuemNaoMata({ players, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <div className=\"player-vote__value\">{players[player.data?.value]?.name}</div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { ItemCard } from 'components/cards/ItemCard';\n\nexport function VoteComunicacaoAlienigena({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ItemCard id={String(player.data.value)} width={80} className=\"d-table__image-card\" />\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n\nexport function VoteTaNaCara({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n\n          <div className=\"player-vote__value\">\n            {player.data.value === 'yes' ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { LETTERS } from 'utils/constants';\n\nexport function VoteLabirintoSecreto({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n\n          <div className=\"player-vote__value\">\n            <AntAvatar>{LETTERS[Number(player.data.value)]}</AntAvatar>\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { VoteComponentProps } from '../../utils/types';\n// Components\nimport { Avatar, AvatarCard } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteWhoSaidThis({ track, playersList, players }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n\n          <div className=\"player-vote__value\">\n            <AvatarCard player={players[player.data.value]} withName size=\"small\" />\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","import { useMemo } from 'react';\nimport { orderBy } from 'lodash';\n// Type\nimport type { VoteComponentProps } from '../utils/types';\n// Components\nimport { FallbackComponent } from './FallbackComponent';\nimport { VoteArteRuim } from './Votes/VoteArteRuim';\nimport { VoteCruzaPalavras } from './Votes/VoteCruzaPalavras';\nimport { VoteNamoroOuAmizade } from './Votes/VoteNamoroOuAmizade';\nimport { VoteNaRuaDoMedo } from './Votes/VoteNaRuaDoMedo';\nimport { VoteRetratoFalado } from './Votes/VoteRetratoFalado';\nimport { VoteVamosAoCinema } from './Votes/VoteVamosAoCinema';\nimport { VoteMegamix } from './Votes/VoteMegamix';\nimport { VoteImagesTrack } from './Votes/VoteImagesTrack';\nimport { VoteValue } from './Votes/VoteValue';\nimport { VoteOndaTelepatica } from './Votes/VoteOndaTelepatica';\nimport { VoteCharacterTrack } from './Votes/VoteCharacterTrack';\nimport { VotePalhetaDeCores } from './Votes/VotePalhetaDeCores';\nimport { VoteQuemNaoMata } from './Votes/VoteQuemNaoMata';\nimport { VoteComunicacaoAlienigena } from './Votes/VoteComunicacaoAlienigena';\nimport { VoteTaNaCara } from './Votes/VoteTaNaCara';\nimport { VoteLabirintoSecreto } from './Votes/VoteLabirintoSecreto';\nimport { VoteWhoSaidThis } from './Votes/VoteWhoSaidThis';\n\nexport const VotesDelegator = (props: Omit<VoteComponentProps, 'playersList'>) => {\n  const playersList = useMemo(\n    () => orderBy(Object.values(props.players), ['data.value', 'name'], ['asc', 'asc']),\n    [props.players]\n  );\n\n  const VotesComponent =\n    {\n      'arte-ruim': VoteArteRuim,\n      'comunicacao-alienigena': VoteComunicacaoAlienigena,\n      'contadores-historias': VoteImagesTrack,\n      'crimes-hediondos': VoteImagesTrack,\n      'cruza-palavras': VoteCruzaPalavras,\n      'detetives-imaginativos': VoteImagesTrack,\n      'dilema-dos-esquiadores': VoteValue,\n      'espiao-entre-nos': VoteValue,\n      'fileira-de-fatos': VoteValue,\n      'galeria-de-sonhos': VoteImagesTrack,\n      'labirinto-secreto': VoteLabirintoSecreto,\n      'megamix-best-of-three': VoteMegamix,\n      'megamix-this-that': VoteMegamix,\n      'megamix-who-said-this': VoteWhoSaidThis,\n      'mente-coletiva': VoteValue,\n      'namoro-ou-amizade': VoteNamoroOuAmizade,\n      'na-rua-do-medo': VoteNaRuaDoMedo,\n      'onda-telepatica': VoteOndaTelepatica,\n      'palheta-de-cores': VotePalhetaDeCores,\n      'polemica-da-vez': VoteValue,\n      'porta-dos-desesperados': VoteImagesTrack,\n      'quem-nao-mata': VoteQuemNaoMata,\n      'quem-sou-eu': VoteCharacterTrack,\n      'retrato-falado': VoteRetratoFalado,\n      'super-campeonato': VoteCharacterTrack,\n      'ta-na-cara': VoteTaNaCara,\n      'testemunha-ocular': VoteImagesTrack,\n      'ue-so-isso': VoteValue,\n      'vamos-ao-cinema': VoteVamosAoCinema,\n    }?.[props.track.game] ?? FallbackComponent;\n\n  return <VotesComponent {...props} playersList={playersList} />;\n};\n","import { LegacyRef, useMemo } from 'react';\nimport { useMeasure } from 'react-use';\nimport { memoize } from 'lodash';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\nimport type { GameRound } from 'types/game';\nimport type { Track } from './utils/types';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n// Icons\nimport { DJIcon } from 'icons/DJIcon';\nimport { GarbageIcon } from 'icons/GarbageIcon';\nimport { VIPLineIcon } from 'icons/VIPLineIcon';\n// Components\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\nimport { ClubberAvatar } from '../../components/avatars/ClubberAvatar';\nimport { IconAvatar } from 'components/avatars';\nimport { ResultValueDelegator } from './components/ResultValueDelegator';\nimport { TrackTitle } from './components/TrackTitle';\nimport { VotesDelegator } from './components/VotesDelegator';\n\ntype StepResultProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  onSeeRanking: GenericFunction;\n  round: GameRound;\n  isFirstRunThrough: boolean;\n  track: Track;\n  winningValues: string[];\n  winningTeam: PlayerId[];\n  scoringType: string;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepResult({\n  user,\n  players,\n  onSeeRanking,\n  round,\n  isFirstRunThrough,\n  announcement,\n  track,\n  winningValues,\n  winningTeam,\n  scoringType,\n}: StepResultProps) {\n  useTemporarilyHidePlayersBar();\n  const [resultRef, { width }] = useMeasure();\n\n  const time = useCountdown({ duration: 20 });\n\n  const playersList = useMemo(() => sortPlayers(players), [players]);\n\n  const currentIndex = time.timeLeft > 14 ? round.current - 1 : round.current;\n\n  // Dynamic background\n  useColorizeBackground(user, time.timeLeft > 13 ? round.current : round.current + 1);\n\n  // Counts to aid the animation positioning. It doesn't trigger re-renders because it's handled by css\n  let winningCount = 0;\n  let losingCount = 0;\n\n  const [ref, { width: resultsValueWidth }] = useMeasure();\n\n  return (\n    <Step announcement={announcement}>\n      <Title size=\"small\" white>\n        <Translate pt=\"Resultado\" en=\"Results\" />: <TrackTitle track={track} />\n      </Title>\n\n      <RuleInstruction type=\"event\">\n        <IconAvatar icon={<DJIcon />} size=\"large\" />\n        {scoringType === 'NORMAL' && (\n          <Translate\n            pt={<>Jogadores que votaram com a maioria entram ou continuam na Área VIP.</>}\n            en={<>Players who voted with the majority join or stay in the VIP area.</>}\n          />\n        )}\n        {scoringType === 'TIE' && (\n          <Translate\n            pt={<>Empate entre 2 ou mais respostas. Quem já estava na Área VIP fica e ganha ponto.</>}\n            en={\n              <>\n                It's a tie for 2 or more answers. Whoever was already in the VIP Area stays there and get\n                points.\n              </>\n            }\n          />\n        )}\n        {scoringType === 'DRAW' && (\n          <Translate\n            pt={<>Cada um escolheu uma coisa diferente? Todo mundo fora da Área VIP!</>}\n            en={<>Did everybody just choose something different? Everybody out!</>}\n          />\n        )}\n      </RuleInstruction>\n\n      <div className=\"results\" ref={resultRef as LegacyRef<HTMLDivElement>}>\n        <div className=\"results__vip\" id=\"area-w\">\n          <span className=\"results__icon\">\n            <IconAvatar icon={<VIPLineIcon />} size=\"large\" />\n          </span>\n          <span className=\"results__label\">\n            <Translate pt=\"Área VIP\" en=\"VIP Lounge\" />\n          </span>\n        </div>\n        <div className=\"results__values\" ref={ref as LegacyRef<HTMLDivElement>}>\n          <ResultValueDelegator\n            track={track}\n            winningValues={winningValues}\n            players={players}\n            winningTeam={winningTeam}\n            playersList={playersList}\n            containerWidth={resultsValueWidth}\n          />\n        </div>\n        <div className=\"results__gutter\" id=\"area-l\">\n          <span className=\"results__icon\">\n            <IconAvatar icon={<GarbageIcon />} size=\"large\" />\n          </span>\n          <span className=\"results__label\">\n            <Translate pt=\"Pista (Sarjeta)\" en=\"GA (Scum)\" />\n          </span>\n        </div>\n\n        {playersList.map((player) => {\n          const isWinningArea = player.team[currentIndex] === 'W';\n          winningCount = isWinningArea ? winningCount + 1 : winningCount;\n          losingCount = !isWinningArea ? losingCount + 1 : losingCount;\n\n          return (\n            <div\n              className=\"results__player\"\n              key={`${player.id}-${player.clubberId}`}\n              style={getPosition(isWinningArea ? winningCount : losingCount, isWinningArea ? 0 : 1, width)}\n            >\n              <ClubberAvatar\n                avatarId={player.avatarId}\n                id={player.clubberId}\n                width={45}\n                animate={isWinningArea}\n              />\n              <span className=\"results__player-name\">{player.name}</span>\n            </div>\n          );\n        })}\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        {isFirstRunThrough ? (\n          <TimedButton onClick={onSeeRanking} onExpire={onSeeRanking} duration={20} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </TimedButton>\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </Space>\n\n      <VotesDelegator\n        track={track}\n        winningValues={winningValues}\n        players={players}\n        winningTeam={winningTeam}\n      />\n    </Step>\n  );\n}\n\nconst getPosition = memoize(\n  (index: number, side: number, width: number) => {\n    const areaSize = width / 3;\n    const buffer = side * areaSize * 2;\n\n    const getTopValue = (index: number, startAt: number, increment: number): number => {\n      const ratio = [0, 0, 0, 1, 1, 1, 1];\n      const multiplier = Math.floor(index / ratio.length);\n      const remainderPosition = index % ratio.length;\n\n      return startAt + multiplier * increment + (ratio[remainderPosition] + multiplier) * increment;\n    };\n    const top = getTopValue(index, 0, 45);\n\n    const left = [0.24, 0.48, 0.72, 0.15, 0.36, 0.6, 0.84][index % 7];\n\n    return {\n      top: `${50 + top}px`,\n      left: `${areaSize * left + buffer}px`,\n    };\n  },\n  (index, side, width) => `${index}-${side}-${width}`\n);\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\nimport type { GameRound, GameRanking } from 'types/game';\nimport type { UseStep } from 'hooks/useStep';\n// Icons\nimport { BouncerIcon } from 'icons/BouncerIcon';\n// Hooks\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n// Components\nimport { HostNextPhaseButton } from 'components/host';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\n\ntype StepRankingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  ranking: GameRanking;\n  goToPreviousStep: UseStep['goToPreviousStep'];\n  round: GameRound;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round, user }: StepRankingProps) {\n  // Dynamic background\n  useColorizeBackground(user, round.current + 1);\n\n  const innerContent = (\n    <>\n      <RuleInstruction type=\"alert\">\n        <Translate\n          pt=\"Somente jogadores na área VIP são ranqueados, porque você não pode ganhar se não estiver lá!\"\n          en=\"Only players in the VIP area can be ranked since you can't win if you're not there\"\n        />\n      </RuleInstruction>\n    </>\n  );\n\n  const actions = (\n    <>\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <HostNextPhaseButton round={round} />\n    </>\n  );\n\n  if (ranking.length === 0) {\n    return (\n      <Step>\n        <Title size=\"small\" white>\n          <Translate pt=\"Ranking\" en=\"Ranking\" />?\n        </Title>\n\n        <Space className=\"space-container\">\n          <BouncerIcon width=\"120\" />\n        </Space>\n        {innerContent}\n        {actions}\n      </Step>\n    );\n  }\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate\n          pt={<>Pontos por já estar no Time Vencedor.</>}\n          en={<>Points for already being on the Winning Team.</>}\n        />,\n        <Translate\n          pt={<>Pontos por entrar no Time Vencedor.</>}\n          en={<>Points for joining the Winning Team.</>}\n        />,\n      ]}\n      title={<Translate pt={<>Ranking da Área VIP</>} en={<>VIP Ranking</>} />}\n      white\n      subtitle={innerContent}\n    >\n      {actions}\n    </StepRankingWrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Types\nimport type { PhaseProps } from 'types/game';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { BouncerIcon } from 'icons/BouncerIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepResult } from './StepResult';\nimport { StepRanking } from './StepRanking';\n\nexport function PhaseResult({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 0) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<BouncerIcon />}\n      title={<Translate pt=\"Resultado\" en=\"Results\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={4}\n    >\n      <Instruction>\n        <Translate pt=\"Quem vai pra área VIP?\" en=\"So who goes to the VIP area?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.RESULT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResult\n          players={players}\n          announcement={announcement}\n          onSeeRanking={goToNextStep}\n          user={user}\n          round={state.round}\n          isFirstRunThrough={isFirstRunThrough}\n          track={state.track}\n          winningValues={state.winningValues}\n          winningTeam={state.winningTeam}\n          scoringType={state.scoringType}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { isEqual } from 'lodash';\n// Types\nimport type { PhaseProps } from 'types/game';\nimport type { GamePlayer } from 'types/player';\n// Utils\nimport { AVATARS } from 'utils/avatars';\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { GameOverWrapper } from 'components/game-over';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { Container } from 'components/general/Container';\nimport { Achievements } from 'components/general/Achievements';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<CrownIcon />}>\n      {!isEqual(state.winners, state.fairWinners) && (\n        <Container\n          title={\n            <Translate\n              pt=\"Se a vida fosse justa, quem teria ganhado, com mais pontos, seria:\"\n              en=\"If life was fair, the winner with the most points would've been:\"\n            />\n          }\n        >\n          <Instruction contained>\n            <ul className=\"game-over__winners\">\n              {state.fairWinners.map((winner: GamePlayer) => {\n                return (\n                  <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                    <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                    <div className=\"game-over__winner-name\">\n                      <strong>{winner.name ?? '?'}</strong>,{' '}\n                      <DualTranslate>{AVATARS[winner.avatarId].description}</DualTranslate>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </Instruction>\n        </Container>\n      )}\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseTrack } from './PhaseTrack';\nimport { PhaseSeeding } from './PhaseSeeding';\nimport { PhaseResult } from './PhaseResult';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.MEGAMIX.SEEDING:\n      return PhaseSeeding;\n    case PHASES.MEGAMIX.TRACK:\n      return PhaseTrack;\n    case PHASES.MEGAMIX.RESULT:\n      return PhaseResult;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionMegamix() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.PLUMP_PURPLE,\n          colorLink: THEME_COLORS.PLUMP_PURPLE,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.MEGAMIX} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionMegamix;\n","import { AchievementReference } from 'types/achievements';\n\nconst ACHIEVEMENTS = {\n  SOLITARY_VIP: 'SOLITARY_VIP',\n  SOLITARY_LOSER: 'SOLITARY_LOSER',\n  LONGEST_VIP: 'LONGEST_VIP',\n  LONGEST_LOSER: 'LONGEST_LOSER',\n  MOST_SWITCHED: 'MOST_SWITCHED',\n  LEAST_SWITCHED: 'LEAST_SWITCHED',\n  MOST_JOIN: 'MOST_JOIN',\n  MOST_LEFT: 'MOST_LEFT',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.SOLITARY_VIP]: {\n    icon: 'one',\n    title: {\n      pt: 'VIP Solitário',\n      en: 'Solitary VIP',\n    },\n    description: {\n      pt: 'Esteve na área VIP sozinho mais vezes',\n      en: 'Was in the VIP area alone the most',\n    },\n  },\n  [ACHIEVEMENTS.SOLITARY_LOSER]: {\n    icon: 'trash',\n    title: {\n      pt: 'Fracassado Solitário',\n      en: 'Solitary Loser',\n    },\n    description: {\n      pt: 'Esteve na pista sozinho mais vezes',\n      en: 'Was in the General Admission area alone the most',\n    },\n  },\n  [ACHIEVEMENTS.LONGEST_VIP]: {\n    icon: 'arrow-wide',\n    title: {\n      pt: 'VIP de Longa Data',\n      en: 'Longest VIP',\n    },\n    description: {\n      pt: 'Ficou na área VIP por mais rodadas consecutivas',\n      en: 'Was in the VIP area the most consecutive rounds ',\n    },\n  },\n  [ACHIEVEMENTS.LONGEST_LOSER]: {\n    icon: 'face-embarrassed',\n    title: {\n      pt: 'Pobre de Longa Data',\n      en: 'Longest Loser',\n    },\n    description: {\n      pt: 'Ficou na pista por mais rodadas consecutivas',\n      en: 'Was in the General Admission area the most consecutive rounds',\n    },\n  },\n  [ACHIEVEMENTS.MOST_SWITCHED]: {\n    icon: 'arrows-reverse',\n    title: {\n      pt: 'Mais Troca-Troca',\n      en: 'Most Switched',\n    },\n    description: {\n      pt: 'Trocou de área mais vezes',\n      en: 'Switched areas the most',\n    },\n  },\n  [ACHIEVEMENTS.LEAST_SWITCHED]: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Menos Troca-Troca',\n      en: 'Least Switched',\n    },\n    description: {\n      pt: 'Trocou de área menos vezes',\n      en: 'Switched areas the least',\n    },\n  },\n  [ACHIEVEMENTS.MOST_JOIN]: {\n    icon: 'fire',\n    title: {\n      pt: 'Mais Chegador',\n      en: 'Most Joiner',\n    },\n    description: {\n      pt: 'Entrou na área VIP mais vezes',\n      en: 'Joined the VIP area the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_LEFT]: {\n    icon: 'door',\n    title: {\n      pt: 'Mais Sairão',\n      en: 'Most Leaver',\n    },\n    description: {\n      pt: 'Saiu da área VIP mais vezes',\n      en: 'Left the VIP area the most',\n    },\n  },\n};\n\nexport default achievementsReference;\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n\ntype CandyCountProps = {\n  candyCount: number;\n  size?: 'small' | 'default' | 'large';\n};\n\nexport function CandyCount({ candyCount, size = 'small' }: CandyCountProps) {\n  return (\n    <>\n      <IconAvatar icon={<CandyIcon />} size={size} />\n      <Avatar size={size} style={{ backgroundColor: 'hotPink' }}>\n        {candyCount}\n      </Avatar>\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Types\nimport type { StreetCard } from '../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { CandyCount } from './CandyCount';\n\ntype HouseCardProps = {\n  /**\n   * The candy, monster, jackpot card\n   */\n  card: StreetCard;\n  /**\n   * The quantity of candy left in the sidewalk\n   */\n  candyLeftover: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Unique id\n   */\n  id?: string;\n  /**\n   * If the house is the last one\n   */\n  active?: boolean;\n  /**\n   * Enables or disables preview\n   */\n  preview?: boolean;\n};\n\nexport function HouseCard({\n  card,\n  candyLeftover,\n  id,\n  className = '',\n  active = false,\n  preview,\n}: HouseCardProps) {\n  const { dualTranslate } = useLanguage();\n\n  const baseClass = 'n-house-card';\n  const cardBaseClass = 'n-house-card__card';\n\n  return (\n    <div\n      className={clsx(baseClass, `${baseClass}--${card.type}`, active && `${baseClass}--active`, className)}\n      id={id}\n    >\n      <div className=\"n-house-card__sidewalk\">\n        {card.type === 'candy' && candyLeftover > 0 && (\n          <Tooltip\n            color=\"hotPink\"\n            title={\n              <Translate\n                pt=\"Doces que não foram divididos entre os jogadores\"\n                en=\"Candy that wasn't shared between players\"\n              />\n            }\n          >\n            <CandyCount candyCount={candyLeftover} />\n          </Tooltip>\n        )}\n      </div>\n      <ImageCard id={card.key} cardWidth={80} className={clsx(cardBaseClass)} preview={preview} />\n\n      <h3 className={`${baseClass}__name`}>{dualTranslate(card.name)}</h3>\n\n      {active && (\n        <span\n          className={clsx(\n            `${baseClass}__active`,\n            getAnimationClass('heartBeat', { speed: 'slow', infinite: true })\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Utils\nimport { LETTERS } from 'utils/constants';\n\nexport const getColorModifier = (letter: string) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nexport const getBracketClass = (\n  num: number,\n  showNeedle: boolean,\n  needle: number,\n  showTarget: boolean,\n  target: number\n): string => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = num % 2 === 0 ? 'even' : 'odd';\n\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === num && `${baseBracketClass}--active`,\n    showTarget && target === num && `${baseBracketClass}--target`\n  );\n};\n\nexport const getGuessResultClass = (guess: number, target: number): string => {\n  const base = 'o-player-guess__guess';\n  if (target - guess === 0) return `${base}--blue`;\n  if (Math.abs(target - guess) === 1) return `${base}--orange`;\n  if (Math.abs(target - guess) === 2) return `${base}--yellow`;\n  return '';\n};\n\nexport const getPoints = (guess: number, target: number): number => {\n  if (target - guess === 0) return 4;\n  if (Math.abs(target - guess) === 1) return 3;\n  if (Math.abs(target - guess) === 2) return 2;\n  return 0;\n};\n\n/**\n * Counts how many difference guesses are there\n */\nexport const countDifferentGuesses = (regularPlayers: GamePlayer[]): number => {\n  const dict: Record<string, number> = {};\n\n  regularPlayers.forEach((player) => {\n    if (dict[String(player.guess)] === undefined) {\n      dict[String(player.guess)] = 0;\n    }\n    dict[String(player.guess)] += 1;\n  });\n\n  return Object.keys(dict).length;\n};\n","import { ReactNode } from 'react';\n\ntype BookProps = {\n  children?: [ReactNode] | [ReactNode, ReactNode] | [ReactNode, ReactNode, ReactNode];\n};\n\nexport function Book({ children }: BookProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 725.95 328.66\"\n      style={{ width: '50vw', maxWidth: '600px' }}\n    >\n      <defs>\n        <linearGradient id=\"a\" x1=\"171.8\" x2=\"354.26\" y1=\"170.82\" y2=\"170.82\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#d9d9d9\"></stop>\n          <stop offset=\"1\" stopColor=\"#fff\"></stop>\n        </linearGradient>\n        <linearGradient\n          id=\"b\"\n          x1=\"371.69\"\n          x2=\"554.14\"\n          y1=\"171.43\"\n          y2=\"171.43\"\n          xlinkHref=\"#a\"\n        ></linearGradient>\n        <linearGradient\n          id=\"c\"\n          x1=\"554.14\"\n          x2=\"725.95\"\n          y1=\"178.59\"\n          y2=\"178.59\"\n          xlinkHref=\"#a\"\n        ></linearGradient>\n      </defs>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45S313.41-5.8 263.85 25.89 158.73 44.64 158.73 44.64v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45S313.41-5.8 263.85 25.89 158.73 44.64 158.73 44.64v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#b3b3b3\"\n        d=\"M222.05 310.18c-4.7.87-9 1.56-13 2.11l-1.9.3 147.09-10.1s-51.52-4.77-132.19 7.69z\"\n      ></path>\n      <path\n        fill=\"#ccc\"\n        d=\"M245.56 305.05a407.52 407.52 0 01-23.48 5.12c80.67-12.46 132.21-7.69 132.21-7.69s-51.24-10.58-108.73 2.57z\"\n      ></path>\n      <path\n        fill=\"#e6e6e6\"\n        d=\"M327.62 295a134.29 134.29 0 00-59.08 3.85q-12.45 3.65-23 6.24c57.49-13.15 108.7-2.56 108.7-2.56s-10.07-4.92-26.62-7.53z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M260.85 39.84C226.27 59.2 171.8 61.07 171.8 61.07v251.75s6.95 2.31 25.52.78c2.74-.22 5.74-.53 9-1l2.77-.36q6.6-1.14 13-2.11c6.95-1.29 14.75-3 23.48-5.12q10.58-2.61 23-6.24a134.29 134.29 0 0159.05-3.77c16.55 2.64 26.64 7.52 26.64 7.52V49.84c-38.67-25.84-58.82-29.37-93.41-10z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45s47.59-38.77 99.1-18.56c54.76 21.48 105.12 22.75 105.12 22.75v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45s47.59-38.77 99.1-18.56c54.76 21.48 105.12 22.75 105.12 22.75v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#b3b3b3\"\n        d=\"M503.9 310.18c4.7.87 9 1.56 13 2.11l1.9.3-147.09-10.1s51.52-4.77 132.19 7.69z\"\n      ></path>\n      <path\n        fill=\"#ccc\"\n        d=\"M480.39 305.05a407.52 407.52 0 0023.48 5.12c-80.67-12.46-132.21-7.69-132.21-7.69s51.24-10.58 108.73 2.57z\"\n      ></path>\n      <path\n        fill=\"#e6e6e6\"\n        d=\"M398.33 295a134.3 134.3 0 0159.08 3.85q12.45 3.65 23 6.24c-57.49-13.15-108.7-2.56-108.7-2.56s10.06-4.92 26.62-7.53z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M465.1 37.84c37.28 13.46 89 23.23 89 23.23v251.75s-6.94 2.31-25.51.78c-2.74-.22-5.74-.53-9-1l-2.77-.36q-6.6-1.14-13-2.11a444.4 444.4 0 01-23.48-5.12q-10.57-2.61-23-6.24a134.3 134.3 0 00-59.01-3.77c-16.56 2.64-26.64 7.52-26.64 7.52V49.84c38.67-25.84 55.86-25.56 93.41-12z\"\n      ></path>\n\n      <foreignObject x=\"185\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[0]) && children![0]}\n      </foreignObject>\n\n      <foreignObject x=\"387\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[1]) && children![1]}\n      </foreignObject>\n\n      {Boolean(children && children[2]) && (\n        <path fill=\"#fff\" d=\"M554.14 61.53s69.5-28 171.81-12v251.06s-117-6.94-171.81 12z\"></path>\n      )}\n\n      <foreignObject x=\"566\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[2]) && children![2]}\n      </foreignObject>\n    </svg>\n  );\n}\n","import { useMemo } from 'react';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Utils\nimport { parseSelectedGlyphs } from '../utils/helpers';\n// Icons\nimport { NoIcon } from 'icons/NoIcon';\nimport { YesIcon } from 'icons/YesIcon';\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\n// Components\nimport { AvatarStrip, IconAvatar } from 'components/avatars';\nimport { GlyphCard } from 'components/cards/GlyphCard';\n\ntype PlayerGlyphsProps = {\n  player: GamePlayer;\n  glyphWidth: number;\n  done?: boolean;\n};\n\nexport function PlayerGlyphs({ player, glyphWidth, done }: PlayerGlyphsProps) {\n  const [positive, negative] = useMemo(\n    () => parseSelectedGlyphs(player.selectedGlyphs ?? {}),\n    [player.selectedGlyphs]\n  );\n\n  return (\n    <div className=\"q-player-glyphs\">\n      <AvatarStrip\n        player={player}\n        withName\n        className=\"q-player-glyphs__strip\"\n        icon={done ? <BoxCheckMarkIcon /> : undefined}\n      />\n      {positive.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--positive\"\n            key={`pos-${player.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<YesIcon />} size=\"small\" />\n            {Boolean(id) ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n      {negative.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--negative\"\n            key={`neg-${player.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<NoIcon />} size=\"small\" />\n            {Boolean(id) ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\n\n/**\n * Creates a glyph reference dictionary where true means positive and false means negative\n * @param positive\n * @param negative\n * @returns\n */\nexport const prepareGlyphs = (\n  positive: BooleanDictionary,\n  negative: BooleanDictionary\n): BooleanDictionary => {\n  const dict: BooleanDictionary = {};\n  Object.keys(positive).forEach((key) => (dict[key] = true));\n  Object.keys(negative).forEach((key) => (dict[key] = false));\n\n  return dict;\n};\n\nexport const parseSelectedGlyphs = (glyphs: BooleanDictionary) => {\n  const positive: string[] = [];\n  const negative: string[] = [];\n\n  Object.keys(glyphs).forEach((id) => {\n    if (glyphs[id]) {\n      positive.push(id);\n    } else {\n      negative.push(id);\n    }\n  });\n\n  while (positive.length < 3) {\n    positive.push('');\n  }\n\n  while (negative.length < 3) {\n    negative.push('');\n  }\n\n  return [positive, negative];\n};\n\n/**\n * Get list of players on each voted character\n * @param players\n * @param votes\n * @returns\n */\nexport const getRibbons = (players: GamePlayers, votes: StringDictionary): Record<string, GamePlayer[]> => {\n  const votesDict: Record<string, GamePlayer[]> = {};\n\n  Object.keys(votes).forEach((playerEntry) => {\n    const playerId = playerEntry.split(SEPARATOR)[1];\n    const characterId = votes[playerEntry].split(SEPARATOR)[1];\n\n    if (votesDict[characterId] === undefined) {\n      votesDict[characterId] = [];\n    }\n\n    votesDict[characterId].push(players[playerId]);\n  });\n\n  return votesDict;\n};\n\n/**\n * Removes prefixes from votes\n * @param votes\n * @returns\n */\nexport const prepareGuesses = (votes: StringDictionary): StringDictionary => {\n  const result: StringDictionary = {};\n\n  Object.keys(votes).forEach((playerEntry) => {\n    const playerId = playerEntry.split(SEPARATOR)[1];\n    const characterId = votes[playerEntry].split(SEPARATOR)[1];\n\n    result[playerId] = characterId;\n  });\n\n  return result;\n};\n","export function ImageCardsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M319.463 421.666H82.093c-10.698 0-19.37-8.672-19.37-19.37V26.87c0-10.698 8.672-19.37 19.37-19.37h237.371c10.698 0 19.37 8.672 19.37 19.37v375.426c-.001 10.698-8.673 19.37-19.371 19.37z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M319.463 7.5h-20.63v310.431c0 46.246-37.49 83.735-83.735 83.735H62.722v.63c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V26.87c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#da387d\"\n        d=\"M301.142 247.455l-9.036 54.215c-4.902 29.412-30.349 50.969-60.166 50.969a41.902 41.902 0 01-29.629-12.273 2.167 2.167 0 00-3.066 0 41.902 41.902 0 01-29.629 12.273c-29.817 0-55.264-21.557-60.166-50.969l-9.036-54.215c-5.277-31.661 19.139-60.483 51.237-60.483a51.947 51.947 0 0136.73 15.214c6.847 6.847 17.948 6.847 24.794 0a51.944 51.944 0 0136.73-15.214c32.098 0 56.514 28.822 51.237 60.483z\"\n      ></path>\n      <path fill=\"#d80a61\" d=\"M298.833 261.305l2.308-13.85c1.521-9.123.576-18.011-2.308-26.041z\"></path>\n      <path\n        fill=\"#8078bc\"\n        d=\"M151.651 186.972a51.947 51.947 0 0136.73 15.214c6.847 6.847 17.948 6.847 24.794 0a51.944 51.944 0 0136.73-15.214c21.47 0 39.503 12.896 47.512 30.911V122.53a4.586 4.586 0 00-4.586-4.586H108.725a4.586 4.586 0 00-4.586 4.586v95.353c8.009-18.015 26.042-30.911 47.512-30.911zM292.106 301.67c-4.902 29.412-30.349 50.969-60.166 50.969a41.902 41.902 0 01-29.629-12.273 2.167 2.167 0 00-3.066 0 41.902 41.902 0 01-29.629 12.273c-29.817 0-55.264-21.557-60.166-50.969l-5.311-31.865v105.859a4.586 4.586 0 004.586 4.586h184.107a4.586 4.586 0 004.586-4.586V269.805z\"\n      ></path>\n      <path\n        fill=\"#6b61b1\"\n        d=\"M297.417 375.664v-42.315c-3.44 18.484-12.953 34.834-26.389 46.901h21.804a4.586 4.586 0 004.585-4.586z\"\n      ></path>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M429.908 90.333h-91.074v311.963c0 10.698-8.672 19.37-19.37 19.37H173.167v63.463c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V109.703c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M429.908 90.333h-20.63v310.431c0 46.246-37.49 83.735-83.735 83.735H173.167v.63c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V109.703c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#f4dd45\"\n        d=\"M338.834 232.111v170.185c0 10.698-8.672 19.37-19.37 19.37h-59.93c15.211 8.781 32.864 13.806 51.69 13.806 57.185 0 103.542-46.357 103.542-103.542-.002-47.622-32.153-87.736-75.932-99.819z\"\n      ></path>\n      <path\n        fill=\"#f1d333\"\n        d=\"M409.278 365.273c3.557-10.463 5.486-21.677 5.486-33.343s-1.929-22.88-5.486-33.343z\"\n      ></path>\n      <path\n        fill=\"#86f1a7\"\n        d=\"M338.834 278.693v106.474c43.78-6.444 75.931-27.838 75.931-53.237-.001-25.398-32.152-46.792-75.931-53.237z\"\n      ></path>\n      <path\n        fill=\"#80e29d\"\n        d=\"M409.278 349.713c3.557-5.58 5.486-11.561 5.486-17.783s-1.929-12.203-5.486-17.783z\"\n      ></path>\n      <path\n        fill=\"#7ad0df\"\n        d=\"M407.861 294.681v-89.318a4.586 4.586 0 00-4.586-4.586h-64.442v31.334c31.709 8.752 57.317 32.207 69.028 62.57zm-96.639 140.791c-18.826 0-36.478-5.025-51.69-13.806h-44.949v36.831a4.586 4.586 0 004.586 4.586h184.107a4.586 4.586 0 004.586-4.586V369.18c-14.958 38.78-52.586 66.292-96.64 66.292z\"\n      ></path>\n      <path\n        fill=\"#70c6da\"\n        d=\"M407.861 458.497v-42.315c-3.44 18.484-12.953 34.834-26.389 46.901h21.804a4.586 4.586 0 004.585-4.586z\"\n      ></path>\n      <path d=\"M145.556 97.833a7.5 7.5 0 007.5-7.5V55.819c0-15.554-12.654-28.208-28.208-28.208S96.64 40.265 96.64 55.819v34.514a7.5 7.5 0 0015 0V70.222h26.417v20.111a7.499 7.499 0 007.499 7.5zm-20.709-55.222c7.083 0 12.882 5.604 13.195 12.611h-26.389c.313-7.007 6.112-12.611 13.194-12.611z\"></path>\n      <path d=\"M449.278 180.356a7.5 7.5 0 007.5-7.5v-63.153c0-14.816-12.054-26.871-26.87-26.871h-83.574V26.87c0-14.816-12.054-26.87-26.87-26.87H199.592a7.5 7.5 0 000 15h119.872c6.545 0 11.87 5.325 11.87 11.87v375.426c0 6.545-5.325 11.87-11.87 11.87H82.093c-6.545 0-11.871-5.325-11.871-11.87V26.87c0-6.545 5.325-11.87 11.871-11.87h82.499a7.5 7.5 0 000-15H82.093C67.276 0 55.222 12.054 55.222 26.87v375.426c0 14.816 12.054 26.87 26.871 26.87h83.574v55.963c0 14.816 12.054 26.871 26.87 26.871h237.371c14.816 0 26.87-12.054 26.87-26.871V207.856a7.5 7.5 0 00-15 0v277.273c0 6.545-5.325 11.871-11.87 11.871H192.537c-6.545 0-11.87-5.325-11.87-11.871v-55.963h26.417v29.331c0 6.664 5.421 12.085 12.085 12.085h29.282a7.5 7.5 0 000-15h-26.367v-26.417h35.479c41.673 23.035 95.759 17.569 132.129-18.833a112.935 112.935 0 0010.67-12.339v57.588H283.451a7.5 7.5 0 000 15h119.825c6.664 0 12.085-5.421 12.085-12.085v-88.043c9.28-24.951 9.133-52.488 0-77.169v-87.923c0-6.664-5.421-12.086-12.085-12.086h-56.942V97.833h83.574c6.545 0 11.87 5.325 11.87 11.871v63.153a7.5 7.5 0 007.5 7.499zM346.333 287.611c35.72 7.224 60.841 25.134 60.93 44.217v.265c-.143 19.06-25.249 36.939-60.93 44.155zm0-15.282v-29.832c23.977 9.374 42.714 27.79 52.77 50.6-13.123-9.529-31.229-16.832-52.77-20.768zm-13.342 153.177c7.974-4.666 13.342-13.322 13.342-23.21v-10.765c21.554-3.938 39.669-11.248 52.794-20.786-12.046 27.308-36.432 47.905-66.136 54.761zm67.37-217.229v57.339a110.629 110.629 0 00-54.028-39.062v-18.277z\"></path>\n      <path d=\"M292.831 110.444H108.725c-6.664 0-12.085 5.421-12.085 12.085v93.839a59.35 59.35 0 00-3.623 32.319l3.623 21.739v105.237c0 6.664 5.421 12.086 12.085 12.086h184.106c6.664 0 12.086-5.422 12.086-12.086V270.426l3.623-21.738a59.35 59.35 0 00-3.623-32.319v-93.84c0-6.663-5.422-12.085-12.086-12.085zM111.556 268.689a6.306 6.306 0 00-.041-.246l-3.703-22.22a44.362 44.362 0 019.928-36.034c16.727-19.746 46.877-21.159 65.338-2.699 9.759 9.759 25.641 9.76 35.401 0 8.395-8.394 19.555-13.017 31.426-13.017 13.09 0 25.451 5.729 33.912 15.717s12.08 23.122 9.928 36.033c-5.109 30.643-3.41 20.247-3.743 22.459l-5.293 31.756c-4.317 25.901-26.509 44.701-52.769 44.701-9.189 0-17.828-3.578-24.325-10.076-1.826-1.826-4.254-2.832-6.836-2.832s-5.01 1.005-6.836 2.832c-6.498 6.498-15.137 10.076-24.326 10.076-26.259 0-48.452-18.8-52.769-44.701zm178.361-143.245v69.506c-22.997-20.957-58.86-20.827-81.639 1.53v-19.626c0-7.932 4.407-15.062 11.501-18.61a7.499 7.499 0 003.354-10.062 7.499 7.499 0 00-10.062-3.354c-12.209 6.104-19.793 18.376-19.793 32.026v19.626c-11.18-10.973-25.939-17.009-41.627-17.009a59.324 59.324 0 00-40.012 15.478v-69.506h178.278zM111.639 372.75v-44.537c12.201 19.413 33.736 31.926 57.977 31.926 11.489 0 22.379-3.895 31.162-11.061 8.783 7.166 19.672 11.061 31.162 11.061 24.242 0 45.776-12.513 57.977-31.926v44.538H111.639z\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","import { getRandomItem } from 'utils/helpers';\n\nconst lowClues = ['agua', 'bola', 'coco', 'dedo'];\nconst clues = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar'];\nconst highClues = [\n  'agua',\n  'bola',\n  'coco',\n  'dedo',\n  'egua',\n  'flauta',\n  'gatilho',\n  'hélio',\n  'jaguar',\n  'ketchup',\n  'lagoa',\n  'manga',\n  'ninja',\n  'olho',\n  'pato',\n  'queijo',\n  'raio',\n  'sapo',\n  'tigre',\n  'urso',\n  'vaca',\n  'xarope',\n  'zangado',\n  'abacaxi',\n  'banana',\n  'cachorro',\n  'dado',\n  'elefante',\n  'faca',\n  'gato',\n  'helicoptero',\n  'igreja',\n  'janela',\n  'kiwi',\n];\n\nexport const mockClue = (variety: 'low' | 'default' | 'high' = 'default'): string => {\n  const bank = {\n    low: lowClues,\n    default: clues,\n    high: highClues,\n  }[variety];\n\n  return getRandomItem(bank);\n};\n","import { sampleSize } from 'lodash';\nimport { getRandomItem } from 'utils/helpers';\n\nconst mockedDrawings = [\n  [\n    88, 263, 88, 262, 89, 262, 89, 262, 90, 261, 92, 258, 95, 253, 97, 251, 100, 249, 108, 238, 111, 235, 121,\n    224, 124, 221, 136, 209, 140, 204, 143, 201, 158, 186, 162, 182, 178, 164, 183, 159, 188, 154, 205, 133,\n    209, 128, 212, 124, 224, 110, 226, 107, 228, 105, 235, 98, 236, 97, 238, 95, 239, 94, 240, 93, 241, 92,\n    242, 91, 244, 90, 244, 89, 246, 88, 249, 87, 249, 86, 249, 86, 250, 86, 250, 86, 251, 86, 252, 86, 254,\n    87, 256, 87, 258, 88, 260, 88, 263, 90, 264, 90, 270, 93, 276, 98, 280, 100, 287, 105, 302, 117, 310, 123,\n    318, 129, 337, 143, 344, 150, 353, 155, 359, 161, 361, 162, 365, 166, 372, 170, 376, 172, 377, 173, 385,\n    176, 390, 179, 391, 180, 395, 182, 396, 183, 398, 184, 399, 184, 400, 185, 400, 186, 401, 186, 401, 186,\n    401, 186, 401, 186, 401, 187, 401, 187, 401, 188, 402, 188, 402, 189, 403, 190, 403, 191, 403, 192, 404,\n    192, 404, 193, 404, 193, 404, 194, 405, 194, 405, 195, 405, 196, 405, 196, 405, 196, 406, 198, 406, 199,\n    407, 200, 407, 200, 407, 201, 408, 201, 409, 202, 409, 204, 410, 205, 411, 207, 412, 209, 412, 209, 415,\n    212, 416, 214, 417, 215, 418, 216, 419, 217, 419, 217, 420, 218, 421, 218, 421, 219, 421, 219, 421, 219,\n    422, 220, 422, 221, 422, 221, 423, 222, 423, 222, 423, 223, 423, 223, 424, 224, 424, 225, 424, 227, 424,\n    227, 424, 229, 424, 230, 424, 231, 425, 233, 425, 234, 425, 235, 425, 235, 425, 238, 425, 238, 425, 239,\n    424, 242, 423, 243, 423, 244, 423, 245, 421, 247, 417, 253, 410, 264, 408, 266, 403, 271, 396, 278, 389,\n    283, 380, 291, 369, 301, 358, 311, 355, 314, 344, 324, 329, 337, 314, 350, 299, 363, 287, 375, 285, 377,\n    276, 385, 274, 387, 268, 392, 266, 393, 257, 401, 256, 402, 253, 404, 252, 405, 251, 406, 249, 408, 245,\n    410, 245, 411, 245, 411, 243, 412, 243, 413, 242, 413, 242, 413, 242, 414, 241, 414, 241, 414, 241, 414,\n    240, 415, 239, 415, 239, 415, 239, 415, 238, 416, 238, 416, 237, 416, 237, 416, 235, 415, 234, 414, 230,\n    412, 222, 407, 215, 404, 204, 398, 195, 393, 190, 389, 183, 384, 179, 378, 173, 373, 169, 366, 167, 362,\n    162, 353, 161, 352, 157, 344, 154, 340, 150, 334, 148, 330, 145, 328, 142, 325, 141, 323, 139, 321, 137,\n    319, 136, 317, 134, 315, 134, 315, 132, 312, 132, 312, 132, 311, 131, 310, 130, 308, 129, 308, 127, 306,\n    127, 305, 126, 305, 124, 304, 123, 303, 123, 302, 121, 301, 121, 301, 119, 299, 118, 298, 118, 298, 115,\n    295, 115, 294, 110, 289, 107, 284, 106, 283, 104, 281, 101, 278, 100, 277, 100, 277, 98, 276, 98, 275, 97,\n    274, 96, 274, 96, 274, 96, 274, 95, 273, 94, 272, 94, 272, 94, 272, 93, 272, 93, 272, 93, 272, 93.1,\n    272.1,\n  ],\n  [\n    100, 47, 100, 48, 100, 48, 99, 50, 99, 50, 98, 51, 97, 52, 97, 54, 96, 55, 95, 56, 94, 58, 93, 59, 93, 60,\n    92, 61, 92, 62, 91, 63, 91, 64, 91, 65, 91, 66, 91, 67, 91, 69, 91, 70, 91, 72, 91, 73, 92, 76, 93, 81,\n    95, 85, 97, 89, 100, 93, 101, 95, 105, 100, 105, 100, 108, 103, 109, 104, 111, 106, 114, 108, 115, 109,\n    118, 110, 118, 111, 120, 112, 122, 113, 123, 114, 126, 115, 129, 116, 130, 117, 133, 117, 134, 118, 139,\n    120, 140, 121, 141, 121, 143, 122, 150, 125, 156, 128, 160, 131, 164, 133, 165, 134, 169, 136, 172, 140,\n    176, 142, 178, 143, 181, 146, 182, 147, 185, 149, 186, 149, 189, 152, 190, 153, 193, 155, 198, 159, 201,\n    163, 202, 164, 204, 166, 206, 167, 206, 168, 206, 170, 207, 170, 208, 173, 208, 174, 209, 181, 211, 185,\n    212, 191, 215, 210, 216, 220, 218, 229, 218, 231, 220, 240, 220, 245, 220, 253, 220, 258, 220, 262, 220,\n    267, 220, 268, 219, 269, 218, 273, 218, 276, 217, 279, 215, 282, 215, 283, 214, 285, 213, 286, 213, 287,\n    211, 289, 209, 291, 209, 292, 208, 294, 206, 295, 205, 297, 205, 297, 204, 299, 203, 299, 202, 300, 202,\n    301, 202.1, 301.1,\n  ],\n  [\n    399, 58, 398, 58, 398, 58, 397, 59, 397, 59, 397, 59, 396, 59, 396, 59, 394, 61, 394, 61, 391, 64, 389,\n    66, 386, 71, 385, 72, 384, 75, 380, 83, 380, 86, 379, 94, 378, 95, 378, 103, 378, 104, 378, 105, 378, 106,\n    378, 107, 379, 108, 379, 108, 380, 108, 381, 109, 381, 110, 382, 111, 387, 114, 388, 115, 389, 116, 390,\n    118, 396, 123, 398, 125, 400, 126, 402, 128, 403, 128, 407, 129, 409, 130, 411, 130, 412, 130, 413, 130,\n    414, 130, 415, 130, 415, 129, 415, 129, 416, 129, 416, 129, 416, 128, 417, 127, 421, 123, 424, 118, 424,\n    118, 427, 115, 427, 113, 428, 112, 430, 109, 430, 108, 431, 106, 434, 101, 434, 99, 434, 97, 435, 96, 435,\n    95, 435, 93, 435, 92, 435, 92, 435, 91, 435, 90, 435, 87, 435, 85, 435, 82, 435, 82, 434, 80, 433, 78,\n    432, 77, 430, 73, 430, 72, 429, 72, 428, 71, 427, 70, 426, 69, 425, 68, 424, 67, 423, 67, 422, 66, 418,\n    63, 416, 63, 414, 61, 412, 61, 411, 61, 409, 61, 409, 61, 407, 61, 406, 61, 406, 61, 405, 61, 405, 61,\n    404, 61, 404, 61, 403, 61, 403, 61, 403, 61, 403, 61, 401, 61, 400, 62, 398, 63, 398, 63, 396, 63, 395,\n    63, 395, 63, 395, 63, 395.1, 63.1,\n  ],\n  [\n    381, 433, 381, 432, 381, 431, 380, 429, 380, 427, 379, 425, 379, 422, 379, 421, 378, 418, 377, 408, 376,\n    404, 376, 399, 375, 394, 375, 385, 374, 378, 374, 369, 373, 363, 372, 351, 372, 340, 372, 331, 371, 319,\n    371, 312, 370, 308, 369, 302, 368, 297, 368, 296, 368, 294, 368, 292, 367, 291, 367, 290, 367, 289, 366,\n    288, 366, 287, 366, 286, 366, 285, 364, 282, 364, 280, 363, 277, 362, 276, 362, 275, 362, 274, 362, 274,\n    361, 272, 361, 271, 361, 270, 360, 269, 360, 268, 360, 268, 359, 267, 359, 265, 359, 265, 359, 265, 359,\n    264, 359, 264, 359, 264, 359, 263, 359, 263, 359, 262, 359, 262, 358, 262, 358, 261, 358, 261, 358, 261,\n    358, 260, 358, 260, 358, 260, 357, 260, 357, 259, 357, 259, 357, 259, 357, 259, 357, 259, 357, 259, 357,\n    261, 356, 262, 356, 263, 356, 264, 356, 269, 356, 271, 354, 283, 352, 295, 352, 300, 351, 304, 348, 318,\n    342, 352, 340, 366, 337, 383, 333, 402, 332, 407, 329, 421, 326, 435, 324, 442, 323, 445, 322, 452, 322,\n    454, 322, 455, 322, 455, 321, 455, 321, 455, 321, 456, 321, 456, 321, 456, 321, 456, 321, 457, 321, 458,\n    321, 459, 319, 461, 317, 466, 317, 467, 316, 468, 316, 470, 315, 472, 314, 473, 314, 473, 313, 473, 313,\n    473, 313, 472, 312, 470, 310, 464, 304, 453, 302, 449, 297, 438, 295, 435, 294, 431, 292, 428, 288, 418,\n    287, 416, 283, 406, 283, 404, 282, 399, 281, 397, 280, 394, 277, 380, 276, 377, 276, 373, 273, 362, 273,\n    357, 272, 351, 271, 347, 271, 342, 271, 331, 271, 327, 271, 324, 271, 315, 271, 312, 271, 309, 271, 307,\n    271, 305, 271, 303, 272, 301, 272, 299, 272, 298, 272, 298, 272, 297, 272, 296, 272, 295, 272, 292, 272,\n    290, 272, 289, 272, 288, 272, 287, 273, 286, 273, 285, 273, 284, 273, 283, 273, 281, 273, 281, 273, 281,\n    273, 280, 273, 280, 273, 280, 273.1, 280.1,\n  ],\n  [\n    62, 368, 61, 369, 61, 369, 60, 370, 60, 371, 60, 372, 58, 374, 58, 376, 56, 379, 55, 381, 55, 383, 54,\n    384, 53, 390, 53, 392, 53, 393, 53, 395, 53, 397, 53, 400, 54, 401, 54, 402, 55, 402, 55, 402, 55, 402,\n    57, 403, 57, 403, 59, 404, 63, 405, 64, 405, 65, 405, 66, 406, 71, 407, 73, 407, 75, 407, 80, 407, 82,\n    407, 85, 407, 87, 407, 92, 407, 94, 407, 100, 407, 101, 407, 102, 407, 103, 406, 104, 406, 105, 405, 108,\n    403, 109, 402, 110, 401, 111, 400, 114, 398, 115, 396, 116, 395, 121, 388, 122, 386, 123, 384, 124, 381,\n    125, 379, 126, 378, 126, 376, 126, 374, 126, 373, 126, 369, 126, 368, 126, 368, 126, 367, 126, 366, 126,\n    366, 126, 365, 125, 364, 125, 363, 124, 363, 123, 363, 123, 363, 122, 363, 121, 363, 120, 363, 118, 363,\n    116, 363, 112, 363, 108, 364, 105, 364, 102, 365, 101, 365, 100, 365, 100, 365, 99, 365, 99, 365, 99, 365,\n    98, 365, 98, 365, 98, 364, 98, 364, 97, 364, 97, 364, 97, 363, 97, 363, 96, 361, 96, 361, 96, 360, 96,\n    355, 95, 353, 95, 350, 95, 349, 95, 348, 95, 343, 95, 339, 95, 334, 95, 334, 95, 330, 95, 327, 95, 325,\n    96, 323, 97, 321, 97, 321, 97, 320, 97, 319, 98, 318, 98, 317, 99, 317, 99, 316, 100, 315, 101, 315, 101,\n    314, 101, 314, 102, 313, 102, 311, 102, 311, 103, 310, 103, 310, 103, 309, 103, 308, 102, 308, 102, 308,\n    101, 307, 101, 307, 101, 307, 100, 306, 99, 305, 95, 302, 94, 301, 93, 301, 92, 300, 90, 299, 88, 297, 88,\n    297, 88, 297, 87, 296, 87, 295, 86, 294, 86, 294, 86, 293, 85, 291, 85, 290, 85, 288, 84, 286, 84, 285,\n    83, 279, 83, 277, 82, 276, 82, 273, 82, 272, 82, 270, 82, 268, 82, 266, 82, 263, 82, 259, 82, 256, 82,\n    252, 81, 243, 81, 240, 81, 232, 81, 231, 81, 230, 81, 228, 81, 223, 81, 222, 81, 220, 82, 220, 82, 216,\n    82, 214, 83, 212, 84, 211, 84, 210, 85, 208, 86, 206, 86, 205, 87, 203, 89, 201, 90, 200, 92, 197, 93,\n    196, 94, 195, 97, 192, 98, 191, 99, 190, 99, 190, 103, 188, 104, 186, 108, 184, 110, 183, 111, 182, 112,\n    181, 115, 180, 117, 179, 119, 177, 121, 177, 122, 176, 122, 176, 122, 176, 124, 176, 127, 175, 128, 175,\n    134, 174, 135, 174, 141, 174, 144, 174, 151, 174, 154, 174, 168, 174, 185, 175, 201, 178, 222, 180, 242,\n    185, 261, 189, 287, 192, 314, 194, 336, 194, 342, 194, 362, 194, 381, 194, 401, 194, 406, 194, 432, 194,\n    435, 194, 440, 193, 442, 193, 443, 193, 443, 193, 443.1, 193.1,\n  ],\n  [\n    348, 50, 348, 50, 348, 51, 347, 52, 347, 55, 345, 57, 344, 60, 341, 64, 340, 70, 336, 77, 321, 113, 317,\n    125, 307, 145, 302, 157, 286, 197, 282, 206, 267, 238, 261, 255, 258, 262, 249, 285, 246, 290, 237, 311,\n    236, 315, 233, 321, 225, 336, 222, 342, 215, 357, 212, 362, 207, 374, 204, 378, 203, 382, 201, 385, 195,\n    395, 194, 398, 191, 405, 189, 407, 188, 409, 187, 413, 185, 416, 184, 417, 184, 418, 181, 422, 181, 423,\n    180, 424, 180, 425, 180, 426, 179, 428, 178, 428, 178, 429, 178, 429, 178, 429, 178, 429, 178, 430, 177,\n    430, 177, 430, 177, 431, 176, 431, 176, 432, 176, 432, 176, 433, 175, 433, 175, 433, 175, 433, 175, 434,\n    174, 434, 174, 435, 174, 435, 173, 436, 172, 436, 172, 437, 171, 438, 170, 438, 170, 439, 170, 439, 169,\n    440, 168, 440, 168, 441, 167, 441, 167, 442, 166, 443, 165, 443, 165, 444, 165, 444, 165, 444, 165, 445,\n    164, 445, 164, 445, 164, 445, 164, 446, 164, 446, 163, 446, 163.1, 446.1,\n  ],\n  [\n    438, 422, 439, 422, 439, 422, 439, 422, 439, 422, 440, 422, 440, 422, 441, 422, 443, 422, 444, 422, 445,\n    422, 446, 422, 446, 422, 447, 421, 448, 420, 451, 416, 452, 415, 453, 412, 454, 410, 456, 408, 457, 405,\n    458, 402, 459, 396, 460, 395, 460, 393, 460, 393, 459, 391, 459, 391, 457, 388, 456, 387, 456, 387, 456,\n    386, 455, 386, 454, 385, 453, 385, 452, 385, 448, 384, 448, 384, 445, 384, 443, 384, 440, 384, 439, 384,\n    436, 385, 436, 385, 435, 385, 434, 385, 432, 387, 430, 388, 429, 389, 428, 389, 426, 391, 425, 392, 425,\n    392, 424, 392, 424, 393, 424, 393, 424, 393, 424, 394, 424, 394, 424, 395, 424, 396, 424, 398, 424, 399,\n    424, 400, 424, 401, 424, 404, 424, 408, 424, 410, 426, 414, 427, 417, 428, 419, 429, 421, 429, 422, 430,\n    423, 430, 423, 430, 423, 431, 424, 431, 424, 431, 424, 432, 425, 432, 425, 432, 425, 432, 426, 433, 427,\n    434, 427, 434, 427, 434, 428, 434.1, 428.1,\n  ],\n  [\n    108, 157, 107, 157, 107, 157, 106, 157, 106, 157, 106, 157, 105, 157, 104, 157, 103, 157, 99, 156, 97,\n    155, 95, 155, 86, 152, 77, 150, 63, 148, 43, 147, 36, 146, 24, 146, 10, 146, -0.9, 146.1,\n  ],\n  [\n    2, 145, 2, 145, 6, 145, 10, 145, 17, 145, 18, 145, 20, 144, 21, 144, 21, 143, 21, 143, 22, 143, 22, 142,\n    23, 142, 23, 142, 25, 141, 26, 140, 27, 139, 28, 139, 29, 139, 30, 138, 31, 137, 35, 134, 38, 132, 39,\n    131, 48, 127, 51, 126, 53, 125, 60, 121, 63, 120, 65, 120, 65, 119, 65, 120, 65, 120, 65, 121, 65, 123,\n    64, 127, 63, 130, 62, 134, 60, 142, 60, 145, 58, 148, 57, 153, 56, 156, 55, 158, 55, 161, 54, 162, 54,\n    163, 54, 164, 54, 165, 53, 166, 53, 168, 53, 170, 53, 171, 53, 172, 52, 172, 52, 172, 52, 173, 52, 173,\n    52, 174, 52, 174, 52, 174, 52, 174, 52, 175, 51, 175, 51, 174, 51, 174, 50, 173, 49, 171, 48, 170, 46,\n    166, 44, 162, 38, 151, 32, 140, 31, 137, 29, 132, 26, 126, 25, 123, 24, 122, 24, 122, 24, 121, 23, 120,\n    23, 120, 24, 120, 24, 120, 26, 121, 27, 121, 30, 123, 33, 125, 35, 126, 42, 131, 45, 134, 49, 136, 50,\n    136, 52, 138, 56, 141, 59, 143, 62, 146, 65, 149, 68, 152, 71, 155, 74, 158, 76, 159, 77, 160, 80, 162,\n    81, 162, 82, 163, 83, 163, 83, 163, 84, 163, 84.1, 163.1,\n  ],\n  [\n    136, 34, 139, 34, 140, 35, 142, 35, 143, 35, 146, 36, 148, 36, 151, 37, 152, 37, 153, 37, 155, 38, 157,\n    38, 159, 39, 162, 39, 163, 40, 166, 40, 168, 40, 170, 40, 179, 42, 183, 43, 184, 43, 185, 43, 187, 44,\n    188, 44, 190, 46, 193, 47, 197, 49, 198, 50, 205, 55, 206, 56, 213, 62, 218, 67, 219, 68, 224, 73, 226,\n    75, 227, 77, 236, 86, 239, 89, 246, 98, 250, 101, 259, 113, 263, 116, 265, 118, 268, 121, 276, 132, 286,\n    143, 289, 147, 291, 149, 293, 152, 294, 154, 304, 165, 306, 167, 307, 169, 316, 177, 318, 179, 319, 180,\n    321, 183, 322, 183, 327, 190, 328, 191, 330, 194, 331, 195, 335, 199, 336, 200, 337, 201, 338, 203, 339,\n    204, 340, 204, 341, 205, 346, 212, 350, 216, 351, 218, 353, 220, 358, 226, 359, 228, 364, 232, 365, 233,\n    368, 236, 368, 237, 370, 239, 374, 242, 375, 243, 377, 245, 379, 247, 386, 254, 388, 256, 392, 259, 395,\n    263, 396, 263, 397, 264, 399, 267, 400, 269, 403, 271, 412, 280, 415, 284, 418, 287, 422, 292, 425, 294,\n    426, 295, 426, 296, 426, 296, 426, 296, 427, 297, 427, 297, 427, 297, 427, 298, 427.1, 298.1,\n  ],\n  [\n    191, 254, 191, 254, 191, 254, 191, 254, 191, 255, 191, 258, 191, 260, 191, 261, 191, 263, 191, 267, 191,\n    268, 191, 276, 191, 277, 191, 278, 192, 282, 194, 287, 194, 288, 195, 291, 195, 292, 195, 292, 196, 293,\n    196, 295, 196, 296, 197, 297, 197, 298, 198, 299, 198, 300, 201, 303, 202, 305, 207, 309, 208, 309, 209,\n    311, 210, 312, 211, 312, 216, 315, 217, 315, 218, 316, 219, 316, 220, 316, 220, 316, 224, 316, 224, 316,\n    226, 317, 227, 317, 229, 317, 231, 317, 234, 317, 236, 316, 242, 315, 244, 315, 246, 315, 249, 315, 252,\n    314, 256, 313, 259, 313, 261, 313, 262, 312, 265, 312, 270, 310, 272, 309, 273, 308, 275, 307, 279, 305,\n    280, 305, 280, 304, 282, 303, 283, 302, 283, 302, 284, 301, 284, 301, 285, 300, 287, 298, 288, 297, 289,\n    295, 291, 293, 293, 291, 294, 290, 295, 289, 296, 288, 296, 287, 297, 287, 297, 287, 297, 286, 298, 285,\n    299, 283, 300, 282, 300, 281, 301, 281, 303, 278, 306, 273, 306, 272, 307, 270, 308, 267, 308, 266, 309,\n    265, 309, 264, 310, 262, 310, 261, 310, 259, 310, 257, 310, 256, 310, 254, 310, 253, 310, 247, 310, 246,\n    309, 245, 309, 244, 309, 244, 308, 243, 308, 241, 308, 240, 308, 239, 307, 239, 307, 237, 306, 237, 305,\n    235, 305, 234, 305, 234, 305, 233, 305, 233, 305, 233, 305.1, 233.1,\n  ],\n  [\n    259, 152, 258, 153, 258, 154, 257, 155, 256, 158, 254, 160, 252, 165, 251, 167, 250, 168, 250, 170, 249,\n    171, 249, 172, 248, 173, 248, 174, 248, 174, 248, 174, 248, 175, 248, 176, 248, 178, 248, 179, 248, 180,\n    248, 181, 250, 186, 251, 188, 251, 189, 253, 190, 254, 191, 254, 191, 255, 191, 256, 191, 256, 191, 256,\n    191, 257, 191, 257, 191, 257, 191, 258, 190, 259, 190, 260, 189, 260, 189, 261, 188, 261, 188, 261, 187,\n    262, 187, 262, 186, 262, 185, 263, 184, 263, 183, 264, 181, 264, 179, 265, 177, 265, 177, 265, 177, 266,\n    176, 266, 175, 266, 175, 266, 172, 266, 171, 266, 169, 266, 168, 266, 167, 265, 166, 264, 164, 264, 163,\n    263, 161, 263, 160, 262, 160, 262, 159, 262, 159, 261, 158, 260, 157, 259, 156, 258, 155, 257, 154, 256,\n    154, 255, 153, 254, 153, 254, 153, 254, 153, 253, 153, 253, 153, 253.1, 153.1,\n  ],\n  [\n    182, 208, 182, 208, 182, 209, 182, 210, 182, 211, 182, 212, 182, 215, 181, 217, 181, 219, 181, 221, 181,\n    222, 181, 222, 181, 223, 181, 224, 181, 224, 181, 224, 182, 225, 182, 226, 182, 226, 183, 227, 184, 228,\n    184, 229, 185, 229, 185, 229, 188, 230, 190, 231, 192, 232, 193, 232, 193, 232, 193, 232, 194, 231, 194,\n    231, 194, 230, 194, 229, 194, 227, 195, 224, 195, 223, 195, 220, 195, 218, 195, 217, 195, 215, 195, 214,\n    195, 211, 195, 211, 195, 210, 195, 210, 195, 210, 194, 209, 193, 208, 192, 207, 191, 206, 190, 205, 190,\n    205, 190, 205, 188, 204, 188, 204, 188, 203, 187, 203, 187.1, 203.1,\n  ],\n  [\n    251, 236, 250, 236, 249, 236, 248, 235, 247, 235, 247, 235, 246, 235, 246, 235, 245, 234, 245, 234, 245,\n    234, 244, 233, 244, 233, 244, 233, 243, 232, 242, 231, 241, 229, 240, 229, 239, 228, 239, 227, 238, 227,\n    238, 226, 238, 226, 238, 226, 238, 226, 238, 226, 237, 228, 237, 229, 237, 230, 237, 230, 237, 231, 237,\n    233, 237, 234, 236, 236, 236, 238, 236, 240, 236, 242, 235, 242, 235, 242, 235, 243, 236, 243, 236, 243,\n    236, 243, 237, 243, 238, 243, 238, 243, 239, 242, 239, 242, 240, 242, 241, 242, 241, 241, 242, 241, 242,\n    241, 243, 241, 243, 240, 243, 240, 243, 240, 244, 240, 244, 240, 244, 239, 244, 239, 245, 239, 245, 239,\n    245, 239, 245, 238, 245, 238, 246, 237, 247, 237, 247, 237, 247, 237, 247, 237, 247, 236, 248, 236, 248,\n    236, 248, 236, 249, 236, 249.1, 236.1,\n  ],\n];\n\nexport const mockDrawing = () => {\n  return sampleSize(mockedDrawings, getRandomItem([2, 3, 3, 4, 5]));\n};\n"],"names":["arteRuimTimer","require","ArteRuimTimerSound","useGlobalState","volume","useAudio","src","autoPlay","loop","audio","controls","useEffect","airHorn","DJPruPruPruSound","CanvasResizer","canvasSize","setCanvasSize","type","position","icon","DragOutlined","label","labelText","content","className","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","style","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","direction","align","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","CharacterCard","size","overlayColor","character","hideName","dualTranslate","useLanguage","shouldBeBlurred","useBlurCards","baseUrl","useTDBaseUrl","isBlurred","imageURL","replace","cardId","name","PUBLIC_URL","alt","fallback","preview","title","CrimeItemCard","item","cardWidth","activeColor","isSelected","isDebugEnabled","useDevFeatures","borderColor","backgroundColor","toUpperCase","color","maxWidth","GroupQuestionCard","question","overrideNumber","prefix","number","suffix","MonsterCard","currentMonster","props","monsterOrientation","setMonsterOrientation","defaultCardWidth","useCardWidth","gap","useEffectOnce","orientation","baseClass","RotateRightOutlined","RotateLeftOutlined","MovieCard","movie","disableSuffix","disablePrefix","prefixColor","suffixColor","Highlighter","HighlighterImport","MovieReviewCard","text","highlights","highlightClassName","searchWords","autoEscape","textToHighlight","SuspectCard","suspect","Card","children","header","footer","randomColor","headerClassName","footerClassName","hideHeader","bgColor","getColorFromLetter","startsWith","BookPages","leftPage","rightPage","DoorFrame","xmlnsXlink","Boolean","x1","x2","y1","y2","gradientUnits","offset","stopColor","xlinkHref","isolation","mixBlendMode","opacity","SceneTile","tile","onSelectValue","language","description","values","entry","isActive","isInative","undefined","CheckCircleFilled","tileId","SuggestionEasel","onChangeInput","onPressEnter","translate","placeholder","bordered","autoComplete","readOnly","unknownText","Achievements","players","achievements","reference","getAnimationClass","level","achievement","achievementObj","player","playerId","delay","avatarId","shape","Container","contained","titleProps","childrenContainerProps","spaceProps","restTitleProps","childrenClassName","wrap","childrenDirection","restChildrenContainerProps","ImageBlurButton","ghost","blurCard","isBlurEnabled","placement","EyeOutlined","EyeInvisibleOutlined","ImageBlurButtonContainer","rest","ImageCard","previewImageId","fileExtension","square","fallbackName","previewConfig","maskClassName","ImageCardBack","ImageCardButton","buttonPosition","over","buttonText","buttonProps","isTop","iconComponent","DownCircleOutlined","UpCircleOutlined","buttonClassName","restButtonProps","button","ImageCardHand","hand","onSelectCard","selectButtonText","selectButtonIcon","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","selectedCards","cardClassName","imageGroupPreview","useCardWidthByContainerRef","minWidth","containerRef","ref","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","custom","CardHighlight","iconSize","MetricHighlight","iconPlacement","PlayersHighlight","PointsHighlight","TimeHighlight","GainedPoint","gainedPoint","order","isPositive","isNegative","GainedPoints","gainedPoints","gainedPointsDescriptions","Array","isArray","RankingBoard","ranking","hideGainedPoints","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useMeasure","maxPoints","useMemo","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","rankByPreviousScore","tempSortedRanking","newEntry","previousScore","CrownFilled","hPosition","top","StepRankingWrapper","subtitle","white","useTemporarilyHidePlayersBar","CaretUpOutlined","SpeechBubble","shadow","submitAction","httpsCallable","functions","useColorizeBackground","user","currentRound","team","appElement","getElementById","classList","add","remove","getMovieTitles","movies","A","B","C","D","TrackIcon","track","IconComponent","PictureIcon","AlienCommunicationIcon","FairyTaleIcon","CrimeSceneIcon","CrossWordsIcon","DetectiveIcon","SkiingIcon","PassportIcon","QueueIcon","DreamIcon","PathIcon","ChoiceIcon","DirectionsIcon","AnonymousIcon","SheepIcon","LoveIcon","TrickOrTreatIcon","WavelengthDeviceIcon","ColorWheelIcon","TrendingIcon","MagicDoorIcon","RevolverIcon","MirrorIcon","MonsterIcon","BoxingGlovesIcon","CriminalIcon","ReviewIcon","GuessIcon","MovieTheaterIcon","game","TDIcon","TITLES","INSTRUCTIONS","TrackInstructions","instruction","ClubLine","playersList","sortPlayers","winners","filter","losers","ClubberAvatar","clubberId","animate","VIPLineIcon","FallbackComponent","_","UnderConstructionIcon","mockSeeding","seeds","data","forEach","seed","card","stringify","mockDrawing","prompt","getRandomItem","prompts","ids","cards","tree","answers","mockClue","wave","likeTweet","singleClue","partyAnswers","outfits","mockSelection","options","propertyName","random","MinigameTitle","TrackArteRuim","onSubmitAnswer","isLoading","useLoading","onSelect","useMock","variant","option","ready","LETTERS","getColorFromIndex","loading","TrackLabirintoSecreto","String","trees","IconAvatar","TreeOneIcon","TreeTwoIcon","TreeThreeIcon","MapIcon","Object","arr","Fragment","RightSquareOutlined","TrackContadoresHistorias","margin","TrackCrimesHediondos","KnifeIcon","LoupeIcon","scenes","causeOfDeath","crimeIndexes","reasonForEvidence","location","sceneA","sceneB","sceneC","SpreadsheetGrid","columns","rows","topLeftCorner","gridTemplateColumns","gridTemplateRows","role","SpreadsheetCell","TrackCruzaPalavras","clue","CellPlusButton","PlusCircleFilled","TrackDetetivesImaginativos","table","bot","BOTS_LIST","AVATARS","TrackDilemaDosEsquiadores","dilemma","left","right","mouseX","setMouseX","setDirection","clientX","screenWidth","innerWidth","SnowHillIcon","TrackEspiaoEntreNos","answer","setAnswer","onSubmit","roles","roleIndex","TrackFileiraDeFatos","scenarios","EmojiCard","TrackGaleriaDeSonhos","theme","TrackMenteColetiva","Candidate","head","body","interest","need","funFact","TrackNamoroOuAmizade","heads","bodies","interests","needs","funFacts","TrackNaRuaDoMedo","h","StreetIcon","house","HouseCard","candyLeftover","TrackOndaTelepatica","setPosition","cardSideClass","getColorModifier","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","TrackPalhetaDeCores","palette","read","SplatterSVG","SocialProfile","handle","verified","Tweet","onLike","onDislike","block","LikeFilled","DislikeFilled","TrackPolemicaDaVez","TrackPortaDosDesesperados","doorWidth","doors","Book","book","TrackQuemNaoMata","keys","ShooterIcon","TrackRetratoFalado","TrackSuperCampeonato","contenders","challenge","contender","TrackTestemunhaOcular","suspects","SpeechBubbleAcceptedIcon","SpeechBubbleDeclinedIcon","TrackUeSoIsso","onSubmitClue","TrackVamosAoCinema","reviews","good","bad","background","TrackMegamixBestOfThree","TrackMegamixThisThat","TrackComunicacaoAlienigena","items","AlienIcon","attributes","attribute","SignCard","signs","itemId","ItemCard","TrackQuemSouEu","botPlayer","selectedGlyphs","positive","glyph","negative","updatedAt","PlayerGlyphs","glyphWidth","TrackTaNaCara","TrackMegamixWhoSaidThis","withName","StepTrack","announcement","TrackComponent","fullWidth","TrackTitle","DJInstructions","total","PhaseTrack","state","info","useUser","useStep","setStep","goToNextStep","request","useAPICall","apiFunction","actionName","onSuccess","successMessage","errorMessage","payload","action","useOnSubmitTrackAnswerAPIRequest","verticalAlign","phase","allowedPhase","PHASES","DJIcon","DJAnnouncementTitle","onClose","unskippable","SeedArteRuim","updateData","isTimesUp","setTimesUp","start","isRunning","PanicIcon","padding","NOOP","SeedLabirintoSecreto","BikiniModelIcon","HeartOutlined","MessageOutlined","SendOutlined","toLowerCase","capitalize","SeedClubber","onSubmitData","clubbers","cId","SeedOndaTelepatica","setValue","SeedPolemicaDaVez","SeedRetratoFalado","SVGPhone","now","moment","format","SeedUeSoIsso","SeedMenteColetiva","value1","setValue1","value2","setValue2","MessageFilled","HeartFilled","FlagFilled","SixPackIcon","SeedContadoresHistorias","SeedParty","setAnswers","htmlFor","event","key","v","StepSeeding","currentStep","setData","objValue","next","buildSeedingSteps","currentSeed","DevMock","PhaseSeeding","useOnSubmitSeedAPIRequest","SmsIcon","WinningCount","ResultArteRuim","winningValues","containerWidth","winningArtworks","includes","winningCards","ResultCruzaPalavras","cheatSheet","ResultNamoroOuAmizade","winningTeam","findIndex","ResultNaRuaDoMedo","Number","ResultRetratoFalado","ResultVamosAoCinema","ResultMegamix","ResultImage","ResultText","ResultCharacter","ResultOndaTelepatica","ResultComunicacaoAlienigena","ResultTaNaCara","ResultLabirintoSecreto","ResultPalhetaDeCores","ResultQuemNaoMata","ResultWhoSaidThis","ResultValueDelegator","ResultComponent","SpacePlayerCheckWrapper","every","has","VoteArteRuim","find","VoteCruzaPalavras","VoteNamoroOuAmizade","VoteNaRuaDoMedo","VoteRetratoFalado","VoteVamosAoCinema","VoteMegamix","VoteImagesTrack","VoteValue","VoteOndaTelepatica","VoteCharacterTrack","VotePalhetaDeCores","VoteQuemNaoMata","VoteComunicacaoAlienigena","VoteTaNaCara","VoteLabirintoSecreto","VoteWhoSaidThis","VotesDelegator","VotesComponent","StepResult","onSeeRanking","isFirstRunThrough","scoringType","resultRef","time","currentIndex","timeLeft","winningCount","losingCount","resultsValueWidth","GarbageIcon","isWinningArea","getPosition","TrophyOutlined","memoize","side","areaSize","buffer","startAt","increment","ratio","multiplier","floor","getTopValue","StepRanking","goToPreviousStep","innerContent","actions","BouncerIcon","PhaseResult","setIsFirstRunThrough","PhaseGameOver","announcementIcon","CrownIcon","isEqual","fairWinners","winner","achievementsReference","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","CandyCount","candyCount","active","speed","infinite","letter","abs","getBracketClass","num","showNeedle","needle","showTarget","baseBracketClass","modifier","getGuessResultClass","guess","base","getPoints","countDifferentGuesses","regularPlayers","dict","done","parseSelectedGlyphs","prepareGlyphs","glyphs","getRibbons","votes","votesDict","playerEntry","split","SEPARATOR","characterId","prepareGuesses","result","ImageCardsIcon","StarIcon","lowClues","clues","highClues","variety","bank","low","default","high","mockedDrawings","sampleSize"],"sourceRoot":""}