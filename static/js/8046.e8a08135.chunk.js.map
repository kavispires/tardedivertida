{"version":3,"file":"static/js/8046.e8a08135.chunk.js","mappings":"8PA4BO,SAASA,EAAT,GAA+D,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAAaC,GAAuB,YAC3DC,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,EAvBS,SAACL,GAChB,IAAMK,EAAuB,GAY7B,OAVAL,EAAKM,SAAQ,SAACC,GAAS,IAAD,OACWC,KAAnB,OAARC,EAAAA,SAAQ,IAARA,EAAAA,IAAA,UAAAA,EAAAA,GAAWF,UAAX,eAAiBG,OACnBL,EAAWI,EAAAA,GAASF,GAAKG,OAASH,EACzBF,EAAWM,OAAS,GAC7BN,EAAW,IAAME,EAEjBF,EAAWO,KAAKL,EAEnB,IAEMF,EAAWQ,QAAO,SAACC,GAAD,OAAOC,QAAQD,EAAf,GAC1B,CASoBE,CAAShB,GAE5B,OACE,SAAC,KAAD,gBAAOiB,MAAI,GAAKf,GAAhB,aACGG,EAAWa,KAAI,SAACX,GAAD,eACd,SAAC,IAAD,CAAgCY,MAAK,UAAEV,EAAAA,GAASF,UAAX,aAAE,EAAeY,MAAtD,mBACGV,EAAAA,GAASF,UADZ,aACG,EAAea,MAAMjB,IADxB,UAAaF,EAAb,YAAyBM,GADX,MAOrB,C,wMCxBM,SAASc,EAAT,GAAkF,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,MAC1C,OACE,SAAC,KAAD,CAAaC,WAAS,EAAtB,UACE,SAAC,IAAD,CAAUC,OAAK,EAAf,UACE,SAAC,UAAD,CAAgBC,QAAQ,SAAC,KAAD,CAAWC,GAAG,SAASC,GAAG,QAAQC,OAAQN,IAAlE,SACGD,GAD8E,QAMxF,C,0BCLM,SAASQ,EAAT,GAA4F,IAArEC,EAAoE,EAApEA,QAASX,EAA2D,EAA3DA,MAA2D,IAApDY,UAAAA,OAAoD,SAChG,OACE,SAAC,KAAD,CACEC,KAAK,UACLC,SAAU,EACVC,MAAM,SAACC,EAAA,EAAD,IACNL,QAASA,EACTX,MAAOA,IAAS,SAAC,KAAD,CAAWO,GAAG,UAAUC,GAAG,WAC3CI,UAAWA,EACXK,YAAa,CACXJ,KAAM,YAIb,C,sICPM,SAASK,EAAT,GAK8B,IAJnCC,EAIkC,EAJlCA,KAIkC,IAHlCC,UAAAA,OAGkC,MAHtB,GAGsB,MAFlCC,cAAAA,OAEkC,MAFlB,GAEkB,EADlCC,EACkC,EADlCA,iBAEQvC,GAAaC,EAAAA,EAAAA,KAAbD,SACFwC,GAAMC,EAAAA,EAAAA,aAUZ,OARAC,EAAAA,EAAAA,GAAiB,aAAa,WAAO,IAAD,EAClC,UAAAF,EAAIG,eAAJ,SAAaC,MACd,KAEDF,EAAAA,EAAAA,GAAiB,cAAc,WAAO,IAAD,EACnC,UAAAF,EAAIG,eAAJ,SAAaE,MACd,KAGC,4BACE,SAAC,IAAD,CAAUR,WAAWS,EAAAA,EAAAA,GAAK,iBAAkBT,GAAYU,UAAQ,EAACC,cAAe,KAAOR,IAAKA,EAA5F,SACGJ,EAAKa,MAAMjD,GAAUe,KAAI,SAACmC,EAAM3C,GAAP,OACxB,iBAAK8B,WAAWS,EAAAA,EAAAA,GAAK,uBAAwBT,GAA7C,WACE,iBAAMA,UAAU,8BAAhB,SAA+C9B,EAAQ,KAEvD,SAAC,IAAD,CACE8B,UAAU,wBACVc,IACY,IAAV5C,EAAA,UACO6C,EAAAA,GAAAA,SADP,OAC4BhB,EAAKiB,SADjC,YAC6CrD,EAD7C,kBAEOoD,EAAAA,GAAAA,MAFP,qBAEoChB,EAAKiB,SAFzC,YAEqD9C,EAFrD,QAIF+C,SAAQ,UAAKF,EAAAA,GAAAA,MAAL,2BACRG,IAAKL,KAEP,SAAC,cAAD,CAAsBb,WAAWS,EAAAA,EAAAA,GAAK,4BAA6BR,GAAnE,SACGY,MAdyDA,EADtC,OAoB5B,UAAC,IAAD,CAAOb,WAAWS,EAAAA,EAAAA,GAAK,kBAAmBP,GAA1C,WACE,UAAC,KAAD,CAAQT,KAAK,UAAUR,OAAK,EAACkC,QAAS,kCAAMhB,EAAIG,eAAV,aAAM,EAAaC,MAAnB,EAA2Ba,KAAK,QAAtE,WACE,SAACC,EAAA,EAAD,IADF,KACyB,SAAC,KAAD,CAAWlC,GAAG,iBAAiBC,GAAG,sBAE3D,UAAC,KAAD,CAAQK,KAAK,UAAUR,OAAK,EAACkC,QAAS,kCAAMhB,EAAIG,eAAV,aAAM,EAAaE,MAAnB,EAA2BY,KAAK,QAAtE,WACE,SAAC,KAAD,CAAWjC,GAAG,mBAAgBC,GAAG,cADnC,KACkD,SAACkC,EAAA,EAAD,YAKzD,CCjEM,SAASC,EAAT,GAA+E,IAA1DzC,EAAyD,EAAzDA,SAAyD,IAA/CkB,UAAAA,OAA+C,MAAnC,GAAmC,EACnF,OAAO,eAAIA,WAAWS,EAAAA,EAAAA,GAAK,aAAcT,GAAlC,SAA+ClB,GACvD,C,qCCDM,SAAS0C,EAAT,GAA8E,IAAxDC,EAAuD,EAAvDA,SAAU5B,EAA6C,EAA7CA,YACrC,GAAgCjC,EAAAA,EAAAA,KAAxBD,EAAR,EAAQA,SAAU+D,EAAlB,EAAkBA,UAClB,GAAmCC,EAAAA,EAAAA,WAAS,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAe,WACnBD,GAAc,EACf,EAED,OACE,iCACE,SAAC,MAAD,gBAAQpC,KAAK,UAAU0B,QAAS,kBAAMU,GAAc,EAApB,EAA2BlC,MAAM,SAACC,EAAA,EAAD,KAAsBC,GAAvF,cACE,SAAC,KAAD,CAAWV,GAAG,SAASC,GAAG,aAE3BwC,IACC,SAAC,IAAD,CACE7C,MAAK,UAAK2C,EAAU,SAAU,SAAzB,aAAsCD,EAAS1C,MAAMpB,IAC1DoE,KAAMH,EACNI,SAAUF,EACV9B,UAAU,cACViC,OAAQ,EACN,SAAC,KAAD,CAAoBd,QAASW,EAA7B,UACE,SAAC,KAAD,CAAW3C,GAAG,SAASC,GAAG,WADhB,UANhB,UAWE,gBAAKY,UAAU,sBAAf,UACE,SAACF,EAAD,CAAeC,KAAM0B,UAMhC,C,sKCdYS,EAAc,SAAC,GAA6E,IAA3EpD,EAA0E,EAA1EA,SAAUqD,EAAgE,EAAhEA,MAAOnC,EAAyD,EAAzDA,UAAWhB,EAA8C,EAA9CA,UAAWoD,EAAmC,EAAnCA,UAC7DC,EAAY,cAElB,OACE,SAAC,SAAD,CACErC,WAAWS,EAAAA,EAAAA,GACT4B,EACArD,GAAS,UAAOqD,EAAP,eACTF,GAAK,UAAOE,EAAP,WACLD,GAAS,UAAOC,EAAP,gBACTrC,GAEF,cAAY,cARd,SAUGlB,GAGN,E,sBCnCM,SAASwD,EAAT,GAAuE,IAAD,IAArCC,EAAqC,EAArCA,MAChCC,GAAO,iBAACD,QAAD,IAACA,OAAD,EAACA,EAAOE,aAAR,QAAiB,IAAjB,iBAAuBF,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOjC,eAA9B,QAAyC,GAEtD,OAAa,IAATkC,GAAcD,EAAMG,gBAEpB,SAAC,EAAD,CAAa1D,WAAS,EAAtB,UACE,SAAC,KAAD,CAAWG,GAAG,8BAA2BC,GAAG,2BAMhD,SAAC,EAAD,CAAaJ,WAAS,EAAtB,UACE,SAAC,KAAD,CACEG,IACE,iCACGwD,EAAAA,EAAAA,IAAUH,EAAM,QAAS,UAD5B,KACuC,4BAASA,IADhD,KACgEG,EAAAA,EAAAA,IAAUH,EAAM,UADhF,8BAKFpD,IACE,iCACE,4BAASoD,IADX,KAC2BG,EAAAA,EAAAA,IAAUH,EAAM,SAD3C,qCAOT,CChCM,SAASI,EAAT,GAA0D,IAAjC9D,EAAgC,EAAhCA,SAC9B,OAAO,iBAAMkB,UAAU,iBAAhB,SAAkClB,GAC1C,CCyBM,IAAM+D,EAAQ,SAAC,GAQH,IAPjB/D,EAOgB,EAPhBA,SACAqD,EAMgB,EANhBA,MACAxC,EAKgB,EALhBA,KACAK,EAIgB,EAJhBA,UAIgB,IAHhB8C,MAAAA,OAGgB,MAHR,EAGQ,MAFhB1B,KAAAA,OAEgB,MAFT,SAES,MADhB2B,MAAAA,OACgB,MADR,SACQ,EAChB,OACE,UAAC,UAAD,CACED,MAAOA,EACP9C,WAAWS,EAAAA,EAAAA,GAAK,QAAD,iBAAoBW,GAApB,uBAA4C2B,GAASZ,GAAS,eAAgBnC,GAF/F,UAIGzB,QAAQoB,IAASA,EACjBb,IAGN,C,8aCpCKkE,EAAwB,SAACC,EAA4BC,GACzD,IAAMC,EAAMC,KAAKD,MACXE,EAAcF,EAAM,MACpBG,EAAeC,OAAOC,QAAP,OAAeP,QAAf,IAAeA,EAAAA,EAAiB,CAAC,GAAGQ,QAAO,SAACC,EAAD,GAAyC,IAAD,eAApBC,EAAoB,KAAfC,EAAe,KAItG,OAHIA,EAAYP,IACdK,EAAIC,GAAOC,GAENF,CACR,GAAE,CAAC,GACJ,OAAO,UACJG,EAAAA,IADH,kBAEOP,GAFP,cAGKJ,EAAQC,IAGd,EAMM,SAASW,EAAT,GAA2E,IAAhDrC,EAA+C,EAA/CA,SAC1BsC,GAAWC,EAAAA,EAAAA,MACTC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAiCE,EAAAA,EAAAA,KAAjC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAAgCzG,EAAAA,EAAAA,KAAxBD,EAAR,EAAQA,SAAU+D,EAAlB,EAAkBA,UACV4C,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAA2CE,EAAAA,EAAAA,KAA3C,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAmC/C,EAAAA,EAAAA,WAAS,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOgD,EAAP,KAAkBC,EAAlB,KACA,GAA4BjD,EAAAA,EAAAA,UAAS,MAArC,eAAOkD,GAAP,KAAeC,GAAf,KACA,IAAsBC,EAAAA,EAAAA,IAAe,UAA5BC,IAAT,gBACA,IAAwBD,EAAAA,EAAAA,IAAe,YAA9BE,IAAT,gBACA,IAA4BF,EAAAA,EAAAA,IAAe,gBAAlCG,IAAT,gBACA,IAA8BvD,EAAAA,EAAAA,UAAS,CAAC,GAAxC,iBAAOwD,GAAP,MAAgBC,GAAhB,OAEAC,EAAAA,EAAAA,YAAU,WACJjB,EAAMkB,OAAST,IACjBU,EAAAA,GAAAA,KAAA,+BAAqCnB,EAAMkB,OAE9C,GAAE,CAAClB,EAAOS,KAEX,IAAM/C,IAAe0D,EAAAA,EAAAA,cAAY,WAC/B3D,GAAc,EACf,GAAE,IASG4D,GAAU,mCAAG,sGAEfnB,EAAU,UAAU,GACpBM,GAAW,GAHI,SAIqBc,EAAAA,GAAAA,WAAqB,CACvD1E,SAAUS,EAAST,SACnBrD,SAAAA,EACAwH,QAAAA,KAPa,QAITQ,EAJS,QASFC,KAAKf,SAChBC,GAAUa,EAASC,KAAKf,QACxBG,GAAU,MACVC,GAAY,IACZC,GAAgB,IAChBR,EAAgB1B,EAAsByB,EAAgBZ,EAAAA,IAAkB8B,EAASC,KAAKf,SAChFgB,EAAUC,OAAOC,SAASC,KAAKC,MAAMhC,GAAU,GACrDI,EAAgB,GAAD,OAAIwB,EAAJ,YAAeF,EAASC,KAAKf,UAhB/B,gDAmBfqB,EAAAA,EAAAA,MAAmB,CACjBX,QAAS7D,EACP,sDACA,+DACA/D,GAEFwI,YAAaC,KAAKC,UAAU,KAAEd,SAC9Be,UAAW,eAEbC,QAAQC,MAAR,MACA3E,GAAc,GA7BC,yBA+Bf+C,GAAW,GACXN,EAAU,UAAU,GAhCL,4EAAH,qDA8ChB,OACE,iCACE,SAAC,KAAD,CAAQ7E,KAAK,UAAU0B,QAAS,kBAAMU,GAAc,EAApB,EAA2B4E,OAAK,EAAhE,UACE,SAAC,KAAD,CAAWtH,GAAG,QAAQC,GAAG,aAE1BwC,IACC,SAAC,IAAD,CACE7C,MAAK,UAAK2C,EAAU,oBAAqB,qBAApC,aAA6DD,EAAS1C,MAAMpB,IACjFoE,KAAMH,EACNI,SAAUF,GACV4E,KApBc,WAChB7B,GACFd,EAAS,IAAD,OAAKc,KAEbU,EAAAA,GAAAA,KACE7D,EAAU,iDAA4C,uCAG3D,EAaOiF,cAAe,CAAEC,SAAUrI,SAASsG,KACpCgC,cAAc,EANhB,UAQE,iCACE,SAAC,IAAD,CACE3F,IAAKO,EAAS1C,MAAMpB,GACpBmD,IAAG,UAAKC,EAAAA,GAAAA,SAAL,OAA0BU,EAAST,SAAnC,YAA+CrD,EAA/C,QACHsD,SAAQ,UAAKF,EAAAA,GAAAA,QAAL,qBAAoCpD,EAApC,QACRqC,UAAU,mBAGZ,SAAC8G,EAAD,CACE3B,QAAS1D,EAAS0D,QAClByB,SAAUjC,GAAapG,QAAQsG,IAC/BkC,gBA9EY,SAACpD,EAAa2B,GACpCF,IAAW,SAAC4B,GAAD,eAAC,UACPA,GADM,cAERrD,EAAM2B,GAFE,GAIZ,EA0EW2B,gBAAiB9B,MAGnB,SAAC,IAAD,IAECR,IACC,iCACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAWxF,GAAG,iCAA8BC,GAAG,yCAEjD,SAAC,KAAD,CAASmG,QAAS7D,EAAU,aAAc,iBAAkBwF,QAAM,OAIrEzF,EAAS0F,QAAQC,WAAW,WAC3B,SAAC,IAAD,CACE3H,KAAK,UACL4H,UAAQ,EACR9B,SACE,SAAC,KAAD,CACEpG,GAAG,6CACHC,GAAG,0DAMVqC,EAAS0F,QAAQC,WAAW,UAC3B,SAAC,IAAD,CACE3H,KAAK,UACL4H,UAAQ,EACR9B,SACE,SAAC,KAAD,CACEpG,GAAG,kDACHC,GAAG,wDAMVb,QAAQsG,KACP,4BACE,UAAC,KAAD,CAAO7E,UAAU,SAAjB,WACE,SAAC,KAAD,CAAWb,GAAG,oBAAoBC,GAAG,qBADvC,KAC+DyF,OAE/D,SAAC,KAAD,WACE,SAAC,KAAD,CACE1F,GAAG,8DACHC,GAAG,qDAKT,SAAC,IAAD,CAAOY,UAAU,kBAAkB+C,MAAM,SAAzC,UACE,SAAC,KAAD,CAAQtD,KAAK,UAAU2B,KAAK,QAAQwF,SAAUjC,EAAWxD,QAASsE,GAAlE,UACE,SAAC,KAAD,CAAWtG,GAAG,aAAaC,GAAG,2BAS/C,CAQD,SAAS0H,EAAT,GAA8F,IAAD,IAA1E3B,QAAAA,OAA0E,MAAhE,GAAgE,EAA5DyB,EAA4D,EAA5DA,SAAUG,EAAkD,EAAlDA,gBAAiBE,EAAiC,EAAjCA,gBAC1D,OAAO1I,QAAQ4G,IACb,iBAAKnF,UAAU,4BAAf,WACE,SAAC,UAAD,CAAkB8C,MAAO,EAAG9C,UAAU,mCAAtC,UACE,SAAC,KAAD,CAAWb,GAAG,gBAAUC,GAAG,gBAE5B,OAAC+F,QAAD,IAACA,EAAAA,EAAW,IAAIzG,KAAI,SAAC4I,GAAD,eACnB,UAAC,cAAD,CAAqDtH,UAAU,oCAA/D,WACE,iBAAMA,UAAU,mCAAhB,SAAoDsH,EAAO1I,SAC3D,iBACEoB,WAAWS,EAAAA,EAAAA,GACT,kCACCwG,EAAgBK,EAAO3D,MAAQ,uCAHpC,0BAMG2D,QANH,IAMGA,OANH,EAMGA,EAAQC,WANX,QAMkB,MAElB,SAAC,IAAD,CAAQX,SAAUA,EAAUY,SAAU,SAACC,GAAD,OAAOV,EAAgBO,EAAO3D,IAAK8D,EAAnC,KACtC,iBACEzH,WAAWS,EAAAA,EAAAA,GACT,gCACAwG,EAAgBK,EAAO3D,MAAQ,uCAHnC,0BAMG2D,QANH,IAMGA,OANH,EAMGA,EAAQI,UANX,QAMiB,KAEhBnJ,QAAQ+I,EAAOnB,eACd,iBAAMnG,UAAU,gDAAhB,SAAiEsH,EAAOnB,gBApB5E,iBAAqCmB,EAAO1I,OADzB,QA2BvB,gBAAKoB,UAAU,kEAAf,UACE,SAAC,SAAD,WACE,SAAC,KAAD,CAAWb,GAAG,8CAAqCC,GAAG,iDAI7D,C,0BCpPKuI,EAAkB,SAACR,GACvB,GAAIA,EAAQS,SAAS,OACnB,MAAO,UAGT,GAAIT,EAAQS,SAAS,SACnB,MAAO,UAGT,GAAIT,EAAQS,SAAS,QACnB,MAAO,UAGT,IAAMC,EAAQC,OAAOX,EAAQlB,MAAM,KAAK,IAExC,OAAI8B,MAAMF,GACD,UAGK,IAAVA,EACK,UAGK,IAAVA,EACK,UAGK,IAAVA,GAIAA,GAAS,EAHJ,UAOF,SACR,EAOM,SAASG,EAAT,GAA4D,IAAD,IAAvCC,EAAuC,EAAvCA,KAAuC,IAAjCC,QAAAA,OAAiC,SAChE,GAAgCtK,EAAAA,EAAAA,KAAxBD,EAAR,EAAQA,SAAU+D,EAAlB,EAAkBA,UAEZyG,GAAWC,EAAAA,EAAAA,IAA6BH,GAE9C,OACE,UAAC,IAAD,CAEEjI,UAAU,YACVqI,OACE,SAAC,WAAD,CAAcC,KAAML,EAAKd,QAASxI,MAAOgJ,EAAgBM,EAAKd,SAA9D,UACE,SAAC,IAAD,CACEjG,IAAK+G,EAAKlJ,MAAMpB,GAChBmD,IAAG,UAAKC,EAAAA,GAAAA,SAAL,OAA0BkH,EAAKjH,SAA/B,YAA2CrD,EAA3C,QACHsD,SAAQ,UAAKF,EAAAA,GAAAA,QAAL,qBAAoCpD,EAApC,YARhB,WAaE,gBAAKqC,UAAU,sBAAf,UACE,UAAC,IAAD,CAAOuI,UAAU,WAAjB,WACE,SAAC,SAAD,CACExJ,OACE,kBAAMiB,UAAU,mBAAmBjB,MAAOkJ,EAAKlJ,MAAMpB,GAArD,UACG6K,EAAAA,IAAQ,WAAQP,EAAKxK,SAAb,KADX,IACsCwK,EAAKlJ,MAAMpB,MAGnDwI,YAAW,UAAKzE,EAAU,aAAc,YAA7B,YAA4CuG,EAAKQ,QACzDxC,MAAM,IACNyC,UACAC,KAAK,QAGV,SAAC,SAAD,CAAW3I,UAAU,yBAAyBmG,YAAa8B,EAAKW,QAAQjL,KAEvEY,SAAQ,UAAA0J,EAAKrH,aAAL,mBAAajD,UAAb,eAAwBQ,QAAS,KACxC,SAAC,KAAD,CACEsD,SAAUwG,EACVpI,YAAa,CAAEuB,KAAM,QAASpB,UAAW,+BAI7C,SAACzC,EAAA,EAAD,CACEkB,MAAI,EACJ2C,KAAM,CAAC,EAAG,GACVyH,MAAO,CAAEC,QAAS,QAClBrL,SAAUwK,EAAKxK,SACfD,KAAMyK,EAAKzK,aAKjB,iBAAKwC,UAAU,qBAAf,UACGiI,EAAKE,WACJ,SAAC,SAAD,CACEhC,aACE,iCACE,SAAC4C,EAAA,EAAD,IADF,IAC2BZ,EAASa,IADpC,UACgDb,EAASc,IADzD,cACyEd,EAASe,MADlF,cAON,SAAC,IAAD,CAASlJ,UAAU,wBAEnB,UAAC,IAAD,CAAOuI,UAAU,WAAjB,WACE,SAAC,SAAD,CACEpC,YAAazE,EAAU,QAAD,OACZuG,EAAKkB,YAAYH,IADL,YACYf,EAAKkB,YAAYF,IAD7B,4BAEbhB,EAAKkB,YAAYH,IAFJ,YAEWf,EAAKkB,YAAYF,IAF5B,gBAMxB,SAAC,SAAD,CACEjJ,UAAU,0BACVmG,YAAazE,EAAU,cAAD,OACNuG,EAAKkB,YAAYC,MAAQ,IADnB,iCAERnB,EAAKkB,YAAYC,MAAQ,IAFjB,gBAMxB,SAAC,SAAD,CACEpJ,UAAU,mDACVmG,YAAazE,EAAU,yBAAD,QACK2H,EAAAA,EAAAA,IAAoBpB,EAAKkB,YAAYG,cAD1C,4BAEAD,EAAAA,EAAAA,IAAoBpB,EAAKkB,YAAYG,oBAK9DpB,IACC,gBAAKW,MAAO,CAAEU,UAAW,QAAzB,SACGhL,QAAQ0J,EAAKuB,UAAU7L,MAAc,SAACmG,EAAD,CAAiBrC,SAAUwG,WArFlEA,EAAKjH,SA2Ff,C","sources":["components/general/GameTags.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","pages/Hub/components/CreateGameModal.tsx","pages/Hub/components/GameCard.tsx"],"sourcesContent":["// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Collapse } from 'antd';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: ReactNode;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={<Translate pt=\"Regras\" en=\"Rules\" custom={title} />} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { FixedMenuButton } from 'components/buttons';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps): JSX.Element {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n      buttonProps={{\n        type: 'primary',\n      }}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button, Space } from 'antd';\nimport { CarouselRef } from 'antd/es/carousel';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { createRef } from 'react';\nimport { Translate } from 'components/language';\nimport { useKeyPressEvent } from 'react-use';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional custom class name\n   */\n  ruleClassName?: string;\n  /**\n   * Optional custom class name\n   */\n  actionsClassName?: string;\n};\n\nexport function RulesCarousel({\n  info,\n  className = '',\n  ruleClassName = '',\n  actionsClassName,\n}: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const ref = createRef<CarouselRef>();\n\n  useKeyPressEvent('ArrowLeft', () => {\n    ref.current?.prev();\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    ref.current?.next();\n  });\n\n  return (\n    <div>\n      <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000} ref={ref}>\n        {info.rules[language].map((rule, index) => (\n          <div className={clsx('rules-carousel__rule', className)} key={rule}>\n            <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n            <Image\n              className=\"rules-carousel__image\"\n              src={\n                index === 0\n                  ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                  : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n              }\n              fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n              alt={rule}\n            />\n            <Typography.Paragraph className={clsx('rules-carousel__rule-text', ruleClassName)}>\n              {rule}\n            </Typography.Paragraph>\n          </div>\n        ))}\n      </Carousel>\n      <Space className={clsx('space-container', actionsClassName)}>\n        <Button type=\"default\" ghost onClick={() => ref.current?.prev()} size=\"small\">\n          <DoubleLeftOutlined /> <Translate pt=\"Regra Anterior\" en=\"Previous Rule\" />\n        </Button>\n        <Button type=\"default\" ghost onClick={() => ref.current?.next()} size=\"small\">\n          <Translate pt=\"Próxima Regra\" en=\"Next Rule\" /> <DoubleRightOutlined />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <div className=\"rules-modal-content\">\n            <RulesCarousel info={gameInfo} />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <Instruction contained>\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\ntype TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { Image, Modal, message, Button, notification, Divider, Typography, Switch, Space, Alert } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: PlainObject, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId]);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameName: gameInfo.gameName,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n              className=\"round-corners\"\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {gameInfo.version.startsWith('alpha') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em alpha, não o jogue\"\n                    en=\"This game is still in alpha and shouldn't be played\"\n                  />\n                }\n              />\n            )}\n\n            {gameInfo.version.startsWith('beta') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em beta, prossiga com cuidado\"\n                    en=\"This game is in beta and bugs might be everywhere\"\n                  />\n                }\n              />\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: GameInfo['options'];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options = [], disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n      {(options ?? []).map((option) => (\n        <Typography.Paragraph key={`option-${option.label}`} className=\"create-game-modal-options__option\">\n          <span className=\"create-game-modal-options__label\">{option.label}</span>\n          <span\n            className={clsx(\n              'create-game-modal-options__off',\n              !selectedOptions[option.key] && 'create-game-modal-options--selected'\n            )}\n          >\n            {option?.off ?? ''}\n          </span>\n          <Switch disabled={disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n          <span\n            className={clsx(\n              'create-game-modal-options__on',\n              selectedOptions[option.key] && 'create-game-modal-options--selected'\n            )}\n          >\n            {option?.on ?? ''}\n          </span>\n          {Boolean(option.description) && (\n            <span className=\"create-game-modal-options__option-description\">{option.description}</span>\n          )}\n        </Typography.Paragraph>\n      ))}\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Card, Image, Divider, Badge, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv, truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\nimport { GameTags } from 'components/general/GameTags';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('dev')) {\n    return '#6cb3f6';\n  }\n\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  const major = Number(version.split('.')[0]);\n\n  if (isNaN(major)) {\n    return '#96A0A3';\n  }\n\n  if (major === 0) {\n    return '#F9D859';\n  }\n\n  if (major === 1) {\n    return '#72D984';\n  }\n\n  if (major === 2) {\n    return '#7CBD51';\n  }\n\n  if (major >= 3) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n  isAdmin?: boolean;\n};\n\nexport function GameCard({ game, isAdmin = true }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  const duration = calculateGameAverageDuration(game);\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Space direction=\"vertical\">\n          <Card.Meta\n            title={\n              <span className=\"game-card__title\" title={game.title[language]}>\n                {isDevEnv && `[${game.gameCode}]`} {game.title[language]}\n              </span>\n            }\n            description={`${translate('Baseado em', 'Based on')} ${game.basedOn\n              .split('')\n              .reverse()\n              .join('')}`}\n          />\n\n          <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n\n          {Boolean(game.rules?.[language]?.length > 1) && (\n            <RulesModal\n              gameInfo={game}\n              buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n            />\n          )}\n\n          <GameTags\n            wrap\n            size={[1, 6]}\n            style={{ display: 'flex' }}\n            gameCode={game.gameCode}\n            tags={game.tags}\n          />\n        </Space>\n      </div>\n\n      <div className=\"game-card__actions\">\n        {game.duration && (\n          <Card.Meta\n            description={\n              <>\n                <ClockCircleOutlined /> {duration.min} min - {duration.max} min (Avg: {duration.ideal} min)\n              </>\n            }\n          />\n        )}\n\n        <Divider className=\"game-card__divider\" />\n\n        <Space direction=\"vertical\">\n          <Card.Meta\n            description={translate(\n              `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n              `For ${game.playerCount.min}-${game.playerCount.max} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count\"\n            description={translate(\n              `Melhor com ${game.playerCount.best || '?'} jogadores`,\n              `Best wih ${game.playerCount.best || '?'} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count game-card__margin-bottom\"\n            description={translate(\n              `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n              `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n            )}\n          />\n        </Space>\n\n        {isAdmin && (\n          <div style={{ marginTop: '1rem' }}>\n            {Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n"],"names":["GameTags","tags","gameCode","rest","language","useLanguage","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","v","Boolean","sortTags","wrap","map","color","label","CollapsibleRule","children","title","contained","ghost","header","pt","en","custom","PopoverRule","content","showLabel","type","position","icon","ReadOutlined","buttonProps","RulesCarousel","info","className","ruleClassName","actionsClassName","ref","createRef","useKeyPressEvent","current","prev","next","clsx","autoplay","autoplaySpeed","rules","rule","src","PUBLIC_URL","gameName","fallback","alt","onClick","size","DoubleLeftOutlined","DoubleRightOutlined","RulesList","RulesModal","gameInfo","translate","useState","isVisible","setVisibility","onCloseModal","open","onCancel","footer","Instruction","white","fullWidth","baseClass","RoundsLeftInstruction","round","left","total","forceLastRound","pluralize","TextHighlight","Title","level","align","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","Object","entries","reduce","acc","key","timestamp","LATEST_GAME_IDS","CreateGameModal","navigate","useNavigate","pathname","useLocation","useCopyToClipboard","state","copyToClipboard","setLoader","useLoading","useLocalStorage","getLocalStorage","setLocalStorage","isLoading","setLoading","gameId","setGameId","useGlobalState","setUserId","setUserName","setUserAvatarId","options","setOptions","useEffect","value","message","useCallback","createGame","ADMIN_API","response","data","baseUrl","window","location","href","split","notification","description","JSON","stringify","placement","console","error","block","onOk","okButtonProps","disabled","maskClosable","Options","onChangeOptions","s","selectedOptions","margin","version","startsWith","showIcon","option","off","onChange","e","on","getVersionColor","includes","major","Number","isNaN","GameCard","game","isAdmin","duration","calculateGameAverageDuration","cover","text","direction","isDevEnv","basedOn","reverse","join","summary","style","display","ClockCircleOutlined","min","max","ideal","playerCount","best","truncateRecommended","recommended","marginTop","available"],"sourceRoot":""}