{"version":3,"file":"static/js/page-users.0858241d.chunk.js","mappings":"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","sources":["pages/Me/Users.tsx"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { cloneDeep, merge } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { useTitle } from 'react-use';\n// Ant Design Resources\nimport { App, Button, Input, Select, Space, Typography } from 'antd';\n// Services\nimport { USER_API, USER_API_ACTIONS } from 'services/adapters';\nimport { firestore } from 'services/firebase';\n// Components\nimport { PageLayout } from 'components/layout/PageLayout';\n// Sass\nimport './Me.scss';\n// Components\n\ninterface GameUserEntry {\n  gameName?: GameName;\n  gameId: GameId;\n  startedAt: number;\n  endedAt: number;\n  playerCount: number;\n  placement: number;\n  win?: boolean;\n  last?: boolean;\n  achievements: AchievementKey[];\n}\n\ntype AvatarId = string;\ntype AchievementKey = string;\ntype GameName = string;\ntype DailyEntry = {\n  id: string; // Format YYYY-MM-DD\n  number: number;\n  victory: boolean;\n  hearts: number;\n  letters: string[];\n};\n\n/**\n * User database structure saved in Firestore\n */\ninterface FirebaseUserDB {\n  id: string;\n  isAdmin?: boolean;\n  isGuest?: boolean;\n  preferredLanguage: Language;\n  names: string[]; // unique list but most recent comes last\n  gender?: string;\n  avatars: Record<AvatarId, number>;\n  ratings: Record<GameName, number>;\n  games: Record<GameName, Record<GameId, GameUserEntry>>;\n  blurredImages: Record<ImageCardId, true>;\n  daily: Record<CardId, DailyEntry>;\n}\n\nconst DEFAULT_FIREBASE_USER_DB: FirebaseUserDB = {\n  id: '',\n  names: [],\n  avatars: {},\n  preferredLanguage: 'en',\n  games: {},\n  gender: 'unknown',\n  ratings: {},\n  blurredImages: {},\n  daily: {},\n};\n\nfunction Users() {\n  useTitle('Users - Tarde Divertida');\n  const { message, notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const [selectedUserO, setSelectedUserO] = useState(DEFAULT_FIREBASE_USER_DB);\n  const [selectedUserD, setSelectedUserD] = useState(DEFAULT_FIREBASE_USER_DB);\n\n  const usersQuery = useQuery({\n    queryKey: ['users'],\n    queryFn: async () => {\n      const querySnapshot = await getDocs(\n        query(collection(firestore, 'users'), where('isGuest', '!=', true)),\n      );\n      const result: any[] = [];\n      querySnapshot.forEach((doc) => result.push(doc.data()));\n      return result;\n    },\n  });\n\n  const usersMutation = useMutation({\n    mutationKey: ['users'],\n    mutationFn: async (data: FirebaseUserDB) => {\n      USER_API.run({ action: USER_API_ACTIONS.UPDATE_USER_DB, ...data });\n    },\n    onSuccess: () => {\n      message.success('User updated');\n      queryClient.invalidateQueries({\n        queryKey: ['users'],\n      });\n    },\n    onError: (error: any) => {\n      notification.error({\n        message: 'Error',\n        description: error.message,\n      });\n    },\n  });\n\n  const data: FirebaseUserDB[] = usersQuery.data ?? [];\n\n  const onSelectUserO = (uid: string) => {\n    setSelectedUserO(data.find((e) => e.id === uid) ?? DEFAULT_FIREBASE_USER_DB);\n  };\n\n  const onSelectUserD = (uid: string) => {\n    setSelectedUserD(data.find((e) => e.id === uid) ?? DEFAULT_FIREBASE_USER_DB);\n  };\n\n  const options = data.map((entry) => (\n    <Select.Option key={entry.id} value={entry.id}>\n      <strong>{entry?.names?.[0]}</strong>: {entry.id}\n    </Select.Option>\n  ));\n\n  const selectO = (\n    <Select onChange={onSelectUserO} style={{ minWidth: 300 }}>\n      {options}\n    </Select>\n  );\n\n  const selectD = (\n    <Select onChange={onSelectUserD} style={{ minWidth: 300 }}>\n      {options}\n    </Select>\n  );\n\n  const mergedUser = useMemo(\n    () => merge(cloneDeep(selectedUserO ?? {}), cloneDeep(selectedUserD ?? {})),\n    [selectedUserO, selectedUserD],\n  );\n\n  console.log(data);\n\n  return (\n    <PageLayout>\n      <Typography.Title>Users</Typography.Title>\n      {usersQuery.isLoading && <Typography.Paragraph>Loading...</Typography.Paragraph>}\n      <Space className=\"margin\" style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)' }}>\n        <Space direction=\"vertical\">\n          <Typography.Title level={2}>Origin</Typography.Title>\n          <Space className=\"margin\">{selectO}</Space>\n          <Typography.Paragraph>\n            {selectedUserO?.names?.join(', ') ?? 'No user selected'}\n          </Typography.Paragraph>\n          <Input.TextArea\n            value={JSON.stringify(selectedUserO ?? {}, null, 2)}\n            rows={20}\n            cols={50}\n            className=\"margin\"\n          />\n        </Space>\n\n        <Space direction=\"vertical\">\n          <Typography.Title level={2}>Destination</Typography.Title>\n          <Space className=\"margin\">{selectD}</Space>\n          <Typography.Paragraph>\n            {selectedUserD?.names?.join(', ') ?? 'No user selected'}\n          </Typography.Paragraph>\n          <Input.TextArea\n            value={JSON.stringify(selectedUserD ?? {}, null, 2)}\n            rows={20}\n            cols={50}\n            className=\"margin\"\n          />\n        </Space>\n      </Space>\n\n      <Space direction=\"vertical\">\n        <Typography.Title level={2}>Merge</Typography.Title>\n\n        <Typography.Paragraph>{mergedUser?.names?.join(', ') ?? 'No user selected'}</Typography.Paragraph>\n        <Input.TextArea\n          value={JSON.stringify(mergedUser ?? {}, null, 2)}\n          rows={20}\n          cols={50}\n          className=\"margin\"\n        />\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          loading={usersMutation.isPending}\n          onClick={() => usersMutation.mutate(mergedUser)}\n          disabled={!mergedUser?.id}\n        >\n          Merge Users \"{selectedUserO.id}\" into \"{selectedUserD.id}\"\n        </Button>\n      </Space>\n    </PageLayout>\n  );\n}\n\nexport default Users;\n"],"names":["DEFAULT_FIREBASE_USER_DB","id","names","avatars","preferredLanguage","games","gender","ratings","blurredImages","daily","useTitle","App","useApp","message","notification","queryClient","useQueryClient","useState","selectedUserO","setSelectedUserO","selectedUserD","setSelectedUserD","usersQuery","useQuery","queryKey","queryFn","getDocs","query","collection","firestore","where","querySnapshot","result","forEach","doc","push","data","usersMutation","useMutation","mutationKey","mutationFn","USER_API","run","action","USER_API_ACTIONS","UPDATE_USER_DB","onSuccess","success","invalidateQueries","onError","error","description","options","map","entry","Option","value","selectO","onChange","uid","find","e","style","minWidth","selectD","mergedUser","useMemo","merge","cloneDeep","console","log","Title","isLoading","Paragraph","className","display","gridTemplateColumns","direction","level","join","TextArea","JSON","stringify","rows","cols","type","size","loading","isPending","onClick","mutate","disabled"],"sourceRoot":""}