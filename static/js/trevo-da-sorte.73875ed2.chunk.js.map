{"version":3,"file":"static/js/trevo-da-sorte.73875ed2.chunk.js","mappings":"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","sources":["components/icons/CloverIcon.tsx","components/icons/VerifyListIcon.tsx","components/icons/WritingIcon.tsx","components/players/ReadyPlayersBar.tsx","components/players/TurnOrder.tsx","components/players/WaitingRoom.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","components/steps/Step.tsx","components/steps/StepSwitcher.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/trevo-da-sorte/utils/constants.ts","games/trevo-da-sorte/utils/mock.ts","games/trevo-da-sorte/StepSelectWords.tsx","games/trevo-da-sorte/PhaseWordSelection.tsx","games/trevo-da-sorte/utils/api-requests.ts","games/trevo-da-sorte/utils/helpers.ts","games/trevo-da-sorte/utils/useCloverState.ts","../node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","../node_modules/@ant-design/icons/es/icons/RedoOutlined.js","games/trevo-da-sorte/components/Leaf.tsx","games/trevo-da-sorte/components/LeafSlot.tsx","games/trevo-da-sorte/components/CloverRotationControls.tsx","games/trevo-da-sorte/components/CloverWrite.tsx","games/trevo-da-sorte/StepWriteClues.tsx","games/trevo-da-sorte/PhaseCloverWriting.tsx","games/trevo-da-sorte/components/LeafClue.tsx","games/trevo-da-sorte/components/CloverGuess.tsx","games/trevo-da-sorte/StepGuessClover.tsx","games/trevo-da-sorte/components/CloverWait.tsx","games/trevo-da-sorte/StepWaitClover.tsx","games/trevo-da-sorte/PhaseCloverGuessing.tsx","games/trevo-da-sorte/SessionTrevoDaSorte.tsx","hooks/useBooleanDictionary.ts","hooks/useStep.ts","hooks/useWhichPlayerIsThe.ts","../node_modules/@ant-design/icons-svg/es/asn/LikeFilled.js","../node_modules/@ant-design/icons/es/icons/LikeFilled.js"],"sourcesContent":["export function CloverIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#5eac24\"\n        d=\"M438.93 253.91s-40.8-40.06-108.65-46.44c67.55-6.53 108.16-46.4 108.16-46.4a55.48 55.48 0 000-78.46c-10.02-10.02-24.5-13.82-37.62-14.56a5.96 5.96 0 01-3.57-1.46 5.95 5.95 0 01-2.1-4.2c-.75-13.13-4.55-27.62-14.57-37.64a55.47 55.47 0 00-78.44 0s-41.3 42.06-46.72 111.8C250 66.8 208.69 24.75 208.69 24.75a55.47 55.47 0 00-78.44 0c-10.02 10.02-13.82 24.51-14.57 37.63a5.95 5.95 0 01-2.1 4.21 5.96 5.96 0 01-3.56 1.46c-13.12.74-27.6 4.54-37.63 14.56a55.39 55.39 0 00-9.83 13.3 55.52 55.52 0 009.83 65.15s40.7 39.96 108.37 46.43C113.1 213.95 72.4 253.9 72.4 253.9a55.48 55.48 0 000 78.45c10.02 10.02 24.5 13.82 37.63 14.56 1.36.08 2.6.61 3.56 1.46 1.2 1.02 2 2.52 2.1 4.2.75 13.13 4.55 27.62 14.57 37.64a55.47 55.47 0 0078.44 0s22.37-22.79 36.35-62.61c3.47 24.06 10.96 56.68 26.5 98.23 9.45 25.23 24.6 47.7 43.8 65a111.61 111.61 0 0014.99 11.6 12.9 12.9 0 1013.72-21.86 86.02 86.02 0 01-11.44-8.9c-16.14-14.55-28.9-33.52-36.89-54.89-9.72-25.97-16.08-48.4-20.22-67.2 12.86 26.11 27.12 40.63 27.12 40.63a55.48 55.48 0 0078.45 0c10.02-10.02 13.82-24.5 14.56-37.63.08-1.36.61-2.6 1.45-3.56 1.03-1.2 2.53-2.01 4.21-2.1 13.12-.75 27.62-4.55 37.64-14.57a55.47 55.47 0 000-78.45zm-153.02-45.58a33.5 33.5 0 00-28.88 28.88c-.65 4.97-1.1 9.84-1.37 14.62-.28-4.78-.73-9.65-1.38-14.63a33.5 33.5 0 00-28.88-28.88c-2.53-.33-5.04-.6-7.53-.84 2.49-.23 5-.5 7.54-.83a33.48 33.48 0 0022.98-13.85l.08-.1a33.41 33.41 0 005.81-14.93c.5-3.75.86-7.45 1.14-11.09.28 3.64.64 7.34 1.14 11.09a33.5 33.5 0 0028.88 28.88c2.62.34 5.22.62 7.79.86-2.42.23-4.86.5-7.32.82z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M337.17 504.42c-2.34 0-4.71-.64-6.85-1.98-20.7-13-45.33-40.68-58.77-76.6-17.24-46.27-32.07-99.93-28.64-149.17l.02-.27a12.89 12.89 0 019.47-11.73l.12-.04c1.1-.3 2.25-.45 3.44-.42l.55.01a12.9 12.9 0 0112.2 13.58c-2.66 45.91 11.03 96.09 27.01 138.99 11.18 29.9 31.96 53.5 48.32 63.8 10.95 6.84 6.06 23.83-6.87 23.83z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M294.04 412.22c-6.72-9.58-19.13-2.05-28.94-4.4-13.94-41.05-25.21-87.74-22.19-131.15l.02-.27a12.89 12.89 0 019.47-11.73l.12-.03c1.25-.27 2.41-.42 3.44-.42h.55a12.9 12.9 0 0112.2 13.59c-.09 1.38-6.47 47.31 25.33 134.4z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M256.55 177.77a33.5 33.5 0 0028.88 28.88c94.04 12.32 153.01-45.59 153.01-45.59a55.48 55.48 0 000-78.45c-10.02-10.02-24.5-13.82-37.62-14.56a5.96 5.96 0 01-3.57-1.46 5.95 5.95 0 01-2.1-4.2c-.75-13.13-4.55-27.62-14.57-37.64a55.47 55.47 0 00-78.44 0s-57.91 58.97-45.59 153.02z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M397.24 66.6L262.37 192.67v.01a33.41 33.41 0 01-5.82-14.92c-12.33-94.05 45.59-153.02 45.59-153.02a55.47 55.47 0 0178.44 0c10.02 10.02 13.82 24.51 14.57 37.63.09 1.69.9 3.2 2.1 4.21z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92l-.08.11a33.48 33.48 0 01-22.99 13.85c-94.03 12.32-153-45.59-153-45.59a55.52 55.52 0 01-9.83-65.15 55.38 55.38 0 019.83-13.3c10.02-10.02 24.5-13.82 37.63-14.56a5.96 5.96 0 003.56-1.46 5.947 5.947 0 002.1-4.2c.75-13.13 4.55-27.62 14.57-37.64a55.47 55.47 0 0178.44 0s57.92 58.97 45.59 153.02z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92l-.08.11c-103.07 8.36-167.1-56.24-167.1-56.24a67.32 67.32 0 01-18.73-40.65 55.38 55.38 0 019.83-13.3c10.02-10.02 24.5-13.82 37.63-14.56a5.96 5.96 0 003.57-1.46c1.2-1.02 2-2.52 2.1-4.2.74-13.13 4.54-27.62 14.57-37.64a55.47 55.47 0 0178.44 0s57.9 58.97 45.58 153.02z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92L113.59 66.6c1.2-1.02 2-2.52 2.09-4.2.75-13.13 4.55-27.62 14.57-37.64a55.47 55.47 0 0178.45 0s57.9 58.97 45.58 153.02z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M397.24 66.6L262.37 192.67c4-94.08 60.11-151.23 60.11-151.23a70.6 70.6 0 0153.76-20.61 56.7 56.7 0 014.34 3.9c10.02 10.03 13.82 24.52 14.57 37.64.09 1.69.9 3.2 2.1 4.21z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M285.9 208.33a33.5 33.5 0 00-28.88 28.88c-12.32 94.03 45.6 153 45.6 153a55.48 55.48 0 0078.45 0c10.02-10.02 13.82-24.5 14.56-37.62.08-1.36.61-2.6 1.45-3.57 1.03-1.2 2.53-2 4.21-2.1 13.12-.75 27.62-4.55 37.64-14.57a55.47 55.47 0 000-78.44S379.95 196 285.91 208.33z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M397.08 349.02L271 214.15v-.01a33.41 33.41 0 0114.92-5.82c94.04-12.32 153.02 45.59 153.02 45.59a55.47 55.47 0 010 78.44c-10.02 10.02-24.52 13.82-37.64 14.57-1.68.1-3.19.9-4.2 2.1z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M397.08 349.02L271 214.15c94.09 4 151.23 60.1 151.23 60.1a70.6 70.6 0 0120.62 53.76 56.7 56.7 0 01-3.91 4.34c-10.02 10.02-24.52 13.82-37.64 14.57-1.68.1-3.19.9-4.2 2.1z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M254.28 237.2a33.5 33.5 0 00-28.88-28.88c-94.03-12.32-153 45.59-153 45.59a55.48 55.48 0 000 78.45c10.02 10.02 24.5 13.82 37.63 14.56 1.36.08 2.6.61 3.57 1.46 1.2 1.02 2 2.52 2.09 4.2.75 13.12 4.55 27.62 14.57 37.64a55.47 55.47 0 0078.45 0s57.9-58.98 45.58-153.02zm19.66-2.78c.98-3.26 1.77-4.78 1.36-1.62-.12.91-.62 1.4-1.36 1.62z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M113.59 348.38l134.87-126.1a33.41 33.41 0 015.82 14.92c12.33 94.05-45.58 153.02-45.58 153.02a55.47 55.47 0 01-78.44 0c-10.03-10.02-13.83-24.52-14.58-37.64a5.94 5.94 0 00-2.1-4.2z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M113.59 348.38l134.87-126.1c-4 94.1-60.11 151.23-60.11 151.23a70.6 70.6 0 01-53.75 20.62 56.7 56.7 0 01-4.34-3.9c-10.03-10.03-13.83-24.52-14.58-37.64a5.94 5.94 0 00-2.1-4.21z\"\n      ></path>\n      <path d=\"M444.89 249.34c-15.45-14.96-44.8-32.68-77.61-41.89 48.01-13.44 76.08-40.5 77.66-42.04a62.71 62.71 0 0018.02-51.84 7.52 7.52 0 00-14.93 1.73 47.72 47.72 0 01-13.68 39.43c-.46.45-46.84 45.15-121.6 45.15-8.3 0-16.78-.56-25.17-1.66a26.04 26.04 0 01-22.4-22.4 194.3 194.3 0 01-1.66-25.17c0-74.47 44.71-121.15 45.1-121.56a47.93 47.93 0 0167.82 0c9.22 9.22 11.82 22.9 12.38 32.75a13.53 13.53 0 0012.74 12.74c19.35 1.1 29.77 8.01 36.62 16.75 2.51 3.2 7.15 4.09 10.46 1.73a7.52 7.52 0 001.59-10.73c-9.3-11.99-23.25-21.02-46.48-22.68-.88-12.35-4.55-29.06-16.68-41.19a62.95 62.95 0 00-89.12.05c-1.52 1.54-28.56 29.6-42 77.6-9.34-33.27-27.66-63.1-41.94-77.65a63.06 63.06 0 00-89.07 0c-12.13 12.13-15.8 28.84-16.68 41.2-12.35.87-29.06 4.54-41.19 16.67a62.95 62.95 0 00.05 89.12c14.82 14.57 44.66 32.64 77.6 41.89-48 13.45-76.07 40.5-77.65 42.05-12.93 12.93-19 30.12-18.42 46.17a7.53 7.53 0 008.82 7.2c3.74-.65 6.25-4.12 6.2-7.91a47.65 47.65 0 0113.98-34.79c.46-.45 46.85-45.15 121.6-45.15 8.31 0 16.78.56 25.18 1.66a26.04 26.04 0 0122.4 22.4c3.54 27.15 1.4 53.58-6.43 79.25-12.9 42.3-36.74 67.18-37.02 67.47a47.91 47.91 0 01-67.81 0c-9.21-9.2-11.82-22.89-12.38-32.73a13.53 13.53 0 00-12.74-12.75c-20.9-1.2-32.01-9.13-39.28-20.5a7.52 7.52 0 00-12.67 8.1c11.5 17.95 28.5 25.82 49.76 27.32.89 12.36 4.55 29.07 16.68 41.2a62.93 62.93 0 0089.12-.05c1.15-1.17 17.1-17.72 30.59-46.75 9.14 56.7 23.6 109.03 65.66 146.9a118.34 118.34 0 0016.03 12.38c15.89 9.97 35.48-5.02 30.52-22.8a7.52 7.52 0 00-14.49 4.04 5.39 5.39 0 01-8.04 6.02c-19.44-12.18-42.96-38.71-55.74-72.87-13.66-36.52-20.53-82.22-22.48-99.44-.1-.88 1.16-1.14 1.42-.3a218.8 218.8 0 0015.21 36.64c8.23 43.66 19.85 82.74 50.2 112.77a7.52 7.52 0 0010.57-10.69c-19.93-19.72-29.55-41.3-37.25-67.71 32.75 36.36 102.95 24.19 107.49-39.34 12.35-.87 29.06-4.54 41.2-16.66a62.98 62.98 0 00-.06-89.13zm-220.46-51.12c-46.47 6.1-83.82-6-106.97-17.21-25.27-12.24-39.67-26.15-39.76-26.23a47.92 47.92 0 010-67.82c9.22-9.22 22.9-11.82 32.74-12.38a13.53 13.53 0 0012.75-12.74c.56-9.85 3.16-23.53 12.38-32.74 18.65-18.65 49.07-18.75 67.76-.05.56.56 55.21 57.4 43.5 146.77a26.03 26.03 0 01-22.4 22.4zM256 220.88a40.96 40.96 0 00-13.5-13.48c5.5-3.37 10.13-8 13.5-13.49a41.277 41.277 0 0013.5 13.5 41.03 41.03 0 00-13.5 13.47zm178.3 106.95c-9.22 9.22-22.89 11.82-32.74 12.38a13.53 13.53 0 00-12.74 12.75c-.56 9.84-3.17 23.52-12.38 32.74a47.98 47.98 0 01-67.76.05c-.25-.26-10.81-11.23-21.66-30.98-13.99-25.44-28.44-65.46-21.84-115.8a26.04 26.04 0 0122.4-22.4c56.58-7.42 110.9 11.56 146.73 43.45a47.94 47.94 0 010 67.81z\"></path>\n    </svg>\n  );\n}\n","export function VerifyListIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 173.151a27.596 27.596 0 01-21.806-10.688L13.29 102.944c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 159.126a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 164.795a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689l-46.14-59.524c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.312 25.312 0 003.146-.414z\"\n      ></path>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 339.787a27.596 27.596 0 01-21.806-10.688L13.29 269.58c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 325.762a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 331.431a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689L13.29 269.58c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.133 25.133 0 003.145-.414z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M118.17 437.674l18.449-18.449c10.437-10.437 10.437-27.358 0-37.795-10.437-10.437-27.359-10.437-37.795 0l-18.449 18.449-18.45-18.449c-10.437-10.437-27.359-10.437-37.795 0-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.449c-10.437 10.437-10.437 27.358 0 37.795 10.437 10.437 27.358 10.437 37.795 0l18.449-18.449 18.449 18.449c10.437 10.437 27.359 10.437 37.795 0 10.437-10.437 10.437-27.359 0-37.795z\"\n      ></path>\n      <path\n        fill=\"#fd4755\"\n        d=\"M46.963 493.919c-10.437-10.437-10.437-27.359 0-37.795l18.449-18.449-18.449-18.449c-10.437-10.437-10.437-27.358 0-37.795a26.667 26.667 0 017.481-5.27c-9.915-4.683-22.115-2.929-30.314 5.27-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.448c-10.437 10.437-10.437 27.358 0 37.795 8.199 8.199 20.399 9.953 30.314 5.27a26.663 26.663 0 01-7.481-5.269z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M268.014 156.832h202.073c19.005 0 34.411-15.406 34.411-34.411V62.852c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.412 34.411 34.412zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M300.134 156.828h-32.127c-18.999 0-34.404-15.405-34.404-34.414V62.851c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414z\"\n      ></path>\n      <path d=\"M53.509 167.06c6.599 8.511 16.967 13.592 27.733 13.592.842 0 1.698-.031 2.553-.093a35.02 35.02 0 0028.01-17.744l60.831-107.712c9.517-16.85 3.55-38.301-13.301-47.817-16.85-9.517-38.3-3.547-47.817 13.301L76.642 82.339 62.84 64.535C50.984 49.242 28.897 46.443 13.6 58.301c-15.293 11.857-18.09 33.945-6.235 49.24zM22.79 70.156a19.998 19.998 0 0112.291-4.206c6.005 0 11.949 2.673 15.903 7.775l20.714 26.719a7.49 7.49 0 006.473 2.885 7.495 7.495 0 005.985-3.792l40.422-71.573c5.449-9.648 17.731-13.066 27.381-7.616 9.648 5.449 13.064 17.731 7.616 27.38L98.744 155.439a20.051 20.051 0 01-17.502 10.213c-6.164 0-12.1-2.91-15.879-7.783L19.221 98.351c-6.789-8.758-5.188-21.406 3.569-28.195zm136.542 103.768c-16.845-9.519-38.297-3.556-47.819 13.295l-34.867 61.75-13.806-17.805c-11.865-15.285-33.952-18.082-49.237-6.23-7.411 5.747-12.142 14.033-13.319 23.332-1.178 9.301 1.339 18.503 7.085 25.907l46.142 59.519c6.59 8.51 16.958 13.591 27.734 13.591a35.02 35.02 0 0030.56-17.827l3.944-6.978a7.5 7.5 0 00-2.839-10.22 7.5 7.5 0 00-10.22 2.839l-3.944 6.979a20.056 20.056 0 01-17.501 10.207c-6.171 0-12.105-2.906-15.877-7.778L19.221 264.98a19.945 19.945 0 01-4.057-14.828 19.982 19.982 0 017.63-13.363c8.751-6.784 21.401-5.183 28.194 3.57l20.716 26.716a7.484 7.484 0 006.472 2.884 7.5 7.5 0 005.986-3.792l40.412-71.57c5.452-9.649 17.734-13.062 27.386-7.61a19.94 19.94 0 019.48 12.109 19.96 19.96 0 01-1.864 15.269l-42.181 74.687a7.5 7.5 0 002.842 10.219 7.498 7.498 0 0010.219-2.842l42.18-74.685c4.613-8.163 5.769-17.633 3.256-26.667-2.515-9.038-8.398-16.55-16.56-21.153zm-17.407 202.201c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024L80.378 389.27l-13.145-13.145c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024c-13.344 13.345-13.344 35.057 0 48.401l13.146 13.146-13.147 13.146c-13.344 13.344-13.344 35.057 0 48.401 6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024l13.144-13.145 13.145 13.145c6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024c13.344-13.344 13.344-35.057-.001-48.401l-13.145-13.145 13.146-13.146c13.345-13.344 13.345-35.057 0-48.402zm-10.606 37.795l-18.449 18.449a7.5 7.5 0 000 10.606l18.449 18.449c7.496 7.496 7.496 19.693.001 27.189a19.104 19.104 0 01-13.596 5.631c-5.135 0-9.963-2-13.595-5.631l-18.448-18.449a7.5 7.5 0 00-10.608 0l-18.447 18.449a19.104 19.104 0 01-13.596 5.631 19.1 19.1 0 01-13.594-5.631c-7.496-7.496-7.496-19.693 0-27.189l18.448-18.449a7.497 7.497 0 00.001-10.606L29.438 413.92c-7.496-7.496-7.496-19.693 0-27.189a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631l18.448 18.449a7.5 7.5 0 0010.608 0l18.449-18.449a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631 7.494 7.497 7.494 19.693-.002 27.189zM470.086 20.943H268.018c-23.111 0-41.913 18.802-41.913 41.913v59.562c0 23.111 18.802 41.913 41.913 41.913h131.125c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H268.018c-14.84 0-26.913-12.073-26.913-26.913V62.856c0-14.84 12.073-26.913 26.913-26.913h202.069c14.841 0 26.914 12.073 26.914 26.913v59.562c0 14.84-12.073 26.913-26.914 26.913h-40.993c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h40.993c23.111 0 41.914-18.802 41.914-41.913V62.856c-.001-23.111-18.804-41.913-41.915-41.913zm.001 171.458h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911v-59.567c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911v-59.567c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567zm-26.911 69.98h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911V405.77c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911V405.77c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567z\"></path>\n      <path d=\"M473.995 74.074a7.5 7.5 0 00-7.5-7.5H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887a7.5 7.5 0 007.5-7.5zm-202.387 29.628c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm194.887 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zM399.14 275.16H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15zm67.355 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm-67.355 37.128H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","export function WritingIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M219.421 310.029l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435z\"\n      ></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M117.575 208.182l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435a181.448 181.448 0 01128.303-53.145c66.713 0 128.046 36.609 159.709 95.33L384 277.001l-39.899 150.983z\"\n      ></path>\n      <path\n        fill=\"#91def5\"\n        d=\"M433.343 481.298l-77.274-20.706c-10.669-2.859-17.001-13.826-14.142-24.495l43.482-162.276c2.859-10.669 13.826-17.001 24.495-14.142l77.274 20.706c10.669 2.859 17.001 13.826 14.142 24.495l-43.482 162.276c-2.859 10.669-13.825 17.001-24.495 14.142z\"\n      ></path>\n      <path fill=\"#ffcb7c\" d=\"M295.721 30.003l62.216 62.216L121.075 329.08l-62.216-62.216z\"></path>\n      <path fill=\"#98a1b3\" d=\"M10 377.984L58.839 266.92l62.225 62.226z\"></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M256.466 298.519l-60.583-60.583c-12.497-12.497-32.758-12.497-45.255 0s-12.497 32.758 0 45.255l60.583 60.583c21.915 51.09 72.162 84.211 127.754 84.211h5.136z\"\n      ></path>\n      <path d=\"M489.765 270.726l-77.274-20.705c-10.239-2.743-20.679.186-27.989 6.843l-21.212-39.339c-13.197-24.475-31.711-45.893-53.945-62.517l55.689-55.689c3.905-3.905 3.905-10.237 0-14.143L302.809 22.95c-3.905-3.904-10.237-3.904-14.143 0l-93.991 93.991c-25.233.014-49.846 4.915-73.16 14.572-23.345 9.67-44.242 23.633-62.11 41.5L31.97 200.449c-7.178 7.178-11.13 16.72-11.13 26.87s3.953 19.692 11.13 26.87a37.753 37.753 0 0017.207 9.863L.847 373.959a10 10 0 0013.18 13.18l109.921-48.336a37.763 37.763 0 009.869 17.234c7.408 7.408 17.139 11.112 26.87 11.112s19.462-3.704 26.87-11.112l10.888-10.888 4.36 4.36a148.813 148.813 0 00128.643 88.265c-.764 6.39.542 12.827 3.818 18.5 4.006 6.94 10.476 11.904 18.216 13.978l77.274 20.706a29.939 29.939 0 007.757 1.025c13.244 0 25.398-8.853 28.985-22.239l9.829-36.684c1.43-5.334-1.736-10.817-7.071-12.247-5.332-1.43-10.818 1.736-12.247 7.071l-9.829 36.684c-1.427 5.327-6.921 8.5-12.248 7.071l-77.274-20.706a9.935 9.935 0 01-6.072-4.659 9.938 9.938 0 01-.999-7.588l43.481-162.275c1.428-5.326 6.925-8.496 12.248-7.071l77.274 20.705c5.326 1.428 8.499 6.922 7.071 12.248l-10.354 38.643c-1.43 5.334 1.736 10.817 7.071 12.247 5.331 1.43 10.818-1.736 12.247-7.071l10.354-38.643c4.282-15.979-5.235-32.461-21.214-36.743zM343.821 92.247L204.079 231.989l-1.125-1.125c-5.698-5.698-12.749-9.545-20.424-11.267L326.85 75.276zm-48.083-48.083l16.97 16.97L89.951 283.89l-16.97-16.97zM46.112 240.047c-3.4-3.399-5.272-7.92-5.272-12.728s1.872-9.328 5.272-12.728l27.435-27.436c27.277-27.277 62.128-44.229 99.81-48.897L71.567 240.047c-7.017 7.02-18.437 7.018-25.455 0zm15.995 44.284l41.546 41.546-74.155 32.609zm58.958 30.672l-16.97-16.97 28.217-28.217a41.744 41.744 0 0011.246 20.446l1.125 1.125zm52.348 26.891c-7.019 7.018-18.438 7.017-25.456.001-7.018-7.02-7.018-18.439 0-25.457l10.888-10.888 25.456 25.455zm163.028 76.044a128.854 128.854 0 01-116.04-78.106 10.01 10.01 0 00-2.119-3.129l-60.583-60.583c-8.578-8.577-8.578-22.535 0-31.112 4.155-4.155 9.68-6.444 15.556-6.444s11.401 2.289 15.556 6.444l60.583 60.583c3.905 3.904 10.237 3.904 14.143 0 3.905-3.905 3.905-10.237 0-14.143l-45.316-45.316 76.804-76.804c20.953 15.116 38.383 34.917 50.662 57.689l27.998 51.923z\"></path>\n      <path d=\"M479.32 397.003c-2.64 0-5.21-1.07-7.08-2.931a10.08 10.08 0 01-2.92-7.069c0-2.641 1.06-5.21 2.92-7.08 1.86-1.86 4.44-2.92 7.08-2.92 2.63 0 5.21 1.06 7.07 2.92a10.097 10.097 0 012.93 7.08c0 2.63-1.07 5.21-2.93 7.069a10.09 10.09 0 01-7.07 2.931z\"></path>\n    </svg>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { LikeFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype ReadyPlayersBarProps = {\n  players: GamePlayers;\n  readyText?: string;\n  readyTextPlural?: string;\n  hideNames?: boolean;\n};\n\nexport function ReadyPlayersBar({\n  players,\n  readyText,\n  readyTextPlural,\n  hideNames = false,\n}: ReadyPlayersBarProps) {\n  const { readyPlayers, notReadyPlayers }: { readyPlayers: GamePlayer[]; notReadyPlayers: string[] } =\n    Object.values(players).reduce(\n      (acc: any, player: GamePlayer) => {\n        if (player.ready) {\n          acc.readyPlayers.push(player);\n        } else {\n          acc.notReadyPlayers.push(player.name);\n        }\n        return acc;\n      },\n      {\n        readyPlayers: [],\n        notReadyPlayers: [],\n      }\n    );\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <div className=\"ready-player-bar__bar\">\n        <AntAvatar.Group size=\"small\">\n          {readyPlayers.map((player) => (\n            <Avatar key={player.name} id={player.avatarId} />\n          ))}\n        </AntAvatar.Group>\n        <span className=\"ready-player-bar__speech-bubble\">\n          <Typography.Text>\n            {readyPlayers.length > 1 ? (\n              <Translate pt=\"Estamos prontos!\" en=\"We're ready!\" custom={readyTextPlural} />\n            ) : (\n              <Translate pt=\"Estou pronto!\" en=\"I'm ready!\" custom={readyText} />\n            )}\n          </Typography.Text>\n          <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n        </span>\n      </div>\n      {!hideNames && notReadyPlayers.length > 0 && (\n        <span className=\"ready-player-bar__names\">\n          <Translate pt=\"Esperando\" en=\"Waiting for\" />: {notReadyPlayers.join(', ')}\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { ForwardFilled } from '@ant-design/icons';\n// Helpers\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\n\ntype TurnOrderProps = {\n  players: GamePlayers;\n  order: PlayerId[];\n  activePlayerId?: PlayerId;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  reorderByUser?: PlayerId;\n  title?: string;\n};\n\nexport function TurnOrder({\n  players,\n  order,\n  activePlayerId,\n  reorderByUser,\n  title,\n  className = '',\n}: TurnOrderProps) {\n  const orderList = Boolean(reorderByUser) ? reorder(order, reorderByUser!) : order;\n\n  return (\n    <div className={clsx('game-order', className)}>\n      <header className=\"game-order__title\">\n        <Translate en=\"Player Order\" pt=\"Ordem dos Jogadores\" custom={title} />\n      </header>\n      <ul className=\"game-order__players\">\n        {orderList.map((playerId, index) => {\n          const player = players[playerId];\n          const isActive = activePlayerId === playerId;\n          return (\n            <>\n              <span\n                key={`turn-order-player-${playerId}`}\n                className={clsx('game-order__player', isActive && 'game-order__player--active')}\n                style={isActive ? { backgroundColor: getAvatarColorById(player.avatarId) } : undefined}\n              >\n                <AvatarName player={player} />\n              </span>\n              {index < order.length - 1 && (\n                <span key={`turn-order-player-${playerId}-arrow`} className=\"game-order__arrow\">\n                  <ForwardFilled />\n                </span>\n              )}\n            </>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction reorder(order: PlayerId[], startWith: PlayerId): PlayerId[] {\n  const starterIndex = order.indexOf(startWith);\n\n  return [...order.slice(starterIndex), ...order.slice(0, starterIndex)];\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Instruction, Title } from 'components/text';\nimport { WaitingRoomIcon } from 'components/icons/WaitingRoomIcon';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n\ntype WaitingRoomProps = {\n  players: GamePlayers;\n  title?: any;\n  instruction?: any;\n  children?: any;\n};\n\nexport function WaitingRoom({ players, title, instruction, children }: WaitingRoomProps) {\n  useTemporarilyHidePlayersBar();\n\n  const { translate } = useLanguage();\n\n  return (\n    <div className=\"waiting-room\">\n      <Title>{translate('Pronto!', 'Done!', title)}</Title>\n      <WaitingRoomIcon style={{ width: '6rem' }} />\n      <Instruction>\n        {Boolean(instruction) ? (\n          instruction\n        ) : (\n          <Translate pt=\"Vamos aguardar os outros jogadores!\" en=\"Please wait for the other players!\" />\n        )}\n      </Instruction>\n      {children}\n      <ReadyPlayersBar players={players} />\n    </div>\n  );\n}\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Assets\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\n\ntype RoundAnnouncementProps = {\n  round: GameRound;\n  onPressButton?: GenericFunction;\n  buttonText?: string;\n  time: number;\n  players?: Players;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  children?: any;\n  unskippable?: boolean;\n  circleColor?: Color;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n  circleColor = 'yellow',\n}: RoundAnnouncementProps) {\n  useTemporarilyHidePlayersBar();\n  const { translate } = useLanguage();\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className={clsx('round-announcement__circle', `color-border--${circleColor}`)}></div>\n          <div className={clsx('round-announcement__circle-2', `color-border--${circleColor}`)}></div>\n          <div className=\"round-announcement__number\">{round?.current ?? round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype StepProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  fullWidth?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function Step({ children, fullWidth = false, className }: StepProps) {\n  return <div className={clsx('step', fullWidth && 'step--full-width', className)}>{children}</div>;\n}\n","// Components\nimport { WaitingRoom } from 'components/players';\nimport { Loading } from 'components/loaders';\nimport { Translate } from 'components/language';\n\nconst getWaitingRoomInstruction = (kind: string) => {\n  switch (kind) {\n    case 'SERVER':\n      return (\n        <Translate pt=\"Aguardando o servidor dar sinal de vida\" en=\"Waiting for the server to resuscitate\" />\n      );\n    case 'PLAYERS':\n      return (\n        <Translate\n          pt=\"Vamos aguardar enquanto os outros jogadores terminam!\"\n          en=\"Please wait while other players finish!\"\n        />\n      );\n\n    default:\n      return <Translate pt=\"Aguardando algo acontecer...\" en=\"Waiting for something...\" />;\n  }\n};\n\ntype StepSwitcherProps = {\n  /**\n   * The content of the component\n   */\n  children: JSX.Element[];\n  step: number;\n  conditions?: boolean[];\n  players?: GamePlayers;\n  waitingRoomInstructionType?: 'SERVER' | 'PLAYERS';\n  waitingRoomInstruction?: any;\n  waitingRoomContent?: any;\n};\n\nexport function StepSwitcher({\n  children,\n  step,\n  conditions,\n  players,\n  waitingRoomInstruction,\n  waitingRoomInstructionType = 'PLAYERS',\n  waitingRoomContent = '',\n}: StepSwitcherProps) {\n  if (!players) console.warn('SetSwitcher is being used without `players`, please add it.');\n\n  if (players && step >= children.length) {\n    return (\n      <WaitingRoom\n        players={players}\n        title={<Translate pt=\"Pronto!\" en=\"Done!\" />}\n        instruction={waitingRoomInstruction ?? getWaitingRoomInstruction(waitingRoomInstructionType)}\n      >\n        {waitingRoomContent}\n      </WaitingRoom>\n    );\n  }\n\n  if (!children[step]) {\n    return <Loading />;\n  }\n\n  if (conditions?.[step] ?? true) {\n    return children[step];\n  }\n\n  return <div></div>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","export const ACTIONS = {\n  SUBMIT_BAD_WORDS: 'SUBMIT_BAD_WORDS',\n  SUBMIT_CLUES: 'SUBMIT_CLUES',\n  SUBMIT_GUESS: 'SUBMIT_GUESS',\n  UPDATE_CLOVER_STATE: 'UPDATE_CLOVER_STATE',\n};\n\nexport const ROTATIONS = [0, 90, 180, 270];\n\nexport const WORST_TO_REMOVE = 6;\n","import { shuffle } from 'utils/helpers';\nimport { WORST_TO_REMOVE } from './constants';\nimport { sampleSize } from 'lodash';\n\nexport const mockSelectCards = (cards: DefaultTextCard[]): CardId[] =>\n  shuffle(cards)\n    .slice(0, WORST_TO_REMOVE)\n    .map((card) => card.id);\n\nconst clues = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar'];\n\nexport const mockClues = (): { clues: string[] } => {\n  return { clues: sampleSize(clues, 4) };\n};\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { WORST_TO_REMOVE } from './utils/constants';\nimport { mockSelectCards } from './utils/mock';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\ntype StepSelectWordsProps = {\n  hand: DefaultTextCard[];\n  onSubmitBadWords: GenericFunction;\n};\n\nexport function StepSelectWords({ hand, onSubmitBadWords }: StepSelectWordsProps) {\n  const { isLoading } = useLoading();\n  const alphabeticalHand = useMemo(() => orderBy(hand, 'text'), [hand]);\n\n  const [selectedCards, updateSelectedCard] = useBooleanDictionary({});\n\n  const onSubmit = () => {\n    onSubmitBadWords({ cardsIds: Object.keys(selectedCards) });\n  };\n  const onSubmitMock = () => {\n    onSubmitBadWords({ cardsIds: mockSelectCards(hand) });\n  };\n\n  useMock(() => {\n    onSubmitBadWords({ cardsIds: mockSelectCards(hand) });\n  });\n\n  const selectedCount = Object.keys(selectedCards).length;\n  const isComplete = selectedCount === WORST_TO_REMOVE;\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Seleção das Palavras\" en=\"Words Selection\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={`Selecione ${WORST_TO_REMOVE} palavras que você NÃO quer no jogo`}\n          en={`Select ${WORST_TO_REMOVE} words you DO NOT want in the game`}\n        />\n      </Instruction>\n\n      <ul className=\"y-words-list\">\n        {alphabeticalHand.map((card) => (\n          <li className={clsx('y-words-list__word')} key={card.id}>\n            <TransparentButton\n              onClick={() => updateSelectedCard(card.id)}\n              active={selectedCards[card.id]}\n              activeClass=\"y-words-list__word-selected\"\n            >\n              {card.text}\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmit} disabled={!isComplete || isLoading}>\n          <Translate\n            pt={<>Enviar Palavras ({selectedCount} de 6)</>}\n            en={<>Submit Words ({selectedCount} of 6)</>}\n          />\n        </Button>\n\n        <Button size=\"large\" onClick={onSubmitMock}>\n          <Translate pt=\"Secione pra mim\" en=\"Select for me\" />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitBadWordsAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { WORST_TO_REMOVE } from './utils/constants';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { useStep } from 'hooks/useStep';\nimport { Translate } from 'components/language';\nimport { VerifyListIcon } from 'components/icons/VerifyListIcon';\nimport { StepSelectWords } from './StepSelectWords';\n\nfunction PhaseWordSelection({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const user = useUser(players);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitBadWords = useOnSubmitBadWordsAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.WORD_SELECTION}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={goToNextStep} time={4} circleColor=\"green\" />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<VerifyListIcon />}\n          title={translate('Seleção das Palavras', 'Words Selection')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={`Selecione ${WORST_TO_REMOVE} palavras que você NÃO quer no jogo`}\n              en={`Select ${WORST_TO_REMOVE} words you DO NOT want in the game`}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepSelectWords hand={user.hand} onSubmitBadWords={onSubmitBadWords} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWordSelection;\n","import { TREVO_DA_SORTE_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { ACTIONS } from './constants';\n\nexport function useOnSubmitBadWordsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-bad-words',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Palavras ruins enviadas com sucesso!', 'Bad words submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palavras',\n      'Oops, the application failed to submit words'\n    ),\n  });\n\n  return (payload: SubmitBadWordsPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_BAD_WORDS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitCluesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-clues',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Dicas enviadas com sucesso!', 'Clues submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar dicas',\n      'Oops, the application failed to submit clues'\n    ),\n  });\n\n  return (payload: SubmitCluesPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_CLUES,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Palpites enviadas com sucesso!', 'Guesses submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palpites',\n      'Oops, the application failed to submit guesses'\n    ),\n  });\n\n  return (payload: SubmitGuessPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_GUESS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnUpdateCloverStateAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'update-clover-state',\n    // successMessage: translate('Dicas enviadas com sucesso!', 'Clues submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar atualizar o trevo',\n      'Oops, the application failed to update the clover'\n    ),\n  });\n\n  return (payload: UpdateCoverStatePayload) => {\n    request({\n      action: ACTIONS.UPDATE_CLOVER_STATE,\n      ...payload,\n    });\n  };\n}\n","export const onRotate = (value: number, direction: number = 1) => {\n  return direction === 1 ? value + 90 : value - 90;\n};\n\nexport const parseRotation = (value: number) => {\n  return value % 360;\n};\n","import { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\nimport { onRotate } from './helpers';\n\nexport function useCloverState(\n  mode: CloverMode,\n  clover: Clover,\n  leaves: Leaves,\n  updateCloverState?: GenericFunction\n) {\n  const [clues, setClues] = useState<string[]>(['', '', '', '']);\n  const [rotation, setRotation] = useState<number>(clover.rotation);\n  const [guesses, setGuesses] = useState<YGuesses>({ A: null, B: null, C: null, D: null });\n  const [allowLeafRotation, setAllowLeafRotation] = useState(true);\n  const [activeLeafId, setActiveLeafId] = useState<string | null>(null);\n  const [activeSlotId, setActiveSlotId] = useState<LeafPosition | null>(null);\n\n  useEffectOnce(() => {\n    if (mode === 'write') {\n      setAllowLeafRotation(false);\n\n      const writeGuesses = Object.entries(clover.leaves).reduce(\n        (acc: YGuesses, [key, leafId]) => {\n          const guess: LeafGuess = {\n            leafId,\n            rotation: leaves[leafId].rotation,\n          };\n          acc[key as LeafPosition] = guess;\n          return acc;\n        },\n        { A: null, B: null, C: null, D: null }\n      );\n      setGuesses(writeGuesses);\n    }\n\n    if (mode === 'guess' || mode === 'wait') {\n      setAllowLeafRotation(true);\n      setClues(clover.clues!);\n    }\n  });\n\n  // useEffect(() => {\n  //   if (mode === 'guess') {\n\n  //   }\n  // }, [])\n\n  const [rotations, setRotations] = useState<NumberDictionary>(\n    Object.keys(leaves).reduce((acc: NumberDictionary, leafId) => {\n      acc[leafId] = 0;\n      return acc;\n    }, {})\n  );\n\n  const onRotateLeaf = (e: any, leadId: LeafId) => {\n    e.stopPropagation();\n    const newRotation = onRotate(rotations[leadId]);\n    setRotations((prevState) => ({ ...prevState, [leadId]: newRotation }));\n\n    setActiveLeafId(null);\n    setActiveSlotId(null);\n  };\n\n  const onRotateClover = (direction: number) => {\n    setRotation(onRotate(rotation, direction));\n  };\n\n  const onChangeClue = (targetIndex: LeafIndex, value: string) => {\n    setClues((prevState) => {\n      const copy = [...prevState];\n      copy[targetIndex] = value;\n      return copy;\n    });\n  };\n\n  const onActivateLeaf = (targetLeafId: LeafId) => {\n    if (activeLeafId === targetLeafId) {\n      return setActiveLeafId(null);\n    }\n\n    // Attach leaf to slot\n    // TODO: if duplicated leaf, remove\n    if (activeSlotId) {\n      setGuesses((g) => {\n        const repeat = Object.keys(g).filter((k) => {\n          const key = k as LeafPosition;\n          const l = g[key];\n          return l?.leafId === targetLeafId;\n        });\n\n        const newGuesses = {\n          ...g,\n          [activeSlotId]: {\n            leafId: targetLeafId,\n            rotation: rotations[targetLeafId],\n          },\n        };\n\n        if (repeat.length > 0) {\n          const key = repeat[0] as LeafPosition;\n          newGuesses[key] = null;\n        }\n\n        return newGuesses;\n      });\n\n      setActiveSlotId(null);\n    } else {\n      setActiveLeafId(targetLeafId);\n    }\n  };\n\n  const onActivateSlot = (targetSlotId: LeafPosition) => {\n    // If it's the same slot, deactivate it\n    if (activeSlotId === targetSlotId) {\n      return setActiveSlotId(null);\n    }\n\n    // If slot and slot, swap their leaves\n    if (activeSlotId && activeSlotId !== targetSlotId) {\n      setGuesses((g) => {\n        const activeContent = g[activeSlotId];\n        const targetContent = g[targetSlotId];\n\n        return {\n          ...g,\n          [activeSlotId]: targetContent,\n          [targetSlotId]: activeContent,\n        };\n      });\n\n      setActiveSlotId(null);\n      return;\n    }\n\n    // Attach slot to leaf\n    // TODO: if duplicated leaf, remove\n    if (activeLeafId) {\n      setGuesses((g) => {\n        const repeat = Object.keys(g).filter((k) => {\n          const key = k as LeafPosition;\n          const l = g[key];\n          return l?.leafId === activeLeafId;\n        });\n\n        const newGuesses = {\n          ...g,\n          [targetSlotId]: {\n            leafId: activeLeafId,\n            rotation: rotations[activeLeafId],\n          },\n        };\n\n        if (repeat.length > 0) {\n          const key = repeat[0] as LeafPosition;\n          newGuesses[key] = null;\n        }\n\n        return newGuesses;\n      });\n\n      setActiveLeafId(null);\n    } else {\n      setActiveSlotId(targetSlotId);\n    }\n  };\n\n  const isCluesComplete = clues.every((clue) => clue.trim());\n\n  return {\n    mode,\n    onRotateClover,\n    rotation,\n    onRotateLeaf,\n    rotations,\n    onChangeClue,\n    clues,\n    onActivateLeaf,\n    activeLeafId,\n    onActivateSlot,\n    activeSlotId,\n    guesses,\n    allowLeafRotation,\n    isCluesComplete,\n  };\n}\n","// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\n\nRedoOutlined.displayName = 'RedoOutlined';\nexport default /*#__PURE__*/React.forwardRef(RedoOutlined);","import { RedoOutlined } from '@ant-design/icons';\nimport clsx from 'clsx';\nimport { getAnimationClass } from 'utils/helpers';\n\ntype LeafProps = {\n  leaf: Leaf;\n  allowLeafRotation: boolean;\n  position?: LeafPosition;\n  onRotateLeaf?: (e: any, id: LeafId) => void;\n  allowDragging?: boolean;\n  rotation?: number;\n};\n\nexport function Leaf({\n  leaf,\n  allowLeafRotation,\n  position,\n  onRotateLeaf,\n  allowDragging,\n  rotation,\n}: LeafProps) {\n  return (\n    <div\n      key={`leaf-key-${leaf.id}`}\n      // ref={allowDragging ? drag : undefined}\n      className={clsx(\n        position && `y-clover__leaf-${position}`,\n        'y-clover-leaf',\n        allowDragging && `y-clover-leaf--draggable`,\n\n        getAnimationClass('fadeIn')\n      )}\n      style={{ transform: `rotate(${rotation ?? leaf.rotation}deg)` }}\n    >\n      {leaf.cards.map((card: DefaultTextCard, cIndex: number) => (\n        <div key={card.id} className={clsx('y-clover-leaf__card', `y-clover-leaf__card--${cIndex}`)}>\n          <div className=\"y-clover-leaf__card-text\">{card.text}</div>\n        </div>\n      ))}\n      {allowLeafRotation ? (\n        <button\n          onClick={onRotateLeaf ? (e) => onRotateLeaf(e, leaf.id) : undefined}\n          className=\"y-clover-leaf__center y-clover-leaf__center--rotatable\"\n        >\n          <RedoOutlined />\n        </button>\n      ) : (\n        <div className=\"y-clover-leaf__center\">.</div>\n      )}\n    </div>\n  );\n}\n","import { Avatar } from 'antd';\nimport clsx from 'clsx';\nimport { TransparentButton } from 'components/buttons';\nimport { Leaf } from './Leaf';\n\ntype LeafSlotProps = {\n  leaf?: Leaf;\n  position: LeafPosition;\n  allowLeafRotation: boolean;\n  activeSlotId?: LeafPosition | null;\n  onActivateSlot?: GenericFunction;\n  onRotateLeaf?: (e: any, id: LeafId) => void;\n  rotation?: number;\n};\n\nexport function LeafSlot({\n  leaf,\n  position,\n  allowLeafRotation,\n  onActivateSlot,\n  onRotateLeaf,\n  activeSlotId,\n  rotation,\n}: LeafSlotProps) {\n  // const isActive = isOver && canDrop;\n  // const isActive = false;\n\n  if (Boolean(onActivateSlot)) {\n    return (\n      <TransparentButton\n        onClick={() => onActivateSlot!(position)}\n        active={activeSlotId === position}\n        className={clsx(`y-clover__leaf-${position}`)}\n      >\n        <LeafSlotContent\n          leaf={leaf}\n          allowLeafRotation={true}\n          position={position}\n          onRotateLeaf={onRotateLeaf}\n          onActivateSlot={onActivateSlot}\n          activeSlotId={activeSlotId}\n          rotation={rotation}\n        />\n      </TransparentButton>\n    );\n  }\n\n  return (\n    <div className={clsx(`y-clover__leaf-${position}`)}>\n      <LeafSlotContent\n        leaf={leaf}\n        allowLeafRotation={true}\n        position={position}\n        onRotateLeaf={onRotateLeaf}\n        onActivateSlot={onActivateSlot}\n        activeSlotId={activeSlotId}\n        rotation={rotation}\n      />\n    </div>\n  );\n}\n\nfunction LeafSlotContent({ leaf, position, allowLeafRotation, onRotateLeaf, rotation }: LeafSlotProps) {\n  return Boolean(leaf) ? (\n    <Leaf\n      key={leaf!.id}\n      leaf={leaf!}\n      allowLeafRotation={allowLeafRotation}\n      position={position as LeafPosition}\n      onRotateLeaf={onRotateLeaf}\n      rotation={rotation}\n    />\n  ) : (\n    <div key={`clue-key-${position}`} className={clsx('y-clover-leaf', 'y-clover-leaf--empty')}>\n      <Avatar className=\"y-clover-leaf__empty-avatar\">?</Avatar>\n    </div>\n  );\n}\n","import { RotateLeftOutlined, RotateRightOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n\ntype CloverRotationControlsProps = {\n  onRotateClover: (direction: -1 | 1) => void;\n};\n\nexport function CloverRotationControls({ onRotateClover }: CloverRotationControlsProps) {\n  return (\n    <div className=\"controls space-container center\">\n      <Button icon={<RotateLeftOutlined />} onClick={() => onRotateClover(-1)} />\n      <Button icon={<RotateRightOutlined />} onClick={() => onRotateClover(1)} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { ROTATIONS } from '../utils/constants';\n// Components\nimport { LeafSlot } from './LeafSlot';\nimport { CloverRotationControls } from './CloverRotationControls';\n\ntype CloverWriteProps = {\n  leaves: Leaves;\n  clues: string[];\n  onRotateClover: (direction: number) => void;\n  rotation: number;\n  onChangeClue: (targetIndex: LeafIndex, value: string) => void;\n  results: YGuesses;\n};\n\nexport function CloverWrite({\n  leaves,\n  clues,\n  rotation,\n  onChangeClue,\n  results,\n  onRotateClover,\n}: CloverWriteProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Space className=\"space-container\" align=\"center\">\n      <div className=\"container center\">\n        <div className=\"y-clover\" style={{ transform: `rotate(${rotation}deg)` }}>\n          {/* ANSWERS */}\n          {clues.map((_, index) => {\n            const leafIndex = Number(index) as LeafIndex;\n\n            return (\n              <div\n                key={`clue-key-${leafIndex}`}\n                className={clsx(`y-clover__clue-${leafIndex}`, 'y-clover-clue')}\n              >\n                <Input\n                  onChange={onChangeClue ? (e) => onChangeClue(leafIndex, e.target.value) : undefined}\n                  className={`y-clover-rotation--${ROTATIONS[index]} y-clover-input`}\n                  placeholder={translate('Escreva aqui', 'Write here')}\n                  disabled={!Boolean(onChangeClue)}\n                />\n              </div>\n            );\n          })}\n\n          {/* LEAVES */}\n          {Object.entries(results).map(([leafPosKey, result]) => (\n            <LeafSlot\n              key={`slot-${leafPosKey}`}\n              leaf={result ? leaves[result.leafId] : undefined}\n              allowLeafRotation={false}\n              position={leafPosKey as LeafPosition}\n            />\n          ))}\n        </div>\n\n        <CloverRotationControls onRotateClover={onRotateClover} />\n      </div>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCloverState } from './utils/useCloverState';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockClues } from './utils/mock';\n// Components\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { CloverWrite } from './components/CloverWrite';\n\ntype StepWriteCluesProps = {\n  clover: Clover;\n  leaves: Leaves;\n  onSubmitClues: GenericFunction;\n};\n\nexport function StepWriteClues({ clover, leaves, onSubmitClues }: StepWriteCluesProps) {\n  const { isLoading } = useLoading();\n  const { rotation, onRotateClover, onChangeClue, clues, guesses, isCluesComplete } = useCloverState(\n    'write',\n    clover,\n    leaves\n  );\n\n  const onSubmit = () => {\n    onSubmitClues({ clues });\n  };\n  const onSubmitMock = () => {\n    onSubmitClues(mockClues());\n  };\n\n  useMock(() => {\n    onSubmitClues(mockClues());\n  });\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Escreva as dicas\" en=\"Write clues\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Escreva uma dica para cada um dos pares de palavras na parte de fora do trevo\n              <br />\n              Você pode girar o trevo para ficar mais fácil de escrever\n            </>\n          }\n          en={\n            <>\n              Write a clue for each pair of clues in the outer side of the clover\n              <br />\n              You may rotate the clover before writing\n            </>\n          }\n        />\n      </Instruction>\n\n      <CloverWrite\n        leaves={leaves}\n        clues={clues}\n        rotation={rotation}\n        results={guesses}\n        onRotateClover={onRotateClover}\n        onChangeClue={onChangeClue}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmit} disabled={!isCluesComplete || isLoading}>\n          <Translate pt=\"Enviar dicas\" en=\"Submit clues\" />\n        </Button>\n\n        <DebugOnly devOnly>\n          <Button size=\"large\" onClick={onSubmitMock}>\n            Mock clues\n          </Button>\n        </DebugOnly>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useOnSubmitCluesAPIRequest } from './utils/api-requests';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { WritingIcon } from 'components/icons/WritingIcon';\nimport { StepWriteClues } from './StepWriteClues';\n\nfunction PhaseCloverWriting({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const user = useUser(players);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitClues = useOnSubmitCluesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.CLOVER_WRITING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<WritingIcon />}\n          title={translate('Escreva as dicas', 'Write the clues')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate pt=\"Para cada par, escreva uma dica\" en=\"For each pair, write a clue\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepWriteClues clover={user.clover} leaves={user.leaves} onSubmitClues={onSubmitClues} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCloverWriting;\n","import clsx from 'clsx';\nimport { ROTATIONS } from '../utils/constants';\n\ntype LeafClueProps = {\n  leafIndex: LeafIndex;\n  index: number;\n  children: string;\n};\nexport function LeafClue({ leafIndex, index, children }: LeafClueProps) {\n  return (\n    <div className={clsx(`y-clover__clue-${leafIndex}`, 'y-clover-clue')}>\n      <span className={clsx(`y-clover-rotation--${ROTATIONS[index]}`, 'y-clover-clue-readonly')}>\n        {children}\n      </span>\n    </div>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { LeafSlot } from './LeafSlot';\nimport { CloverRotationControls } from './CloverRotationControls';\nimport { Leaf } from './Leaf';\nimport { Instruction } from 'components/text';\nimport { LeafClue } from './LeafClue';\nimport { TransparentButton } from 'components/buttons';\n\ntype CloverGuessProps = {\n  leaves: Leaves;\n  clues: string[];\n  guesses: YGuesses;\n  onRotateClover: (direction: number) => void;\n  rotation: number;\n  onRotateLeaf: (e: any, leadId: LeafId) => void;\n  rotations: NumberDictionary;\n  onActivateLeaf: GenericFunction;\n  activeLeafId: LeafId | null;\n  onActivateSlot: GenericFunction;\n  activeSlotId: LeafPosition | null;\n};\n\nexport function CloverGuess({\n  leaves,\n  clues,\n  guesses,\n  onRotateClover,\n  rotation,\n  onRotateLeaf,\n  rotations,\n  onActivateLeaf,\n  activeLeafId,\n  onActivateSlot,\n  activeSlotId,\n}: CloverGuessProps) {\n  return (\n    <Space className=\"space-container\" align=\"center\">\n      <div className=\"container center\">\n        <div className=\"y-clover\" style={{ transform: `rotate(${rotation}deg)` }}>\n          {/* ANSWERS */}\n          {clues.map((clue, index) => {\n            const leafIndex = Number(index) as LeafIndex;\n            return (\n              <LeafClue key={`clue-key-${leafIndex}`} leafIndex={leafIndex} index={index}>\n                {clue}\n              </LeafClue>\n            );\n          })}\n\n          {/* LEAVES */}\n          {Object.entries(guesses).map(([leafPosKey, guess], index) => (\n            <LeafSlot\n              key={`slot-${leafPosKey}`}\n              leaf={guess ? leaves[guess.leafId] : undefined}\n              allowLeafRotation={true}\n              position={leafPosKey as LeafPosition}\n              onRotateLeaf={onRotateLeaf}\n              onActivateSlot={onActivateSlot}\n              activeSlotId={activeSlotId}\n              rotation={guess ? rotations[guess.leafId] : undefined}\n            />\n          ))}\n        </div>\n\n        <CloverRotationControls onRotateClover={onRotateClover} />\n      </div>\n\n      <Instruction contained>\n        <Space className=\"space-container\" align=\"center\" wrap>\n          {orderBy(Object.values(leaves), 'id').map((leaf) => {\n            return (\n              <TransparentButton\n                key={leaf.id}\n                onClick={() => onActivateLeaf(leaf.id)}\n                active={activeLeafId === leaf.id}\n              >\n                <div className=\"y-leaf-loose\">\n                  <Leaf\n                    leaf={leaf}\n                    allowLeafRotation\n                    allowDragging\n                    onRotateLeaf={onRotateLeaf}\n                    rotation={rotations?.[leaf.id]}\n                  />\n                </div>\n              </TransparentButton>\n            );\n          })}\n        </Space>\n      </Instruction>\n    </Space>\n  );\n}\n","import { Button, Space } from 'antd';\n\nimport { AvatarName } from 'components/avatars';\n\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\nimport { useLoading } from 'hooks/useLoading';\nimport { CloverGuess } from './components/CloverGuess';\n\nimport { mockClues } from './utils/mock';\nimport { useCloverState } from './utils/useCloverState';\n\ntype StepGuessCloverProps = {\n  clover: Clover;\n  leaves: Leaves;\n  onSubmitGuess: GenericFunction;\n\n  activeCloverPlayer: GamePlayer;\n  isUserTheCloverPlayer: boolean;\n};\n\nexport function StepGuessClover({ clover, leaves, onSubmitGuess, activeCloverPlayer }: StepGuessCloverProps) {\n  const { isLoading } = useLoading();\n  const {\n    rotation,\n    rotations,\n    onRotateLeaf,\n    onRotateClover,\n    guesses,\n    clues,\n    onActivateLeaf,\n    activeLeafId,\n    onActivateSlot,\n    activeSlotId,\n  } = useCloverState('guess', clover, leaves);\n\n  const onSubmit = () => {\n    // onSubmitGuess({ clues });\n  };\n  const onSubmitMock = () => {\n    onSubmitGuess(mockClues());\n  };\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Adivinhação do trevo do(a) <AvatarName player={activeCloverPlayer} />\n            </>\n          }\n          en={\n            <>\n              Guessing <AvatarName player={activeCloverPlayer} />\n              's clover\n            </>\n          }\n        />\n      </Title>\n      <Instruction contained>\n        <Translate pt={<>??</>} en={<>??</>} />\n      </Instruction>\n\n      <CloverGuess\n        leaves={leaves}\n        clues={clues}\n        onRotateClover={onRotateClover}\n        rotation={rotation}\n        onRotateLeaf={onRotateLeaf}\n        rotations={rotations}\n        guesses={guesses}\n        onActivateLeaf={onActivateLeaf}\n        activeLeafId={activeLeafId}\n        onActivateSlot={onActivateSlot}\n        activeSlotId={activeSlotId}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmit} disabled={isLoading}>\n          <Translate pt=\"Enviar adivinhação\" en=\"Submit guess\" />\n        </Button>\n\n        <DebugOnly devOnly>\n          <Button size=\"large\" onClick={onSubmitMock} disabled>\n            Mock clues\n          </Button>\n        </DebugOnly>\n      </Space>\n    </Step>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { LeafSlot } from './LeafSlot';\nimport { CloverRotationControls } from './CloverRotationControls';\nimport { Leaf } from './Leaf';\nimport { Instruction } from 'components/text';\nimport { LeafClue } from './LeafClue';\n\ntype CloverWaitProps = {\n  leaves: Leaves;\n  clues: string[];\n  guesses: YGuesses;\n  onRotateClover: (direction: number) => void;\n  rotation: number;\n  onRotateLeaf: (e: any, leadId: LeafId) => void;\n  rotations: NumberDictionary;\n};\n\nexport function CloverWait({\n  leaves,\n  clues,\n  guesses,\n  onRotateClover,\n  rotation,\n  onRotateLeaf,\n  rotations,\n}: CloverWaitProps) {\n  return (\n    <Space className=\"space-container\" align=\"center\">\n      <div className=\"container center\">\n        <div className=\"y-clover\" style={{ transform: `rotate(${rotation}deg)` }}>\n          {/* ANSWERS */}\n          {clues.map((clue, index) => {\n            const leafIndex = Number(index) as LeafIndex;\n            return (\n              <LeafClue key={`clue-key-${leafIndex}`} leafIndex={leafIndex} index={index}>\n                {clue}\n              </LeafClue>\n            );\n          })}\n\n          {/* LEAVES */}\n          {Object.entries(guesses).map(([leafPosKey, result]) => (\n            <LeafSlot\n              key={`slot-${leafPosKey}`}\n              allowLeafRotation={false}\n              position={leafPosKey as LeafPosition}\n            />\n          ))}\n        </div>\n\n        <CloverRotationControls onRotateClover={onRotateClover} />\n      </div>\n\n      <Instruction contained>\n        <Space className=\"space-container\" align=\"center\" wrap>\n          {orderBy(Object.values(leaves), 'id').map((leaf, index) => {\n            return (\n              <div className=\"y-leaf-loose\" key={leaf.id}>\n                <Leaf\n                  leaf={leaf}\n                  allowLeafRotation\n                  allowDragging\n                  onRotateLeaf={onRotateLeaf}\n                  rotation={rotations?.[leaf.id]}\n                />\n              </div>\n            );\n          })}\n        </Space>\n      </Instruction>\n    </Space>\n  );\n}\n","import { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { CloverWait } from './components/CloverWait';\nimport { useCloverState } from './utils/useCloverState';\n\ntype StepWaitCloverProps = {\n  activeCloverPlayer: GamePlayer;\n  clover: Clover;\n  leaves: Leaves;\n};\n\nexport function StepWaitClover({ activeCloverPlayer, clover, leaves }: StepWaitCloverProps) {\n  const { rotation, rotations, onRotateLeaf, onRotateClover, guesses, clues } = useCloverState(\n    'wait',\n    clover,\n    leaves\n  );\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Adivinhação do trevo do(a) <AvatarName player={activeCloverPlayer} />\n            </>\n          }\n          en={\n            <>\n              Guessing <AvatarName player={activeCloverPlayer} />\n              's clover\n            </>\n          }\n        />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Aguarde enquanto os outros jogadores tentam adivinhar.\n              <br />\n              Enquanto isso, veja as cartas que eles tem disponíveis.\n            </>\n          }\n          en={\n            <>\n              Wait while other players are trying to guess your clover.\n              <br /> In the meantime, check it out the cards they have available.\n            </>\n          }\n        />\n      </Instruction>\n\n      <CloverWait\n        leaves={leaves}\n        clues={clues}\n        onRotateClover={onRotateClover}\n        rotation={rotation}\n        onRotateLeaf={onRotateLeaf}\n        rotations={rotations}\n        guesses={guesses}\n      />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useOnSubmitGuessAPIRequest, useOnUpdateCloverStateAPIRequest } from './utils/api-requests';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { TDIcon } from 'components/icons/TDIcon';\n\nimport { Translate } from 'components/language';\nimport { StepWriteClues } from './StepWriteClues';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { StepGuessClover } from './StepGuessClover';\n\nimport { CloverIcon } from 'components/icons/CloverIcon';\nimport { ViewOr } from 'components/views';\nimport { StepWaitClover } from './StepWaitClover';\n\nfunction PhaseCloverGuessing({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n\n  const [activeCloverPlayer, isUserTheCloverPlayer] = useWhichPlayerIsThe('activeCloverId', state, players);\n\n  const onSubmitGuess = useOnSubmitGuessAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.CLOVER_GUESSING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<CloverIcon />}\n          title={translate('Hora de Adivinhar', 'Time to guess')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt=\"De um em um, vamos tentar adivinhar a posição das folhas em cada trevo\"\n              en=\"One at a time, let's try to guess the position of each leaf on each clover\"\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheCloverPlayer}>\n          <StepWaitClover\n            activeCloverPlayer={activeCloverPlayer}\n            clover={state.clover}\n            leaves={state.leaves}\n          />\n\n          <StepGuessClover\n            clover={state.clover}\n            leaves={state.leaves}\n            onSubmitGuess={onSubmitGuess}\n            activeCloverPlayer={activeCloverPlayer}\n            isUserTheCloverPlayer={isUserTheCloverPlayer}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCloverGuessing;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhasePlaceholder, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWordSelection from './PhaseWordSelection';\nimport PhaseCloverWriting from './PhaseCloverWriting';\n// Fonts\nimport 'assets/fonts/architects-daughter.scss';\nimport PhaseCloverGuessing from './PhaseCloverGuessing';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.GRASS,\n  },\n});\n\nfunction SessionTrevoDaSorte({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.TREVO_DA_SORTE.WORD_SELECTION:\n        return PhaseWordSelection;\n      case PHASES.TREVO_DA_SORTE.CLOVER_WRITING:\n        return PhaseCloverWriting;\n      case PHASES.TREVO_DA_SORTE.CLOVER_GUESSING:\n        return PhaseCloverGuessing;\n      case PHASES.TREVO_DA_SORTE.RESULTS:\n        return PhasePlaceholder;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhasePlaceholder;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.TREVO_DA_SORTE}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionTrevoDaSorte;\n","import { useState } from 'react';\n\nexport function useBooleanDictionary(\n  /**\n   * The initial state, usually an empty object\n   */\n  initialState: BooleanDictionary,\n  // Confirm if entry can be added to the dictionary\n  validation?: BooleanFunction\n): [BooleanDictionary, GenericFunction] {\n  const [dict, setDict] = useState(initialState);\n\n  const updateDict = (key: string) => {\n    const isValid = !validation || validation(dict);\n    if (!dict[key] && isValid) {\n      setDict((s) => ({\n        ...s,\n        [key]: true,\n      }));\n    } else {\n      const dictCopy = { ...dict };\n      delete dictCopy[key];\n      setDict(dictCopy);\n    }\n  };\n\n  return [dict, updateDict];\n}\n","import { useState } from 'react';\n\n/**\n * Controls steps\n * @param startingStep\n */\nexport function useStep(startingStep = 0): {\n  step: number;\n  setStep: React.Dispatch<React.SetStateAction<number>>;\n  goToNextStep: GenericFunction;\n  goToPreviousStep: GenericFunction;\n} {\n  const [step, setStep] = useState<number>(startingStep);\n\n  const goToNextStep = () => setStep((s) => s + 1);\n\n  const goToPreviousStep = () => setStep((s) => (s - 1 < 0 ? 0 : s - 1));\n\n  return {\n    step,\n    setStep,\n    goToNextStep,\n    goToPreviousStep,\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: Players = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","// This icon file is generated automatically.\nvar LikeFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 00-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4A106.62 106.62 0 00471 99.9c-52 0-98 35-111.8 85.1l-85.9 311h-.3v428h472.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-.2-12.6-2-25.1-5.6-37.1zM112 528v364c0 17.7 14.3 32 32 32h65V496h-65c-17.7 0-32 14.3-32 32z\" } }] }, \"name\": \"like\", \"theme\": \"filled\" };\nexport default LikeFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LikeFilledSvg from \"@ant-design/icons-svg/es/asn/LikeFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LikeFilled = function LikeFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LikeFilledSvg\n  }));\n};\n\nLikeFilled.displayName = 'LikeFilled';\nexport default /*#__PURE__*/React.forwardRef(LikeFilled);"],"names":["CloverIcon","props","xmlns","viewBox","fill","d","VerifyListIcon","WritingIcon","ReadyPlayersBar","players","readyText","readyTextPlural","hideNames","Object","values","reduce","acc","player","ready","readyPlayers","push","notReadyPlayers","name","length","className","size","map","id","avatarId","pt","en","custom","LikeFilled","join","TurnOrder","order","activePlayerId","reorderByUser","title","orderList","Boolean","startWith","starterIndex","indexOf","slice","reorder","clsx","playerId","index","isActive","style","backgroundColor","getAvatarColorById","undefined","ForwardFilled","WaitingRoom","instruction","children","useTemporarilyHidePlayersBar","translate","useLanguage","WaitingRoomIcon","width","RoundAnnouncement","round","onPressButton","buttonText","time","unskippable","circleColor","src","roundTitlePt","roundTitleEn","alt","getAnimationClass","current","type","onClick","onExpire","duration","disabled","Step","fullWidth","getWaitingRoomInstruction","kind","StepSwitcher","step","conditions","waitingRoomInstruction","waitingRoomInstructionType","waitingRoomContent","console","warn","View","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","Error","ACTIONS","ROTATIONS","mockSelectCards","cards","shuffle","card","clues","mockClues","sampleSize","StepSelectWords","hand","onSubmitBadWords","isLoading","useLoading","alphabeticalHand","useMemo","orderBy","useBooleanDictionary","selectedCards","updateSelectedCard","useMock","cardsIds","selectedCount","keys","isComplete","contained","active","activeClass","text","align","state","info","isUserReady","useIsUserReady","user","useUser","useStep","goToNextStep","setStep","request","useAPICall","apiFunction","TREVO_DA_SORTE_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitBadWordsAPIRequest","phase","allowedPhase","PHASES","icon","onClose","currentRound","onRotate","value","direction","useCloverState","mode","clover","leaves","updateCloverState","useState","setClues","rotation","setRotation","A","B","C","D","guesses","setGuesses","allowLeafRotation","setAllowLeafRotation","activeLeafId","setActiveLeafId","activeSlotId","setActiveSlotId","useEffectOnce","writeGuesses","entries","key","leafId","guess","rotations","setRotations","isCluesComplete","every","clue","trim","onRotateClover","onRotateLeaf","e","leadId","stopPropagation","newRotation","prevState","onChangeClue","targetIndex","copy","onActivateLeaf","targetLeafId","g","repeat","filter","k","l","newGuesses","onActivateSlot","targetSlotId","activeContent","targetContent","RedoOutlined","ref","React","AntdIcon","_objectSpread","RedoOutlinedSvg","displayName","Leaf","leaf","position","allowDragging","transform","cIndex","LeafSlot","LeafSlotContent","CloverRotationControls","RotateLeftOutlined","RotateRightOutlined","CloverWrite","results","_","leafIndex","Number","onChange","target","placeholder","leafPosKey","result","StepWriteClues","onSubmitClues","devOnly","useOnSubmitCluesAPIRequest","LeafClue","CloverGuess","wrap","StepGuessClover","onSubmitGuess","activeCloverPlayer","CloverWait","StepWaitClover","useWhichPlayerIsThe","isUserTheCloverPlayer","useOnSubmitGuessAPIRequest","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWordSelection","PhaseCloverWriting","PhaseCloverGuessing","PhasePlaceholder","PageError","initialState","validation","dict","setDict","isValid","s","dictCopy","startingStep","goToPreviousStep","propertyName","useGlobalState","userId","activePlayer","setActivePlayer","isUser","setIsUser","useEffect","LikeFilledSvg"],"sourceRoot":""}